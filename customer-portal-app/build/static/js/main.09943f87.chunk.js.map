{"version":3,"sources":["context/AuthContext.js","context/PortalUserContext.js","context/ThemeSettingsContext.js","components/layout/Header.js","api/default-setup/AxiosInstance.js","api/portal-user/PortalUserAPI.js","route/ProtectedRoute.js","route/PublicRoute.js","components/form/InputText.js","components/button/ButtonText.js","container/authorization/login/Form.js","api/auth/AuthAPI.js","api/portal-settings/PortalSettingsAPI.js","api/general/MeAPI.js","container/authorization/login/index.js","container/authorization/two-factor/index.js","container/authorization/two-factor/recover.js","container/authorization/register/Form.js","container/authorization/register/index.js","container/authorization/forgot/Form.js","container/authorization/forgot/index.js","container/authorization/reset/Form.js","container/authorization/reset/index.js","components/general/LoadingView.js","api/contact/ContactAPI.js","helpers/RebaseContact.js","container/dashboard/widget/index.js","container/dashboard/widget/default.js","api/dashboard/DashboardSettingsAPI.js","container/dashboard/index.js","components/general/TextBlock.js","container/contact-details/default-form-personal/View.js","components/form/Select.js","data/Countries.js","data/EnergySuppliers.js","data/Titles.js","data/LastNamePrefixes.js","components/form/InputTextDate.js","container/contact-details/default-form-personal/Edit.js","helpers/ValidationSchemaPersonal.js","container/contact-details/Personal.js","container/contact-details/default-form-organisation/View.js","container/contact-details/default-form-organisation/Edit.js","helpers/ValidationSchemaOrganisation.js","container/contact-details/Organisation.js","container/contact-details/index.js","container/my-areas-of-interest/Form.js","container/my-areas-of-interest/index.js","api/project/ProjectAPI.js","helpers/MoneyPresenter.js","helpers/CalculateTransactionCosts.js","components/form/InputTextCurrency.js","container/register/steps/StepOneLoan.js","container/register/steps/StepOneObligation.js","container/register/steps/StepOneCapital.js","container/register/steps/StepOnePcr.js","container/register/steps/StepTwo.js","container/register/steps/StepThree.js","components/general/ViewHtmlAsText.js","api/participant-project/ParticipantProjectAPI.js","container/register/steps/StepFour.js","container/register/steps/StepFive.js","container/register/steps/index.js","container/register/MasterForm.js","container/register/index.js","container/project/list/address-person/Edit.js","container/project/list/address-organisation/Edit.js","container/project/list/index.js","container/project/details/LoanDetails.js","container/project/details/ObligationDetails.js","container/project/details/CapitalDetails.js","container/project/details/PcrDetails.js","container/project/details/index.js","container/registration/list/index.js","container/authorization/new-account/NewAccountFormPersonal.js","container/authorization/new-account/NewAccountFormOrganisation.js","container/authorization/new-account/index.js","container/authorization/new-account/NewAccountSuccess.js","container/authorization/change-account/Email.js","container/authorization/change-account/Password.js","container/authorization/change-account/TwoFactorSettings.js","container/authorization/change-account/index.js","container/about-us/list/index.js","container/registration/details/Title.js","helpers/ValueBasedOnTypePresenter.js","container/registration/details/project-table/index.js","helpers/classNameBasedOnTypePresenter.js","container/registration/details/mutation-table/index.js","container/registration/details/document-table/index.js","container/registration/details/index.js","container/financial-overview-documents/list/index.js","api/administration/AdministrationAPI.js","container/about-us/details/document-table/index.js","container/about-us/details/index.js","api/participant-mutation/ParticipantMutationAPI.js","container/register/mollie-redirect/index.js","api/quotation-request/QuotationRequestAPI.js","container/inspect/list/index.js","container/inspect/details/document-table/index.js","container/inspect/details/index.js","api/document/DocumentAPI.js","components/pdf/CustomNavigation.js","components/pdf/PdfViewer.js","container/inspect/details/document/index.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","localStorageToken","AuthProvider","props","useState","window","localStorage","getItem","checkIfAuth","isAuth","setAuth","Provider","value","login","payload","cbRedirect","token","access_token","removeItem","setItem","moment","format","logout","force","children","AuthConsumer","Consumer","PortalUserContext","user","setInitialUserData","PortalUserProvider","setUser","currentSelectedContact","setCurrentContact","selectedContactId","id","occupationUser","occupations","find","occupation","primaryContact","organisationUser","typeId","primary","switchCurrentContact","contact","resetCurrentUserToDefault","updateNameSelectedContact","fullNameFnf","firstName","lastNamePrefix","lastName","updatedOccupations","map","occupationContact","PortalUserConsumer","ThemeSettingsContext","defaultThemeSettings","setInitialThemeSettings","setCurrentThemeSettings","switchToDefaultThemeSettings","ThemeSettingsProvider","setDefaultThemeSettings","currentThemeSettings","Date","now","imageHash","useEffect","document","documentElement","style","setProperty","portal_image_bg_file_name_header","portal_main_background_color","portal_main_text_color","portal_background_color","portal_background_text_color","login_header_background_color","login_header_background_text_color","header_icons_color","login_field_background_color","login_field_background_text_color","button_color","button_text_color","ThemeSettingsConsumer","withRouter","location","history","menuOpen","updateStateMenu","closeMenu","formatProfilePicName","replace","redirect","to","push","ref","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","useOutsideAlerter","useRef","className","isCoach","length","ReactHtmlParser","alignRight","Toggle","marginTop","Menu","Header","Item","onClick","active","occupationForPortal","key","xs","undefined","portal_logo_file_name_header","src","fontSize","marginLeft","padding","disabled","Divider","pathname","Button","right","width","isOpen","onStateChange","state","handleStateChange","customBurgerIcon","Fragment","hasFinancialOverviews","BASE_URL","__SERVER_DATA__","base_url","axiosInstance","axios","create","baseURL","interceptors","request","use","config","lastActivity","add","hash","setTimeout","reload","checkTokenExpiration","AUTH_TOKEN","TWO_FACTOR_TOKEN","headers","Authorization","TwoFactorToken","error","Promise","reject","get","params","jory","fld","rlt","values","post","ProtectedRoute","Component","component","rest","useLocation","useHistory","useContext","PortalUserAPI","then","data","portalSettingsLayoutAssigned","catch","response","status","alert","code","includes","render","ProtectedRouteWithContext","PublicRoute","InputText","field","type","readOnly","placeholder","showErrorMessage","errors","touched","classNameErrorMessage","customOnChange","onChange","name","Boolean","defaultProps","ButtonText","buttonClassName","buttonText","onClickAction","loading","title","loadingSpinnerColor","size","color","validationSchema","Yup","shape","username","email","required","password","LoginForm","handleSubmit","initialValues","enableReinitialize","onSubmit","actions","setSubmitting","isSubmitting","AUTH_KEY","client_id","client_secret","client_key","grant_type","requestUrl","defaults","common","loginCredentials","keys","PasswordConfirmation","recovery_code","isLoading","setIsLoading","showError","toggleError","redirectToReferrer","toggleRedirect","from","portalActive","setPortalActive","showNewAtCooperativeLink","setShowNewAtCooperativeLink","newAtCooperativeLinkText","setNewAtCooperativeLinkText","AuthAPI","MeAPI","hasTwoFactorEnabled","hasValidToken","PortalSettingsAPI","fluid","sm","md","lg","xl","alt","variant","href","setCode","preventDefault","e","autoFocus","min","matches","passwordConfirmation","oneOf","RegisterForm","Register","match","showLoginLink","setLoginLink","errorMessage","setErrorMessage","showSuccessMessage","toggleSuccessMessage","registrationCode","decodeURIComponent","password_confirmation","message","RegisterWithContext","ForgotForm","Forgot","ResetForm","Reset","ResetWithContext","Loading","height","person","organisation","emailAddresses","phoneNumbers","addresses","country","primaryAddressEnergySupplierElectricity","energySupplier","flt","f","d","participations","project","projectType","administration","registerValues","contactId","projectId","responseType","contactData","emptyPrimaryAddressEnergySupplierElectricity","energySupplierId","esNumber","memberSince","emptyAddress","street","number","addition","postalCode","city","countryId","eanElectricity","eanGas","primaryAddress","visitAddress","postalAddress","invoiceAddress","address","emptyEmail","emailCorrespondence","emailAddress","emailInvoice","emptyPhoneNumber","phoneNumberPrimary","phoneNumber","phoneNumberTwo","filter","DashboardWidget","text","image","buttonLink","backgroundColorUsed","textColorUsed","externalLink","toLowerCase","startsWith","Card","backgroundColor","CardImg","whiteSpace","ContactDetailsDashboardWidget","typeContact","isEmpty","SwitchContactDashboardWidget","display","justifyContent","overflowX","margin","Dashboard","setLoading","setContact","dashboardSettings","setDashboardSettings","prevCurrentSelectedContact","usePrevious","ContactAPI","rebaseContact","console","log","finally","DashboardSettingsAPI","LoadingView","welcomeTitle","welcomeMessage","widgets","w","sort","a","b","order","widget","codeRef","widgetImageFileName","defaultWidgetBackgroundColor","defaultWidgetTextColor","CoachDashboard","DashboardWithContext","TextBlock","showPlaceholder","DefaultContactPersonalView","portalSettings","initialContact","iban","ibanAttn","didAgreeAvg","dateDidAgreeAvg","initials","dateOfBirth","checked","htmlFor","Select","options","optionLabel","emptyOption","option","InputTextDate","max","step","DefaultContactPersonalEdit","projectTypeCodeRef","setFieldValue","memberSinceDisabledBefore","memberSinceDisabledAfter","endDatePrevious","memberSinceNext","subtract","Titles","disableChangeContactNameOnPortal","data-tip","data-for","effect","place","multiline","aria-haspopup","LastNamePrefixes","isParticipant","onChangeAction","blockChangeAddress","blockChangeAddressNumber","isParticipantSceProject","isParticipantPcrProject","isNaN","trim","Countries","toUpperCase","EnergySuppliers","validationSchemaBasic","test","nullable","Number","isInteger","this","parent","search","ibantools","validationSchemaAdditional","typeError","validationSchemaPcrAdditional","validationSchemaPostalCodeAndNumber","ContactDetailsPersonal","handleSubmitContactValues","editButtonGroup","editForm","setEditForm","ValidationSchemaPersonal","concat","aria-label","DefaultContactOrganisationView","primaryOccupations","chamberOfCommerceNumber","vatNumber","website","DefaultContactOrganisationEdit","ContactDetailsOrganisation","ValidationSchemaOrganisation","ContactDetails","setPortalSettings","callFetchContact","switchToView","updatedContact","setStatus","setState","hasError","ContactDetailsWithContext","MyAreasOfInterestForm","arrayHelpers","myAreasOfInterest","myAreaOfInterest","index","participation","generalOptions","generalOption","MyAreasOfInterest","and","o","documentAgreeTerms","documentUnderstandInfo","documentProjectInfo","amount","parseFloat","toLocaleString","minimumFractionDigits","maximumFractionDigits","amountOptioned","participationsOptioned","transactionCosts","varAmountOptioned","toString","varParticipationsOptioned","toFixed","transactionCostsCodeRef","transactionCostsAmount","currentBookWorth","transactionCostsAmount3","transactionCostsPercentage3","transactionCostsAmount2","transactionCostsPercentage2","transactionCostsPercentage","transactionCostsAmountMin","transactionCostsAmountMax","InputTextCurrency","StepOneLoan","next","contactProjectData","initialRegisterValues","handleSubmitRegisterValues","transform","originalvalue","minAmountLoan","maxAmountLoan","choiceMembership","showQuestionAboutMembership","belongsToMembershipGroup","calculateAmount","calculateTransactionCostsAmount","useTransactionCostsWithMembership","calculateTransactionCosts","calculateTotalAmount","totalAmount","Label","MoneyPresenter","textIsMemberMerged","textIsNoMemberMerged","textBecomeMemberMerged","textBecomeNoMemberMerged","textTransactionCosts","StepOneObligation","integer","minParticipations","maxParticipations","positive","StepOneCapital","StepOnePcr","pcrYearlyPowerKwhConsumption","pcrPostalCode","checkPostalcodeLink","postalcodeLink","substring","pcrNumberOfSolarPanels","pcrInputGeneratedNumberOfKwh","PCR_POWER_KWH_CONSUMPTION_PERCENTAGE","PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL","calculateEstimatedGeneratedNumberOfKwh","calculateGeneratedNumberOfKwh","calculatePowerKwhConsumption","powerKwhConsumption","pcrEstimatedGeneratedNumberOfKwh","Math","ceil","pcrAdviseMaxNumberOfParticipations","calculateAdviseMaxNumberOfParticipations","pcrHasSolarPanels","pcrEstimatedRevenueOk","StepTwo","previous","StepThree","didAcceptAgreement","didUnderstandInfo","downloadFile","filename","ProjectAPI","fileDownload","dangerouslySetInnerHTML","__html","textAgreeTermsMerged","textLinkAgreeTermsMerged","textLinkUnderstandInfoMerged","usesMollie","ViewHtmlAsText","participantId","StepFour","setSucces","contactDocument","setContactDocument","didAgreeRegistration","contactDocumentOk","ParticipantProjectAPI","econobisPaymentLink","textAcceptAgreementMerged","textAcceptAgreementQuestionMerged","StepFive","textRegistrationFinishedMerged","split","item","Steps","currentStep","MasterForm","setStep","RegisterProject","initialPcrValues","setRegisterValues","setProject","isSucces","setContactProjectData","all","spread","payloadProject","payloadContact","payloadContactProjectData","projectRegisterIndicators","allowChangeParticipation","allowPayMollie","hasParticipation","allowRegisterToProject","nextStep","textNotAllowedRegisterToProject","RegisterProjectWithContext","PersonalAddressEdit","handleSubmitContactAddressValues","OrganisationAddressEdit","ProjectList","contactProjectsArray","setContactProjectsArray","sceOrPcrProjectsAvailable","setSceOrPcrProjectsAvailable","callFetchContactProjects","isSceOrPcrProject","noAddressesFound","responsive","administrationName","dateStartRegistrations","dateEndRegistrations","ProjectListWithContext","LoanDetails","amountOfLoanNeeded","description","ObligationDetails","totalParticipations","CapitalDetails","PcrDetails","ProjectDetails","renderDetails","linkProjectInfo","RegistrationList","dateEnd","amountInteressed","amountGranted","amountDefinitive","participationsInteressed","participationsGranted","participationsDefinitive","RegistrationListWithContext","personFirstName","personLastName","NewAccountFormPersonal","personTitleId","organisationName","NewAccountFormOrganisation","NewAccount","executeRecaptcha","useGoogleReCaptcha","contactType","setContactType","reCaptchaToken","ButtonToolbar","toggle","block","NewAccountWithProvider","reCaptchaKey","process","language","NewAccountSuccess","close","ChangeAccountEmail","portalUserEmail","setPortalUserEmail","changePrimaryEmailAddress","resetForm","handleSubmitChangeEmail","ChangeAccountPassword","handleSubmitChangePassword","TwoFactorSettings","activationCodeInput","setPassword","hasValidPassword","setHasValidPassword","setHasTwoFactorEnabled","activationQr","setActivationQr","isActivatingTwoFactor","setIsActivatingTwoFactor","activationCode","setActivationCode","recoveryCodes","setRecoveryCodes","fetchTwoFactorStatus","fetchQr","svg","fetchRecoveryCodes","confirm","focus","ChangeAccount","INITIAL_STATE","result","reducer","action","AboutUs","useReducer","dispatch","hasSingleRelatedAdministration","setHasSingleRelatedAdministration","singleRelatedAdministration","RegistrationDetailsTitle","contactName","projectName","moneyPresenter","RegistrationDetailsProjectTable","fields","label","valueBasedOnTypePresenter","RegistrationDetailsMutationTable","participantMutations","participantMutation","classNameBasedOnTypePresenter","RegistrationDetailsDocumentTable","documents","relatedDocumentsOnPortal","relatedDocumentsProjectOnPortal","RegistrationDetails","basicInformation","FinancialOverviewDocuments","documentsOnPortal","administrationId","AboutUsDocumentTable","AdministrationAPI","AboutUsAdministration","setAdministration","websiteLink","setWebsiteLink","Body","kvkNumber","iBAN","btwNumber","ProjectMollieRedirect","setParticipantMutation","ParticipantMutationAPI","payloadParticipantMutation","isPaidByMollie","textRegistrationFinished","ProjectMollieRedirectWithContext","quotationRequest","quotationRequestId","Inspectlist","quotationRequestsArray","setQuotationRequestsArray","QuotationRequestAPI","opportunity","intake","fullName","streetPostalCodeCity","datePlanned","dateRecorded","dateApprovedProjectManager","dateReleased","dateApprovedClient","dateApprovedExternal","InspectlistWithContext","InspectDetailsDocumentTable","previewDocument","endsWith","InspectDetails","initialQuotationRequest","setInitialQuotationRequest","primaryphoneNumber","primaryEmailAddress","opportunityAction","documentId","CustomPrevButton","page","handlePrevClick","pages","cursor","marginRight","CustomNextButton","handleNextClick","CustomPages","CustomNavigation","PDFViewer","file","scale","propTypes","PropTypes","string","PdfViewer","navigation","DocumentPreview","setScale","setFile","initialDocument","setInitialDocument","DocumentAPI","App","exact","path","CoachInspectDetails","CoachInspectList","Login","TwoFactorConfirm","TwoFactorRecover","hostname","ReactDOM","getElementById","remove","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09943f87.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nconst localStorageToken = '__customer-portal-econobis-token__';\r\nconst localStorageLastActivity = '__customer-portal-econobis-last-activity__';\r\nconst localStorageCurrentSelectedContact = '__customer-portal-econobis-current_selected_contact__';\r\n\r\nconst AuthProvider = function(props) {\r\n    const [isAuth, setAuth] = useState(checkIfAuth());\r\n\r\n    function login(payload, cbRedirect) {\r\n        const token = payload.access_token;\r\n        window.localStorage.removeItem(localStorageCurrentSelectedContact);\r\n        window.localStorage.setItem(localStorageToken, token);\r\n        localStorage.setItem(localStorageLastActivity, moment().format());\r\n        setAuth(true);\r\n        cbRedirect();\r\n    }\r\n\r\n    function logout(force = false) {\r\n        window.localStorage.removeItem(localStorageToken);\r\n        window.localStorage.removeItem(localStorageLastActivity);\r\n\r\n        /**\r\n         * De \"force\" parameter wordt meegegeven bij handmatig uitloggen door gebruiker.\r\n         * Op dat moment willen we ook dat bij volgende keer inloggen de twee factor code opnieuw moet worden ingevoerd.\r\n         * Als gebruiker wordt uitgelogd doordat de sessie is verlopen komt de code hier ook langs maar willen we niet dat de two factor code opnieuw moet worden ingevoerd bij volgende login.\r\n         */\r\n        if(force) {\r\n            window.localStorage.removeItem('portal_two_factor_token');\r\n        }\r\n\r\n        setAuth(false);\r\n    }\r\n\r\n    function checkIfAuth() {\r\n        const token = getToken();\r\n        if (!token) {\r\n            // Redirect to login\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getToken() {\r\n        return window.localStorage.getItem(localStorageToken);\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isAuth: isAuth,\r\n                login: login,\r\n                logout: logout,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nconst AuthConsumer = AuthContext.Consumer;\r\n\r\nexport { AuthProvider, AuthConsumer };\r\n","import React, { createContext, useState } from 'react';\r\n\r\nconst localStorageCurrentSelectedContact = '__customer-portal-econobis-current_selected_contact__';\r\n\r\nconst PortalUserContext = createContext({\r\n    user: {},\r\n    setInitialUserData: () => {},\r\n});\r\n\r\nconst PortalUserProvider = function(props) {\r\n    const [user, setUser] = useState({});\r\n    const [currentSelectedContact, setCurrentContact] = useState({});\r\n\r\n    function setInitialUserData(user) {\r\n        setUser(user);\r\n\r\n        const selectedContactId = window.localStorage.getItem(localStorageCurrentSelectedContact);\r\n\r\n        // When there is already a selected contact id then lookup the contact\r\n        // Selected contact could be the user or one of the occupations\r\n        if (selectedContactId) {\r\n            if (user.id == selectedContactId) {\r\n                setCurrentContact(user);\r\n            } else {\r\n                const occupationUser = user.occupations.find(\r\n                    occupation => occupation.primaryContact.id == selectedContactId\r\n                );\r\n\r\n                setCurrentContact(occupationUser.primaryContact);\r\n            }\r\n        } else {\r\n            // If there is no selected contact then set default the login user as selected contact.\r\n            // Except if the user has an organisation as occupation that is primary\r\n            const organisationUser = user.occupations.find(\r\n                occupation => occupation.primaryContact.typeId === 'organisation' && occupation.primary\r\n            );\r\n\r\n            if (organisationUser) {\r\n                setCurrentContact(organisationUser.primaryContact);\r\n                window.localStorage.setItem(localStorageCurrentSelectedContact, organisationUser.primaryContact.id);\r\n            } else {\r\n                setCurrentContact(user);\r\n                window.localStorage.setItem(localStorageCurrentSelectedContact, user.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    function switchCurrentContact(contact) {\r\n        setCurrentContact(contact);\r\n        window.localStorage.setItem(localStorageCurrentSelectedContact, contact.id);\r\n    }\r\n\r\n    function resetCurrentUserToDefault() {\r\n        setUser({});\r\n        setCurrentContact({});\r\n    }\r\n\r\n    function updateNameSelectedContact(fullNameFnf, typeId, firstName, lastNamePrefix, lastName) {\r\n        setCurrentContact({ ...currentSelectedContact, fullNameFnf, typeId, firstName, lastNamePrefix, lastName });\r\n\r\n        if (user.id === currentSelectedContact.id) {\r\n            user.fullNameFnf = fullNameFnf;\r\n            user.typeId = typeId;\r\n            user.firstName = firstName;\r\n            user.lastNamePrefix = lastNamePrefix;\r\n            user.lastName = lastName;\r\n        }\r\n\r\n        const updatedOccupations = user.occupations.map(occupationContact => {\r\n            if (occupationContact.primaryContact.id === currentSelectedContact.id) {\r\n                occupationContact.primaryContact.fullNameFnf = fullNameFnf;\r\n                occupationContact.primaryContact.typeId = typeId;\r\n                occupationContact.primaryContact.firstName = firstName;\r\n                occupationContact.primaryContact.lastNamePrefix = lastNamePrefix;\r\n                occupationContact.primaryContact.lastName = lastName;\r\n            }\r\n            return occupationContact;\r\n        });\r\n\r\n        setUser({ ...user, occupations: updatedOccupations });\r\n    }\r\n\r\n    return (\r\n        <PortalUserContext.Provider\r\n            value={{\r\n                user: user,\r\n                setInitialUserData,\r\n                currentSelectedContact,\r\n                switchCurrentContact,\r\n                resetCurrentUserToDefault,\r\n                updateNameSelectedContact,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PortalUserContext.Provider>\r\n    );\r\n};\r\n\r\nconst PortalUserConsumer = PortalUserContext.Consumer;\r\n\r\nexport { PortalUserProvider, PortalUserConsumer, PortalUserContext };\r\n","import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeSettingsContext = createContext({\r\n    defaultThemeSettings: {},\r\n    setInitialThemeSettings: () => {},\r\n    setCurrentThemeSettings: () => {},\r\n    switchToDefaultThemeSettings: () => {},\r\n});\r\n\r\nconst ThemeSettingsProvider = function(props) {\r\n    const [defaultThemeSettings, setDefaultThemeSettings] = useState({});\r\n    const [currentThemeSettings, setCurrentThemeSettings] = useState({});\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    useEffect(\r\n        function() {\r\n            if (currentThemeSettings.id) {\r\n                handleChangeCurrentThemeSettings();\r\n            }\r\n        },\r\n        [currentThemeSettings.id]\r\n    );\r\n\r\n    function setInitialThemeSettings(payload) {\r\n        setDefaultThemeSettings(payload);\r\n        setCurrentThemeSettings(payload);\r\n    }\r\n\r\n    function switchToDefaultThemeSettings() {\r\n        setCurrentThemeSettings(defaultThemeSettings);\r\n    }\r\n\r\n    function handleChangeCurrentThemeSettings() {\r\n        document.documentElement.style.setProperty(\r\n            '--main-header-background-image-url',\r\n            'url(images/' + currentThemeSettings.portal_image_bg_file_name_header + '?' + imageHash + ')'\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--portal-main-background-color',\r\n            currentThemeSettings.portal_main_background_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--portal-main-text-color',\r\n            currentThemeSettings.portal_main_text_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--portal-background-color',\r\n            currentThemeSettings.portal_background_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--portal-background-text-color',\r\n            currentThemeSettings.portal_background_text_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--main-primary-rgba',\r\n            currentThemeSettings.login_header_background_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--main-primary-rgba-text-color',\r\n            currentThemeSettings.login_header_background_text_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--main-header-portal-icon-color',\r\n            currentThemeSettings.header_icons_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--main-secondary-color',\r\n            currentThemeSettings.login_field_background_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--main-secondary-text-color',\r\n            currentThemeSettings.login_field_background_text_color\r\n        );\r\n        document.documentElement.style.setProperty('--button-primary-color', currentThemeSettings.button_color);\r\n        document.documentElement.style.setProperty(\r\n            '--button-primary-text-color',\r\n            currentThemeSettings.button_text_color\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ThemeSettingsContext.Provider\r\n            value={{\r\n                defaultThemeSettings,\r\n                setInitialThemeSettings,\r\n                setCurrentThemeSettings,\r\n                switchToDefaultThemeSettings,\r\n                currentThemeSettings,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ThemeSettingsContext.Provider>\r\n    );\r\n};\r\n\r\nconst ThemeSettingsConsumer = ThemeSettingsContext.Consumer;\r\n\r\nexport { ThemeSettingsProvider, ThemeSettingsConsumer, ThemeSettingsContext };\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport { AuthConsumer } from '../../context/AuthContext';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { PortalUserConsumer } from '../../context/PortalUserContext';\r\nimport { ThemeSettingsConsumer } from '../../context/ThemeSettingsContext';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { FaHome, FaUser } from 'react-icons/fa';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction Header({ location, history }) {\r\n    const [menuOpen, updateStateMenu] = useState(false);\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    // This keeps your state in sync with the opening/closing of the menu\r\n    // via the default means, e.g. clicking the X, pressing the ESC key etc.\r\n    function handleStateChange(state) {\r\n        updateStateMenu(state.isOpen);\r\n    }\r\n\r\n    // This can be used to close the menu, e.g. when a user clicks a menu item\r\n    function openMenu() {\r\n        updateStateMenu(true);\r\n    }\r\n\r\n    // This can be used to close the menu, e.g. when a user clicks a menu item\r\n    function closeMenu() {\r\n        updateStateMenu(false);\r\n    }\r\n\r\n    // This can be used to toggle the menu, e.g. when using a custom icon\r\n    // Tip: You probably want to hide either/both default icons if using a custom icon\r\n    // See https://github.com/negomi/react-burger-menu#custom-icons\r\n    function toggleMenu() {\r\n        updateStateMenu(!menuOpen);\r\n    }\r\n\r\n    function formatProfilePicName(currentSelectedContact) {\r\n        if (currentSelectedContact.typeId === 'person') {\r\n            return (\r\n                currentSelectedContact.firstName +\r\n                (currentSelectedContact.lastNamePrefix ? ' ' + currentSelectedContact.lastNamePrefix : '') +\r\n                (currentSelectedContact.firstName || currentSelectedContact.lastNamePrefix ? '<br>' : '') +\r\n                currentSelectedContact.lastName\r\n            );\r\n        } else if (currentSelectedContact.typeId === 'organisation') {\r\n            return currentSelectedContact.fullNameFnf.replace(/\\s(?=\\S*$)/, '<br>');\r\n        } else {\r\n            return '?';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hook that alerts clicks outside of the passed ref\r\n     */\r\n    function useOutsideAlerter(ref) {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                updateStateMenu(false);\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            // Bind the event listener\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n            return () => {\r\n                // Unbind the event listener on clean up\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            };\r\n        });\r\n    }\r\n\r\n    const wrapperRef = useRef(null);\r\n    useOutsideAlerter(wrapperRef);\r\n\r\n    function redirect(to) {\r\n        history.push(`/${to}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <div className=\"header-portal\">\r\n                    <div className=\"profile-pic\">\r\n                        <PortalUserConsumer>\r\n                            {({ user, currentSelectedContact, switchCurrentContact, resetCurrentUserToDefault }) => {\r\n                                if (user.isCoach || !user.occupations || user.occupations.length < 1) {\r\n                                    return <>{ReactHtmlParser(formatProfilePicName(currentSelectedContact))}</>;\r\n                                }\r\n\r\n                                return (\r\n                                    <Dropdown alignRight>\r\n                                        <Dropdown.Toggle style={{ marginTop: '0' }}>\r\n                                            {ReactHtmlParser(formatProfilePicName(currentSelectedContact))}\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu>\r\n                                            <Dropdown.Header>Beheren van</Dropdown.Header>\r\n                                            <Dropdown.Item\r\n                                                onClick={() => {\r\n                                                    switchCurrentContact(user);\r\n                                                    redirect('dashboard');\r\n                                                }}\r\n                                                active={currentSelectedContact.id === user.id ? true : false}\r\n                                            >\r\n                                                {user.fullNameFnf}\r\n                                            </Dropdown.Item>\r\n                                            {user.occupations && user.occupations.length > 0\r\n                                                ? user.occupations.map(occupationContact =>\r\n                                                      (occupationContact.primaryContact.typeId === 'organisation' &&\r\n                                                          occupationContact.primary) ||\r\n                                                      (occupationContact.primaryContact.typeId === 'person' &&\r\n                                                          occupationContact.occupation.occupationForPortal) ? (\r\n                                                          <Dropdown.Item\r\n                                                              key={occupationContact.id}\r\n                                                              onClick={() => {\r\n                                                                  switchCurrentContact(\r\n                                                                      occupationContact.primaryContact\r\n                                                                  );\r\n                                                                  redirect('dashboard');\r\n                                                              }}\r\n                                                              active={\r\n                                                                  currentSelectedContact.id ===\r\n                                                                  occupationContact.primaryContact.id\r\n                                                              }\r\n                                                          >\r\n                                                              {occupationContact.primaryContact.fullNameFnf}\r\n                                                          </Dropdown.Item>\r\n                                                      ) : null\r\n                                                  )\r\n                                                : null}\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                );\r\n                            }}\r\n                        </PortalUserConsumer>\r\n                    </div>\r\n\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={6}>\r\n                                <ThemeSettingsConsumer>\r\n                                    {({ currentThemeSettings }) => (\r\n                                        <div className=\"header-logo\">\r\n                                            {currentThemeSettings.portal_logo_file_name_header !== undefined && (\r\n                                                <Image\r\n                                                    src={`images/${currentThemeSettings.portal_logo_file_name_header}?${imageHash}`}\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </ThemeSettingsConsumer>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    {/* Hambuger menu */}\r\n                                    <div className=\"bm-burger-button text-center\" onClick={openMenu}>\r\n                                        <span>\r\n                                            <span className=\"bm-burger-bars bm-burger-bar-1\" />\r\n                                            <span className=\"bm-burger-bars bm-burger-bar-2\" />\r\n                                            <span className=\"bm-burger-bars bm-burger-bar-3\" />\r\n                                        </span>\r\n                                        <br />\r\n                                        <small style={{ fontSize: '10px', marginLeft: '-3.5px' }}>MENU</small>\r\n                                    </div>\r\n                                    {/* User switch menu */}\r\n                                    <AuthConsumer>\r\n                                        {({ logout }) => {\r\n                                            return (\r\n                                                <PortalUserConsumer>\r\n                                                    {({\r\n                                                        user,\r\n                                                        currentSelectedContact,\r\n                                                        switchCurrentContact,\r\n                                                        resetCurrentUserToDefault,\r\n                                                    }) => {\r\n                                                        return (\r\n                                                            <Dropdown alignRight>\r\n                                                                <Dropdown.Toggle\r\n                                                                    id={'account-dropdown'}\r\n                                                                    style={{ padding: '0', marginTop: '14px' }}\r\n                                                                >\r\n                                                                    <FaUser />\r\n                                                                    <br />\r\n                                                                    <small\r\n                                                                        className={'account-dropdown-text'}\r\n                                                                        style={{ fontSize: '10px' }}\r\n                                                                    >\r\n                                                                        ACCOUNT\r\n                                                                    </small>\r\n                                                                </Dropdown.Toggle>\r\n                                                                <Dropdown.Menu>\r\n                                                                    <Dropdown.Header>Ingelogd als</Dropdown.Header>\r\n                                                                    <Dropdown.Item disabled>\r\n                                                                        {user.fullNameFnf}\r\n                                                                    </Dropdown.Item>\r\n                                                                    <Dropdown.Item>\r\n                                                                        <Link\r\n                                                                            to={'/wijzig-inloggegevens'}\r\n                                                                            className={'dropdown-link'}\r\n                                                                        >\r\n                                                                            Wijzig inloggegevens\r\n                                                                        </Link>\r\n                                                                    </Dropdown.Item>\r\n                                                                    <Dropdown.Item>\r\n                                                                        <Link\r\n                                                                            to={'/wijzig-inloggegevens'}\r\n                                                                            className={'dropdown-link'}\r\n                                                                        >\r\n                                                                            Twee factor authenticatie\r\n                                                                        </Link>\r\n                                                                    </Dropdown.Item>\r\n                                                                    <Dropdown.Divider />\r\n                                                                    <Dropdown.Item\r\n                                                                        onClick={() => {\r\n                                                                            logout(true);\r\n                                                                            resetCurrentUserToDefault();\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Log uit\r\n                                                                    </Dropdown.Item>\r\n                                                                </Dropdown.Menu>\r\n                                                            </Dropdown>\r\n                                                        );\r\n                                                    }}\r\n                                                </PortalUserConsumer>\r\n                                            );\r\n                                        }}\r\n                                    </AuthConsumer>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        {location.pathname !== '/' && location.pathname !== '/dashboard' ? (\r\n                            <div className=\"header-dashboard-button\">\r\n                                <Button className={'w-button btn-sm'} onClick={() => history.push('/dashboard')}>\r\n                                    <FaHome />\r\n                                    &nbsp;Dashboard\r\n                                </Button>\r\n                            </div>\r\n                        ) : null}\r\n                    </Container>\r\n                </div>\r\n                {/* Sidebar menu */}\r\n                <Menu\r\n                    right\r\n                    width={'300px'}\r\n                    // noOverlay\r\n                    isOpen={menuOpen}\r\n                    onStateChange={state => handleStateChange(state)}\r\n                    customBurgerIcon={false}\r\n                >\r\n                    <div className={'sidebar-menu'}>\r\n                        <React.Fragment>\r\n                            <h6 className=\"heading in-menu\">MENU</h6>\r\n                            <Link\r\n                                to={'/inschrijvingen-projecten'}\r\n                                className={`nav-link w-nav-link w--nav-link-open ${\r\n                                    location.pathname === '/inschrijvingen-projecten' ? 'w--current' : ''\r\n                                }`}\r\n                                onClick={closeMenu}\r\n                            >\r\n                                Huidige deelnames\r\n                            </Link>\r\n                            <Link\r\n                                to={'/gegevens'}\r\n                                className={`nav-link w-nav-link w--nav-link-open ${\r\n                                    location.pathname === '/gegevens' ? 'w--current' : ''\r\n                                }`}\r\n                                onClick={closeMenu}\r\n                            >\r\n                                Gegevens\r\n                            </Link>\r\n                            <Link\r\n                                to={'/inschrijven-projecten'}\r\n                                className={`nav-link w-nav-link w--nav-link-open ${\r\n                                    location.pathname === '/inschrijven-projecten' ? 'w--current' : ''\r\n                                }`}\r\n                                onClick={closeMenu}\r\n                            >\r\n                                Inschrijven projecten\r\n                            </Link>\r\n                            <PortalUserConsumer>\r\n                                {({\r\n                                    user,\r\n                                    currentSelectedContact,\r\n                                    switchCurrentContact,\r\n                                    resetCurrentUserToDefault,\r\n                                }) => {\r\n                                    if (currentSelectedContact && currentSelectedContact.hasFinancialOverviews) {\r\n                                        return (\r\n                                            <Link\r\n                                                to={'/waardestaat-documenten'}\r\n                                                className={`nav-link w-nav-link w--nav-link-open ${\r\n                                                    location.pathname === '/waardestaat-documenten' ? 'w--current' : ''\r\n                                                }`}\r\n                                                onClick={closeMenu}\r\n                                            >\r\n                                                Waardestaat\r\n                                            </Link>\r\n                                        );\r\n                                    }\r\n                                }}\r\n                            </PortalUserConsumer>\r\n                            <Link\r\n                                to={'/over-ons'}\r\n                                className={`nav-link w-nav-link w--nav-link-open ${\r\n                                    location.pathname === '/over-ons' ? 'w--current' : ''\r\n                                }`}\r\n                                onClick={closeMenu}\r\n                            >\r\n                                Over ons\r\n                            </Link>\r\n                        </React.Fragment>\r\n                    </div>\r\n                </Menu>\r\n            </header>\r\n            {location.pathname !== '/' && location.pathname !== '/dashboard' ? (\r\n                <div className={'floating-action-button'}>\r\n                    <Button className={'w-button'} onClick={() => history.push('/dashboard')}>\r\n                        <FaHome />\r\n                        &nbsp;Dashboard\r\n                    </Button>\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst BASE_URL = window.__SERVER_DATA__.base_url;\r\nconst localStorageToken = '__customer-portal-econobis-token__';\r\nconst localStorageLastActivity = '__customer-portal-econobis-last-activity__';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: `${BASE_URL}`,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n    function(config) {\r\n        // First check if token is expired or not\r\n        checkTokenExpiration();\r\n        // Do something before request is sent\r\n        const AUTH_TOKEN = 'Bearer ' + localStorage.getItem(localStorageToken);\r\n        const TWO_FACTOR_TOKEN = localStorage.getItem('portal_two_factor_token');\r\n        config.headers.Authorization = AUTH_TOKEN;\r\n        config.headers.TwoFactorToken = TWO_FACTOR_TOKEN;\r\n        return config;\r\n    },\r\n    function(error) {\r\n        // Do something with request error\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Check token expiration and redirect if token is expired\r\nfunction checkTokenExpiration() {\r\n    const lastActivity = moment(localStorage.getItem(localStorageLastActivity));\r\n\r\n    if (\r\n        !localStorage.getItem(localStorageLastActivity) ||\r\n        lastActivity.add('30', 'minutes').format() < moment().format()\r\n    ) {\r\n        if (window.location.hash !== '#/login' && window.location.hash !== '#/loguit') {\r\n            setTimeout(() => {\r\n                localStorage.removeItem(localStorageToken);\r\n                localStorage.removeItem(localStorageLastActivity);\r\n                window.location.reload();\r\n            }, 100);\r\n        }\r\n    } else {\r\n        localStorage.setItem(localStorageLastActivity, moment().format());\r\n    }\r\n}\r\n\r\nexport default axiosInstance;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    fetchPortalUserDetails: function() {\r\n        const requestUrl = `/me`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'number',\r\n                        'fullNameFnf',\r\n                        'typeId',\r\n                        'firstName',\r\n                        'lastNamePrefix',\r\n                        'lastName',\r\n                        'hasFinancialOverviews',\r\n                        'singleRelatedAdministration',\r\n                        'iban',\r\n                        'ibanAttn',\r\n                        'didAgreeAvg',\r\n                        'dateDidAgreeAvg',\r\n                        'addressLines',\r\n                        'portalSettingsLayoutAssigned',\r\n                        'isCoach',\r\n                    ],\r\n                    rlt: {\r\n                        occupations: {\r\n                            fld: ['id', 'occupationId', 'primaryContactId', 'contactId', 'primary'],\r\n                            rlt: {\r\n                                occupation: {\r\n                                    fld: ['id', 'primaryOccupation', 'secondaryOccupation', 'occupationForPortal'],\r\n                                },\r\n                                primaryContact: {\r\n                                    fld: [\r\n                                        'id',\r\n                                        'typeId',\r\n                                        'fullNameFnf',\r\n                                        'firstName',\r\n                                        'lastNamePrefix',\r\n                                        'lastName',\r\n                                        'hasFinancialOverviews',\r\n                                        'singleRelatedAdministration',\r\n                                    ],\r\n                                },\r\n                                contact: {\r\n                                    fld: ['id', 'typeId', 'fullNameFnf', 'firstName', 'lastNamePrefix', 'lastName'],\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    fetchPortalUserEmail: function() {\r\n        return axiosInstance.get(`/portal-user-email`);\r\n    },\r\n\r\n    changeEmail: values => {\r\n        const requestUrl = `/portal-user/change-email`;\r\n\r\n        return axiosInstance.post(requestUrl, values);\r\n    },\r\n\r\n    changePassword: values => {\r\n        const requestUrl = `/portal-user/change-password`;\r\n\r\n        return axiosInstance.post(requestUrl, values);\r\n    },\r\n};\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { Route, Redirect, useLocation, useHistory } from 'react-router-dom';\r\nimport { AuthConsumer } from '../context/AuthContext';\r\nimport Header from '../components/layout/Header';\r\nimport PortalUserAPI from '../api/portal-user/PortalUserAPI';\r\nimport { PortalUserConsumer } from '../context/PortalUserContext';\r\nimport { ThemeSettingsContext } from '../context/ThemeSettingsContext';\r\n\r\nconst ProtectedRoute = ({ component: Component, setInitialUserData, isAuth, ...rest }) => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const { setInitialThemeSettings, switchToDefaultThemeSettings } = useContext(ThemeSettingsContext);\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            (function callFetchPortalUserDetails() {\r\n                PortalUserAPI.fetchPortalUserDetails()\r\n                    .then(payload => {\r\n                        setInitialUserData(payload.data.data);\r\n                        setInitialThemeSettings(payload.data.data.portalSettingsLayoutAssigned);\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 401) {\r\n                            if(error.response.data.code === 'two_factor_token_invalid') {\r\n                                history.push('/two-factor/confirm');\r\n                            }else{\r\n                                history.push('/login');\r\n                            }\r\n                            return;\r\n                        }\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuwd.');\r\n                    });\r\n            })();\r\n        }\r\n    }, [isAuth]);\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            if (\r\n                !location.pathname.includes('/project/') &&\r\n                !location.pathname.includes('/project-deelname/') &&\r\n                !location.pathname.includes('/inschrijven/') &&\r\n                !location.pathname.includes('/dashboard/')\r\n            ) {\r\n                switchToDefaultThemeSettings();\r\n            }\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    return (\r\n        <AuthConsumer>\r\n            {({ isAuth }) => (\r\n                <div className=\"body-2\" id=\"body-2\">\r\n                    <Header />\r\n                    <Route render={props => (isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />)} {...rest} />\r\n                </div>\r\n            )}\r\n        </AuthConsumer>\r\n    );\r\n};\r\n\r\nexport default function ProtectedRouteWithContext(props) {\r\n    return (\r\n        <AuthConsumer>\r\n            {({ isAuth }) => (\r\n                <PortalUserConsumer>\r\n                    {({ setInitialUserData }) => (\r\n                        <ProtectedRoute {...props} setInitialUserData={setInitialUserData} isAuth={isAuth} />\r\n                    )}\r\n                </PortalUserConsumer>\r\n            )}\r\n        </AuthConsumer>\r\n    );\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Route, useLocation } from 'react-router-dom';\r\nimport { ThemeSettingsContext } from '../context/ThemeSettingsContext';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n    const location = useLocation();\r\n    const { switchToDefaultThemeSettings } = useContext(ThemeSettingsContext);\r\n\r\n    useEffect(() => {\r\n        switchToDefaultThemeSettings();\r\n    }, [location.pathname]);\r\n\r\n    return <Route render={props => <Component {...props} />} {...rest} />;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get } from 'lodash';\r\n\r\nconst InputText = ({\r\n    field,\r\n    type,\r\n    className,\r\n    id,\r\n    readOnly,\r\n    placeholder,\r\n    showErrorMessage,\r\n    errors,\r\n    touched,\r\n    classNameErrorMessage,\r\n    disabled,\r\n    customOnChange = null,\r\n}) => {\r\n    if (customOnChange) {\r\n        field.onChange = customOnChange;\r\n    }\r\n    return (\r\n        <>\r\n            {get(errors, field.name, '') && get(touched, field.name, '') && showErrorMessage ? (\r\n                <small className={`${classNameErrorMessage}`}>{get(errors, field.name, '')}</small>\r\n            ) : null}\r\n            <input\r\n                type={type}\r\n                className={`text-input w-input ${className} ${\r\n                    Boolean(get(errors, field.name, '') && get(touched, field.name, '')) ? 'has-error mb-0' : ''\r\n                } `}\r\n                id={id}\r\n                {...field}\r\n                readOnly={readOnly}\r\n                placeholder={placeholder}\r\n                disabled={disabled}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nInputText.defaultProps = {\r\n    type: 'text',\r\n    className: 'content',\r\n    readOnly: false,\r\n    placeholder: '',\r\n    showErrorMessage: true,\r\n    classNameErrorMessage: 'text-danger',\r\n    errors: {},\r\n    touched: {},\r\n};\r\n\r\nInputText.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    type: PropTypes.string,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    readOnly: PropTypes.bool,\r\n    showErrorMessage: PropTypes.bool,\r\n    classNameErrorMessage: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    errors: PropTypes.object,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default InputText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ButtonText = ({\r\n    buttonClassName,\r\n    buttonText,\r\n    onClickAction,\r\n    type,\r\n    loading,\r\n    title,\r\n    loadingSpinnerColor,\r\n    disabled,\r\n}) => (\r\n    <Button\r\n        type={type}\r\n        className={`${buttonClassName}`}\r\n        onClick={onClickAction}\r\n        disabled={loading || disabled}\r\n        title={title}\r\n        size=\"sm\"\r\n    >\r\n        {loading ? <ClipLoader color={loadingSpinnerColor} size={17} /> : <span>{buttonText}</span>}\r\n    </Button>\r\n);\r\n\r\nButtonText.defaultProps = {\r\n    buttonClassName: '',\r\n    type: 'button',\r\n    title: '',\r\n    loading: false,\r\n    loadingSpinnerColor: 'white',\r\n    disabled: false,\r\n};\r\n\r\nButtonText.propTypes = {\r\n    buttonClassName: PropTypes.string,\r\n    buttonText: PropTypes.string.isRequired,\r\n    onClickAction: PropTypes.func,\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    loadingSpinnerColor: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n};\r\n\r\nexport default ButtonText;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n    password: Yup.string().required('Verplicht'),\r\n});\r\n\r\nconst LoginForm = function({ handleSubmit, login }) {\r\n    return (\r\n        <Formik\r\n            initialValues={{ username: '', password: '' }}\r\n            enableReinitialize={true}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, actions) => {\r\n                actions.setSubmitting(true);\r\n                handleSubmit(values, actions, login);\r\n            }}\r\n            render={({ isSubmitting, errors, touched }) => {\r\n                return (\r\n                    <Form>\r\n                        <Field\r\n                            name=\"username\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"username\"\r\n                                    className={''}\r\n                                    placeholder={'E-mailadres'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    // showErrorMessage={false}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Field\r\n                            name=\"password\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"password\"\r\n                                    className={''}\r\n                                    placeholder={'Wachtwoord'}\r\n                                    type={'password'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    // showErrorMessage={false}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <ButtonText\r\n                            buttonText={'Log in'}\r\n                            buttonClassName={'authorization-button'}\r\n                            type={'submit'}\r\n                            loading={isSubmitting}\r\n                            loadingSpinnerColor={'#034b8c'}\r\n                        />\r\n                    </Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import axios from 'axios';\r\n\r\nconst AUTH_KEY = {\r\n    client_id: window.__SERVER_DATA__.client_id,\r\n    client_secret: window.__SERVER_DATA__.client_key,\r\n    grant_type: 'password',\r\n};\r\n\r\nconst BASE_URL = window.__SERVER_DATA__.base_url;\r\n\r\nexport default {\r\n    newAccount: payload => {\r\n        const requestUrl = `${BASE_URL}/new-account`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n    newAccountSuccess: payload => {\r\n        const requestUrl = `${BASE_URL}/new-account-success`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n\r\n    login: loginCredentials => {\r\n        const requestUrl = `${BASE_URL}/oauth/token`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, { ...AUTH_KEY, ...loginCredentials });\r\n    },\r\n\r\n    register: payload => {\r\n        const requestUrl = `${BASE_URL}/register`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n\r\n    forgot: email => {\r\n        const requestUrl = `${BASE_URL}/password/email`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, email);\r\n    },\r\n\r\n    reset: payload => {\r\n        const requestUrl = `${BASE_URL}/password/reset`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n};\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nconst URL_PORTAL_SETTINGS = `setting`;\r\n\r\nexport default {\r\n    fetchPortalSettings: keys => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/multiple${keys}`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n    fetchPortalActive: () => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/portal-active`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n    fetchCooperativeName: () => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/cooperative-name`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n    fetchShowNewAtCooperativeLink: () => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/show-new-at-cooperative-link`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n    fetchNewAtCooperativeLinkText: () => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/new-at-cooperative-link-text`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n};\r\n","import axiosInstance from \"../default-setup/AxiosInstance\";\r\n\r\nexport default {\r\n    confirmTwoFactor: function (code) {\r\n        return axiosInstance.post(`me/confirmed-two-factor-authentication`, {\r\n            code\r\n        });\r\n    },\r\n\r\n    fetchTwoFactorQr: function (password) {\r\n        return axiosInstance.get(`me/two-factor-qr-code`, {\r\n            headers: {\r\n                PasswordConfirmation: password,\r\n            }\r\n        });\r\n    },\r\n\r\n    fetchTwoFactorRecoveryCodes: function (password) {\r\n        return axiosInstance.get(`me/two-factor-recovery-codes`, {\r\n            headers: {\r\n                PasswordConfirmation: password,\r\n            }\r\n        });\r\n    },\r\n\r\n    regenerateTwoFactorRecoveryCodes: function (password) {\r\n        return axiosInstance.post(`me/two-factor-recovery-codes`, {}, {\r\n            headers: {\r\n                PasswordConfirmation: password,\r\n            }\r\n        });\r\n    },\r\n\r\n    checkPassword: function (password) {\r\n        return axiosInstance.get(`me/check-password`, {\r\n            headers: {\r\n                PasswordConfirmation: password,\r\n            }\r\n        });\r\n    },\r\n\r\n    fetchTwoFactorStatus: function () {\r\n        return axiosInstance.get(`me/two-factor-status`);\r\n    },\r\n\r\n    enableTwoFactor: function (password) {\r\n        return axiosInstance.post(`me/two-factor-authentication`, {}, {\r\n            headers: {\r\n                PasswordConfirmation: password,\r\n            }\r\n        });\r\n    },\r\n\r\n    disableTwoFactor: function (password) {\r\n        return axiosInstance.post(`me/two-factor-authentication/delete`, {}, {\r\n            headers: {\r\n                PasswordConfirmation: password,\r\n            }\r\n        });\r\n    },\r\n\r\n    recoverTwoFactor: function (code) {\r\n        return axiosInstance.post(`me/two-factor-challenge`, {\r\n            recovery_code: code\r\n        });\r\n    },\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Link, Redirect, useHistory} from 'react-router-dom';\r\n\r\nimport { AuthConsumer } from '../../../context/AuthContext';\r\nimport LoginForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PortalSettingsAPI from '../../../api/portal-settings/PortalSettingsAPI';\r\nimport MeAPI from \"../../../api/general/MeAPI\";\r\n\r\nexport default props => {\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [showError, toggleError] = useState(false);\r\n\r\n    const [redirectToReferrer, toggleRedirect] = useState(false);\r\n    let { from } = props.location.state || { from: { pathname: '/dashboard' } };\r\n\r\n    const [portalActive, setPortalActive] = useState(false);\r\n    const [showNewAtCooperativeLink, setShowNewAtCooperativeLink] = useState(false);\r\n    const [newAtCooperativeLinkText, setNewAtCooperativeLinkText] = useState('');\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    useEffect(() => {\r\n        (function callFetchPortalActive() {\r\n            PortalSettingsAPI.fetchPortalActive()\r\n                .then(payload => {\r\n                    setPortalActive(payload.data);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    // alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                    setIsLoading(false);\r\n                });\r\n        })();\r\n\r\n        (function callFetchShowNewAtCooperativeLink() {\r\n            PortalSettingsAPI.fetchShowNewAtCooperativeLink()\r\n                .then(payload => {\r\n                    setShowNewAtCooperativeLink(payload.data);\r\n                })\r\n                .catch(error => {\r\n                    // alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                });\r\n        })();\r\n\r\n        (function callFetchNewAtCooperativeLinkText() {\r\n            PortalSettingsAPI.fetchNewAtCooperativeLinkText()\r\n                .then(payload => {\r\n                    setNewAtCooperativeLinkText(payload.data);\r\n                })\r\n                .catch(error => {\r\n                    // alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                });\r\n        })();\r\n    }, []);\r\n\r\n    function handleSubmit(values, actions, login) {\r\n        AuthAPI.login(values)\r\n            .then(payload => {\r\n                toggleError(false);\r\n                login(payload.data, () => {\r\n                    MeAPI.fetchTwoFactorStatus().then(payload => {\r\n                        if(payload.data.hasTwoFactorEnabled && !payload.data.hasValidToken) {\r\n                            history.push('/two-factor/confirm');\r\n                            return;\r\n                        }\r\n\r\n                        toggleRedirect(true)\r\n                    });\r\n                });\r\n            })\r\n            .catch(error => {\r\n                // If login fails show error and then set submitting back to false\r\n                toggleError(true);\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect() {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {redirectToReferrer ? (\r\n                redirect()\r\n            ) : (\r\n                <AuthConsumer>\r\n                    {({ isAuth, login }) => (\r\n                        <Container fluid className=\"authorization-container\">\r\n                            <Row className=\"justify-content-center align-content-center full-height\">\r\n                                <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" xl=\"2\">\r\n                                    <img src={`images/logo.png?${imageHash}`} alt=\"\" className=\"image logo-container\" />\r\n                                    {isLoading ? (\r\n                                        <React.Fragment>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                                    Applicatie wordt geladen...\r\n                                                </Alert>\r\n                                            </Row>\r\n                                        </React.Fragment>\r\n                                    ) : !portalActive ? (\r\n                                        <React.Fragment>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                                    Deze applicatie kan op dit moment niet gebruikt worden.\r\n                                                </Alert>\r\n                                            </Row>\r\n                                        </React.Fragment>\r\n                                    ) : !isLoading ? (\r\n                                        <React.Fragment>\r\n                                            <LoginForm handleSubmit={handleSubmit} login={login} />\r\n                                            {showError ? (\r\n                                                <Row className=\"justify-content-center\">\r\n                                                    <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                                        Gebruikte logingegevens zijn onjuist!\r\n                                                    </Alert>\r\n                                                </Row>\r\n                                            ) : null}\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <Link to={'/wachtwoord-vergeten'} className=\"authorization-link\">\r\n                                                    Wachtwoord vergeten?\r\n                                                </Link>\r\n                                            </Row>\r\n                                            {showNewAtCooperativeLink ? (\r\n                                                <Row className=\"justify-content-center\">\r\n                                                    <a\r\n                                                        href={'/#/nieuw-account'}\r\n                                                        className=\"authorization-link\"\r\n                                                        target=\"_blank\"\r\n                                                    >\r\n                                                        {newAtCooperativeLinkText}\r\n                                                    </a>\r\n                                                </Row>\r\n                                            ) : null}\r\n                                        </React.Fragment>\r\n                                    ) : null}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    )}\r\n                </AuthConsumer>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport MeAPI from \"../../../api/general/MeAPI\";\r\nimport ButtonText from \"../../../components/button/ButtonText\";\r\n\r\nexport default () => {\r\n    const history = useHistory();\r\n    const [showError, toggleError] = useState(false);\r\n    const [code, setCode] = useState('');\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        toggleError(false);\r\n\r\n        MeAPI.confirmTwoFactor(code)\r\n            .then(payload => {\r\n                localStorage.setItem('portal_two_factor_token', payload.data.token);\r\n\r\n                history.push('/dashboard');\r\n            })\r\n            .catch(error => {\r\n                // If login fails show error and then set submitting back to false\r\n                toggleError(true);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container fluid className=\"authorization-container\">\r\n                <Row className=\"justify-content-center align-content-center full-height\">\r\n                    <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" xl=\"2\">\r\n                        <img src={`images/logo.png`} alt=\"\" className=\"image logo-container\"/>\r\n                        <p>Account is beveiligd met twee factor authenticatie, voer hier onder de code uit uw authenticator app in.</p>\r\n                        <React.Fragment>\r\n                            <form onSubmit={handleSubmit}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={`text-input w-input`}\r\n                                placeholder=\"Twee factor code\"\r\n                                value={code}\r\n                                onChange={(e) => setCode(e.target.value)}\r\n                                autoFocus={true}\r\n                            />\r\n                            <ButtonText\r\n                                buttonText={'Bevestigen'}\r\n                                buttonClassName={'authorization-button'}\r\n                                type=\"submit\"\r\n                            />\r\n                            </form>\r\n\r\n                            {showError ? (\r\n                                <Row className=\"justify-content-center\">\r\n                                    <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                        Code is onjuist\r\n                                    </Alert>\r\n                                </Row>\r\n                            ) : null}\r\n                            <Row className=\"justify-content-center\">\r\n                                <Link to={'/two-factor/recover'} className=\"authorization-link\">\r\n                                    Twee factor herstellen\r\n                                </Link>\r\n                            </Row>\r\n                        </React.Fragment>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React, {useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport MeAPI from \"../../../api/general/MeAPI\";\r\nimport ButtonText from \"../../../components/button/ButtonText\";\r\n\r\nexport default () => {\r\n    const history = useHistory();\r\n    const [showError, toggleError] = useState(false);\r\n    const [code, setCode] = useState('');\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        toggleError(false);\r\n\r\n        MeAPI.recoverTwoFactor(code).then(() => {\r\n            history.push('/dashboard');\r\n        }).catch(() => {\r\n            toggleError(true);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container fluid className=\"authorization-container\">\r\n                <Row className=\"justify-content-center align-content-center full-height\">\r\n                    <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" xl=\"2\">\r\n                        <img src={`images/logo.png`} alt=\"\" className=\"image logo-container\"/>\r\n                        <p>Voer hier één van de recovery codes van de twee factor authenticatie in.</p>\r\n                        <React.Fragment>\r\n                            <form onSubmit={handleSubmit}>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={`text-input w-input`}\r\n                                placeholder=\"Recovery code\"\r\n                                value={code}\r\n                                onChange={(e) => setCode(e.target.value)}\r\n                                autoFocus={true}\r\n                            />\r\n                            <ButtonText\r\n                                buttonText={'Herstellen'}\r\n                                buttonClassName={'authorization-button'}\r\n                                type=\"submit\"\r\n                            />\r\n                            </form>\r\n\r\n                            {showError ? (\r\n                                <Row className=\"justify-content-center\">\r\n                                    <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                        Code is onjuist\r\n                                    </Alert>\r\n                                </Row>\r\n                            ) : null}\r\n                            <Row className=\"justify-content-center\">\r\n                                <Link to={'/two-factor/confirm'} className=\"authorization-link\">\r\n                                    Terug\r\n                                </Link>\r\n                            </Row>\r\n                        </React.Fragment>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { GoogleReCaptchaProvider, GoogleReCaptcha } from 'react-google-recaptcha-v3';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(10, 'Minimum van ${min} verplicht')\r\n        .matches(/([0-9])/, 'Minimaal 1 cijfer is verplicht')\r\n        .matches(/([A-Z])/, 'Minimaal 1 hoofdletter is verplicht')\r\n        .required('Verplicht'),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Wachtwoorden moeten gelijk zijn')\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst RegisterForm = ({ handleSubmit, email }) => (\r\n    <Formik\r\n        initialValues={{ password: '', passwordConfirmation: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <div className=\"mb-3\">\r\n                    <p className={'authorization-text'}>\r\n                        Stel je wachtwoord in voor <strong>{email}</strong>. Daarna ben je direct ingelogd.\r\n                    </p>\r\n                </div>\r\n                <Row>\r\n                    <Col>\r\n                        <Field\r\n                            name=\"password\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"password\"\r\n                                    className={field.value ? 'numeric-password' : ''}\r\n                                    placeholder={'Nieuw wachtwoord'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    classNameErrorMessage={'authorization-text'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"mt-2\">\r\n                        <Field\r\n                            name=\"passwordConfirmation\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"passwordConfirmation\"\r\n                                    className={field.value ? 'numeric-password' : ''}\r\n                                    placeholder={'Herhaal nieuw wachtwoord'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    classNameErrorMessage={'authorization-text mb-3'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"my-3\">\r\n                        <small className={'authorization-text'}>\r\n                            Het wachtwoord moet minimaal 10 karakters lang zijn en moet minimaal 1 cijfer en 1\r\n                            hoofdletter bevatten.\r\n                        </small>\r\n                    </Col>\r\n                </Row>\r\n                <ButtonText\r\n                    buttonText={'Verzenden'}\r\n                    buttonClassName={'authorization-button'}\r\n                    size=\"sm\"\r\n                    type={'submit'}\r\n                    loading={isSubmitting}\r\n                    loadingSpinnerColor={'#034b8c'}\r\n                />\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport RegisterForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { AuthConsumer } from '../../../context/AuthContext';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Register = ({ location, match, login }) => {\r\n    const [showError, toggleError] = useState(false);\r\n    const [showLoginLink, setLoginLink] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const registrationCode = decodeURIComponent(match.params.registrationCode);\r\n    const email = decodeURIComponent(match.params.email);\r\n\r\n    const [redirectToReferrer, toggleRedirect] = useState(false);\r\n    let { from } = location.state || { from: { pathname: '/dashboard' } };\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    function handleSubmit(values, actions) {\r\n        AuthAPI.register({\r\n            registrationCode,\r\n            email,\r\n            password: values.password,\r\n            password_confirmation: values.passwordConfirmation,\r\n        })\r\n            .then(payload => {\r\n                toggleSuccessMessage(true);\r\n                AuthAPI.login({ username: email, password: values.password })\r\n                    .then(payload => {\r\n                        toggleError(false);\r\n                        setLoginLink(false);\r\n                        setErrorMessage('');\r\n                        login(payload.data, () => {});\r\n\r\n                        setTimeout(() => {\r\n                            toggleRedirect(true);\r\n                        }, 15000);\r\n                    })\r\n                    .catch(error => {\r\n                        // If login fails show error and then set submitting back to false\r\n                        toggleError(true);\r\n                        setLoginLink(true);\r\n                        setErrorMessage('Er is iets fout gegaan bij automatisch inloggen na activeren.');\r\n                        actions.setSubmitting(false);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response.status);\r\n                // console.log(error.response.data.message);\r\n                toggleError(true);\r\n                if (\r\n                    error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message &&\r\n                    error.response.status === 423\r\n                ) {\r\n                    setLoginLink(true);\r\n                    setErrorMessage(error.response.data.message);\r\n                } else {\r\n                    setLoginLink(false);\r\n                    setErrorMessage(\r\n                        'Er is iets fout gegaan bij activeren. Controleer of de activatie link juist en volledig is.'\r\n                    );\r\n                }\r\n                // If login fails show error and then set submitting back to false\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect() {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {redirectToReferrer ? (\r\n                redirect()\r\n            ) : (\r\n                <Container fluid className=\"authorization-container\">\r\n                    <Row className=\"justify-content-center align-content-center full-height\">\r\n                        <Col xs=\"12\" sm=\"8\" md=\"6\" lg=\"4\" xl=\"2\">\r\n                            <img src={`images/logo.png?${imageHash}`} alt=\"\" className=\"image logo-container\" />\r\n                            {showSuccessMessage ? (\r\n                                <>\r\n                                    <h3 className={'authorization-text'}>Je account is geactiveerd</h3>\r\n                                    <p className={'authorization-text'}>Je bent nu ingelogd</p>\r\n                                    <ButtonText\r\n                                        buttonText={'Ga verder'}\r\n                                        onClickAction={toggleRedirect}\r\n                                        buttonClassName={'authorization-button'}\r\n                                        size=\"sm\"\r\n                                    />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <h3 className={'authorization-text'}>Account activeren</h3>\r\n                                    {!showLoginLink ? <RegisterForm handleSubmit={handleSubmit} email={email} /> : null}\r\n                                    {showError ? (\r\n                                        <Row className={'justify-content-center align-content-center '}>\r\n                                            <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                                {errorMessage}\r\n                                            </Alert>\r\n                                        </Row>\r\n                                    ) : null}\r\n                                </>\r\n                            )}\r\n                            {showLoginLink ? (\r\n                                <ButtonText\r\n                                    buttonText={'Ga naar loginscherm'}\r\n                                    onClickAction={toggleRedirect}\r\n                                    buttonClassName={'authorization-button'}\r\n                                    size=\"sm\"\r\n                                />\r\n                            ) : null}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default function RegisterWithContext(props) {\r\n    return <AuthConsumer>{({ login }) => <Register {...props} login={login} />}</AuthConsumer>;\r\n}\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst ForgotForm = ({ handleSubmit, showSuccessMessage }) => (\r\n    <Formik\r\n        initialValues={{ email: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <Field\r\n                    name=\"email\"\r\n                    render={({ field }) => (\r\n                        <InputText\r\n                            field={field}\r\n                            id=\"email\"\r\n                            className={''}\r\n                            placeholder={'E-mailadres'}\r\n                            errors={errors}\r\n                            touched={touched}\r\n                            // todo check waarom dit erin stond ?!\r\n                            // showErrorMessage={false}\r\n                        />\r\n                    )}\r\n                />\r\n                <ButtonText\r\n                    buttonText={showSuccessMessage ? 'E-mail is verstuurd!' : 'Verstuur wachtwoord reset link'}\r\n                    buttonClassName={'authorization-button'}\r\n                    size=\"sm\"\r\n                    type={'submit'}\r\n                    loading={isSubmitting}\r\n                    loadingSpinnerColor={'#034b8c'}\r\n                    disabled={showSuccessMessage}\r\n                />\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default ForgotForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport ForgotForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Forgot = props => {\r\n    const [showError, toggleError] = useState(false);\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    function handleSubmit(values, actions) {\r\n        AuthAPI.forgot(values)\r\n            .then(payload => {\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                // If forgot API fails show error and then set submitting back to false\r\n                // toggleError(true);\r\n                // If forgot API fails show succesmessage anyway\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"authorization-container\">\r\n            <Row className=\"justify-content-center align-content-center full-height\">\r\n                <Col xs=\"12\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"4\">\r\n                    <img src={`images/logo.png?${imageHash}`} alt=\"\" className=\"image logo-container\" />\r\n                    {showSuccessMessage ? (\r\n                        <div>\r\n                            <Row className={'justify-content-center '}>\r\n                                <h3 className={'authorization-text'}>Een E-mail is onderweg!</h3>\r\n                            </Row>\r\n                            <Row className={'justify-content-center '}>\r\n                                <p className={'authorization-text'}>\r\n                                    Heb je een account voor jouw online portal? Dan ontvang je binnen enkele minuten een\r\n                                    e-mail met een persoonlijke link. Via deze link kun je een nieuw wachtwoord\r\n                                    instellen.\r\n                                    <br />\r\n                                    <br />\r\n                                    Is jouw online portal nog niet geactiveerd? Dan ontvang je ook geen e-mail. Neem\r\n                                    hiervoor contact op met ons.\r\n                                    <br />\r\n                                    <br />\r\n                                    Let op: het kan zijn dat de mail door een spamfilter is geblokkeerd. Spamfilters van\r\n                                    bijvoorbeeld Gmail en Hotmail staan erg \"scherp\". Kijk even bij de Spam/Reclame of\r\n                                    je onze mail daar terug vindt.\r\n                                </p>\r\n                            </Row>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Row className={'justify-content-center '}>\r\n                                <h3 className={'authorization-text'}>Wachtwoord vergeten</h3>\r\n                            </Row>\r\n                            <Row className={'justify-content-center '}>\r\n                                <p className={'authorization-text'}>\r\n                                    Vul het e-mailadres in waarmee je inlogt en dat bij ons bekend is. Je ontvangt van\r\n                                    ons een e-mail waarmee je een nieuw wachtwoord kunt instellen. Let op: dit werkt\r\n                                    alleen als jouw online portal geactiveerd. Is deze nog niet geactiveerd? Neem dan\r\n                                    contact met ons op.\r\n                                </p>\r\n                            </Row>\r\n                            <Row className={'justify-content-center '}>\r\n                                <Col xs={12} md={6}>\r\n                                    <ForgotForm handleSubmit={handleSubmit} showSuccessMessage={showSuccessMessage} />\r\n                                    {showError ? (\r\n                                        <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                            E-mailadres is niet bekend!\r\n                                        </Alert>\r\n                                    ) : null}\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )}\r\n                    <Row className={'justify-content-center '}>\r\n                        <Link to={'/login'} className=\"authorization-link\">\r\n                            Terug naar inloggen\r\n                        </Link>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Forgot;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(10, 'Minimum van ${min} verplicht')\r\n        .matches(/([0-9])/, 'Minimaal 1 cijfer is verplicht')\r\n        .matches(/([A-Z])/, 'Minimaal 1 hoofdletter is verplicht')\r\n        .required('Verplicht'),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Wachtwoorden moeten gelijk zijn')\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst ResetForm = ({ handleSubmit, email }) => (\r\n    <Formik\r\n        initialValues={{ password: '', passwordConfirmation: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <Row className=\"justify-content-center\">\r\n                    <p className={'authorization-text'}>\r\n                        Stel een nieuw wachtwoord in voor <strong>{email}</strong>. Daarna ben je direct ingelogd.\r\n                    </p>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Field\r\n                        name=\"password\"\r\n                        render={({ field }) => (\r\n                            <InputText\r\n                                field={field}\r\n                                id=\"password\"\r\n                                className={field.value ? 'numeric-password' : ''}\r\n                                placeholder={'Nieuw wachtwoord'}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                                classNameErrorMessage={'authorization-text'}\r\n                            />\r\n                        )}\r\n                    />\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Field\r\n                        name=\"passwordConfirmation\"\r\n                        render={({ field }) => (\r\n                            <InputText\r\n                                field={field}\r\n                                id=\"passwordConfirmation\"\r\n                                className={field.value ? 'numeric-password' : ''}\r\n                                placeholder={'Herhaal nieuw wachtwoord'}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                                classNameErrorMessage={'authorization-text mb-3'}\r\n                            />\r\n                        )}\r\n                    />\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <small className={'authorization-text'}>\r\n                        Het wachtwoord moet minimaal 10 karakters lang zijn en moet minimaal 1 cijfer en 1 hoofdletter\r\n                        bevatten.\r\n                    </small>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <ButtonText\r\n                        buttonText={'Verzenden'}\r\n                        buttonClassName={'authorization-button'}\r\n                        size=\"sm\"\r\n                        type={'submit'}\r\n                        loading={isSubmitting}\r\n                        loadingSpinnerColor={'#034b8c'}\r\n                    />\r\n                </Row>\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default ResetForm;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport ResetForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { AuthConsumer } from '../../../context/AuthContext';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\n\r\nconst Reset = ({ location, match, login }) => {\r\n    const [showError, toggleError] = useState(false);\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const token = decodeURIComponent(match.params.token);\r\n    const email = decodeURIComponent(match.params.email);\r\n\r\n    const [redirectToReferrer, toggleRedirect] = useState(false);\r\n    let { from } = location.state || { from: { pathname: '/dashboard' } };\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    function handleSubmit(values, actions) {\r\n        AuthAPI.reset({ token, email, password: values.password, password_confirmation: values.passwordConfirmation })\r\n            .then(payload => {\r\n                toggleSuccessMessage(true);\r\n                AuthAPI.login({ username: email, password: values.password })\r\n                    .then(payload => {\r\n                        toggleError(false);\r\n                        login(payload.data, () => {});\r\n\r\n                        setTimeout(() => {\r\n                            toggleRedirect(true);\r\n                        }, 15000);\r\n                    })\r\n                    .catch(error => {\r\n                        // If login fails show error and then set submitting back to false\r\n                        toggleError(true);\r\n                        actions.setSubmitting(false);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // If login fails show error and then set submitting back to false\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect() {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {redirectToReferrer ? (\r\n                redirect()\r\n            ) : (\r\n                <Container fluid className=\"authorization-container\">\r\n                    <Row className=\"justify-content-center align-content-center full-height\">\r\n                        <Col xs=\"12\" sm=\"8\" md=\"6\" lg=\"4\" xl=\"2\">\r\n                            <img src={`images/logo.png?${imageHash}`} alt=\"\" className=\"image logo-container\" />\r\n                            {showSuccessMessage ? (\r\n                                <>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <h3 className={'authorization-text'}>Je wachtwoord is ingesteld</h3>\r\n                                    </Row>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <p className={'authorization-text'}>Je bent nu ingelogd</p>\r\n                                    </Row>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <ButtonText\r\n                                            buttonText={'Ga verder'}\r\n                                            onClickAction={toggleRedirect}\r\n                                            buttonClassName={'authorization-button'}\r\n                                            size=\"sm\"\r\n                                        />\r\n                                    </Row>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <h3 className={'authorization-text'}>Wachtwoord wijzigen</h3>\r\n                                    </Row>\r\n                                    <ResetForm handleSubmit={handleSubmit} email={email} />\r\n                                </>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default function ResetWithContext(props) {\r\n    return <AuthConsumer>{({ login }) => <Reset {...props} login={login} />}</AuthConsumer>;\r\n}\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nfunction Loading() {\r\n    return (\r\n        <Row className=\"justify-content-center align-content-center flex-wrap\" style={{ height: '40vh' }}>\r\n            <ClipLoader color={'#3898EC'} size={48} />\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    fetchContact: function(id) {\r\n        const requestUrl = `/jory/contact/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'typeId',\r\n                        'number',\r\n                        'fullNameFnf',\r\n                        'firstName',\r\n                        'lastNamePrefix',\r\n                        'lastName',\r\n                        'hasFinancialOverviews',\r\n                        'iban',\r\n                        'ibanAttn',\r\n                        'didAgreeAvg',\r\n                        'dateDidAgreeAvg',\r\n                        'addressLines',\r\n                        'isParticipant',\r\n                        'disableChangeContactNameOnPortal',\r\n                        'noAddressesFound',\r\n                        'isParticipantPcrProject',\r\n                        'isParticipantSceProject',\r\n                        'blockChangeAddress',\r\n                        'blockChangeAddressNumber',\r\n                    ],\r\n                    rlt: {\r\n                        person: {\r\n                            fld: [\r\n                                'id',\r\n                                'firstName',\r\n                                'lastName',\r\n                                'initials',\r\n                                'titleId',\r\n                                'lastNamePrefix',\r\n                                'lastNamePrefixId',\r\n                                'dateOfBirth',\r\n                            ],\r\n                            rlt: {\r\n                                title: { fld: ['id', 'name'] },\r\n                            },\r\n                        },\r\n                        organisation: {\r\n                            fld: ['id', 'name', 'website', 'chamberOfCommerceNumber', 'vatNumber'],\r\n                        },\r\n                        emailAddresses: { fld: ['id', 'email', 'primary', 'typeId'] },\r\n                        phoneNumbers: { fld: ['id', 'number', 'primary', 'typeId'] },\r\n                        addresses: {\r\n                            fld: [\r\n                                'id',\r\n                                'street',\r\n                                'number',\r\n                                'addition',\r\n                                'postalCode',\r\n                                'city',\r\n                                'countryId',\r\n                                'primary',\r\n                                'typeId',\r\n                                'eanElectricity',\r\n                                'eanGas',\r\n                            ],\r\n                            rlt: {\r\n                                country: { fld: ['id', 'name'] },\r\n                                primaryAddressEnergySupplierElectricity: {\r\n                                    fld: [\r\n                                        'id',\r\n                                        'energySupplierId',\r\n                                        'esNumber',\r\n                                        'memberSince',\r\n                                        'isCurrentSupplier',\r\n                                        'endDatePrevious',\r\n                                        'memberSinceNext',\r\n                                    ],\r\n                                    rlt: { energySupplier: [] },\r\n                                    flt: {\r\n                                        f: 'isCurrentSupplier',\r\n                                        d: true,\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                        occupations: {\r\n                            fld: ['id', 'occupationId', 'primaryContactId', 'contactId', 'primary'],\r\n                            rlt: {\r\n                                occupation: {\r\n                                    fld: ['id', 'primaryOccupation', 'secondaryOccupation', 'occupationForPortal'],\r\n                                },\r\n                                primaryContact: {\r\n                                    fld: ['id', 'fullNameFnf'],\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    fetchContactWithParticipants: function(id) {\r\n        const requestUrl = `/jory/contact/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'typeId',\r\n                        'number',\r\n                        'fullNameFnf',\r\n                        'typeId',\r\n                        'firstName',\r\n                        'lastNamePrefix',\r\n                        'lastName',\r\n                        'iban',\r\n                        'ibanAttn',\r\n                        'didAgreeAvg',\r\n                        'dateDidAgreeAvg',\r\n                        'addressLines',\r\n                    ],\r\n                    rlt: {\r\n                        participations: {\r\n                            fld: [\r\n                                'id',\r\n                                'dateRegister',\r\n                                'didAcceptAgreement',\r\n                                'dateDidAcceptAgreement',\r\n                                'didUnderstandInfo',\r\n                                'dateDidUnderstandInfo',\r\n                                'participationsDefinitive',\r\n                                'participationsGranted',\r\n                                'participationsOptioned',\r\n                                'participationsInteressed',\r\n                                'amountDefinitive',\r\n                                'amountGranted',\r\n                                'amountOptioned',\r\n                                'amountInteressed',\r\n                                'powerKwhConsumption',\r\n                            ],\r\n                            rlt: {\r\n                                project: {\r\n                                    fld: [\r\n                                        'id',\r\n                                        'name',\r\n                                        'dateEnd',\r\n                                        'linkProjectInfo',\r\n                                        'linkUnderstandInfo',\r\n                                        'showQuestionAboutMembership',\r\n                                        'usesMollie',\r\n                                    ],\r\n                                    rlt: {\r\n                                        projectType: { fld: ['id', 'codeRef'] },\r\n                                        administration: { fld: ['name'] },\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    updateContact: contact => {\r\n        const requestUrl = `/contact/${contact.id}`;\r\n\r\n        return axiosInstance.post(requestUrl, contact);\r\n    },\r\n\r\n    previewDocument: registerValues => {\r\n        const requestUrl = `/contact/${registerValues.contactId}/${registerValues.projectId}/preview-document`;\r\n\r\n        return axiosInstance.post(requestUrl, registerValues);\r\n    },\r\n\r\n    fetchContactProjects: function(contactId, projectId) {\r\n        const requestUrl = `/contact/${contactId}/contact-projects`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n\r\n    fetchContactProjectData: function(contactId, projectId) {\r\n        const requestUrl = `/contact/${contactId}/${projectId}/contact-project-data`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n\r\n    fetchContactFinancialOverviewDocuments: function(contactId) {\r\n        const requestUrl = `/contact/${contactId}/financial-overview-documents`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n\r\n    financialOverviewContactDownload: function(id) {\r\n        const requestUrl = `/financial-overview-contact/${id}/download`;\r\n\r\n        return axiosInstance(requestUrl, { responseType: 'blob' });\r\n    },\r\n\r\n    fetchContactRelatedAdministrations: function(contactId) {\r\n        const requestUrl = `/contact/${contactId}/related-administrations`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n};\r\n","export default function(contactData) {\r\n    const typeContact = contactData.typeId ? contactData.typeId : null;\r\n\r\n    let emptyPrimaryAddressEnergySupplierElectricity = {\r\n        energySupplierId: null,\r\n        esNumber: '',\r\n        memberSince: '',\r\n    };\r\n    let emptyAddress = {\r\n        street: '',\r\n        number: '',\r\n        addition: '',\r\n        postalCode: '',\r\n        city: '',\r\n        countryId: null,\r\n        eanElectricity: '',\r\n        eanGas: '',\r\n        primaryAddressEnergySupplierElectricity: emptyPrimaryAddressEnergySupplierElectricity,\r\n    };\r\n    let primaryAddress = null;\r\n    let visitAddress = null;\r\n    let postalAddress = null;\r\n    let invoiceAddress = null;\r\n    switch (typeContact) {\r\n        case 'person':\r\n            // Set primary address\r\n            primaryAddress = contactData.addresses.find(address => address.primary);\r\n            contactData.primaryAddress = primaryAddress ? { ...emptyAddress, ...primaryAddress } : emptyAddress;\r\n            if (!contactData.primaryAddress.primaryAddressEnergySupplierElectricity) {\r\n                contactData.primaryAddress.primaryAddressEnergySupplierElectricity = {\r\n                    ...contactData.primaryAddress,\r\n                    emptyPrimaryAddressEnergySupplierElectricity,\r\n                };\r\n            }\r\n            break;\r\n        case 'organisation':\r\n            // Set visit, postal, invoice addresses\r\n            visitAddress = contactData.addresses.find(address => address.typeId === 'visit');\r\n            contactData.visitAddress = visitAddress ? { ...emptyAddress, ...visitAddress } : emptyAddress;\r\n            if (!contactData.visitAddress.primaryAddressEnergySupplierElectricity) {\r\n                contactData.visitAddress.primaryAddressEnergySupplierElectricity = {\r\n                    ...contactData.visitAddress,\r\n                    emptyPrimaryAddressEnergySupplierElectricity,\r\n                };\r\n            }\r\n            postalAddress = contactData.addresses.find(address => address.typeId === 'postal');\r\n            contactData.postalAddress = postalAddress ? { ...emptyAddress, ...postalAddress } : emptyAddress;\r\n            invoiceAddress = contactData.addresses.find(address => address.typeId === 'invoice');\r\n            contactData.invoiceAddress = invoiceAddress ? { ...emptyAddress, ...invoiceAddress } : emptyAddress;\r\n            break;\r\n    }\r\n\r\n    // Set correspondence email address\r\n    let emptyEmail = { email: '' };\r\n    const emailCorrespondence = contactData.emailAddresses.find(emailAddress => emailAddress.primary);\r\n    contactData.emailCorrespondence = emailCorrespondence ? { ...emptyEmail, ...emailCorrespondence } : emptyEmail;\r\n\r\n    // Set invoice email address\r\n    const emailInvoice = contactData.emailAddresses.find(\r\n        emailAddress => emailAddress.typeId === 'invoice' && !emailAddress.primary\r\n    );\r\n    contactData.emailInvoice = emailInvoice ? { ...emptyEmail, ...emailInvoice } : emptyEmail;\r\n\r\n    // Set primary phone number\r\n    let emptyPhoneNumber = { number: '' };\r\n    const phoneNumberPrimary = contactData.phoneNumbers.find(phoneNumber => phoneNumber.primary);\r\n    contactData.phoneNumberPrimary = phoneNumberPrimary\r\n        ? { ...emptyPhoneNumber, ...phoneNumberPrimary }\r\n        : emptyPhoneNumber;\r\n\r\n    // Set first phone number which is not primary\r\n    const phoneNumberTwo = contactData.phoneNumbers.filter(phoneNumber => !phoneNumber.primary)[0];\r\n    contactData.phoneNumberTwo = phoneNumberTwo ? { ...emptyPhoneNumber, ...phoneNumberTwo } : emptyPhoneNumber;\r\n\r\n    return contactData;\r\n}\r\n","import { Card, CardImg } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst DashboardWidget = function({\r\n    id,\r\n    title,\r\n    text,\r\n    image,\r\n    buttonText,\r\n    buttonLink,\r\n    backgroundColorUsed,\r\n    textColorUsed,\r\n}) {\r\n    const history = useHistory();\r\n    const key = 'widget-' + id;\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    let externalLink = null;\r\n    if (buttonLink.toLowerCase().startsWith('www')) {\r\n        externalLink = 'https://' + buttonLink;\r\n    } else if (buttonLink.toLowerCase().startsWith('http') || buttonLink.toLowerCase().startsWith('https')) {\r\n        externalLink = buttonLink;\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            key={key}\r\n            id={key}\r\n            style={{ marginTop: '30px', backgroundColor: backgroundColorUsed, color: textColorUsed }}\r\n        >\r\n            <CardImg\r\n                src={image && image.includes('images/') ? image + '?' + imageHash : 'images/' + image + '?' + imageHash}\r\n                variant={'top'}\r\n            />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{title}</h5>\r\n                <p className=\"card-text\" style={{ whiteSpace: 'break-spaces' }}>\r\n                    {text}\r\n                </p>\r\n                {externalLink === null ? (\r\n                    <button className=\"w-button btn btn-primary btn-sm\" onClick={() => history.push(buttonLink)}>\r\n                        {buttonText}\r\n                    </button>\r\n                ) : (\r\n                    <a href={externalLink} target=\"_blank\">\r\n                        <button className=\"w-button btn btn-primary btn-sm\">{buttonText}</button>\r\n                    </a>\r\n                )}\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default DashboardWidget;\r\n","import { Button, Card } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { isEmpty } from 'lodash';\r\n\r\nexport const ContactDetailsDashboardWidget = function({ contact, backgroundColorUsed, textColorUsed }) {\r\n    const history = useHistory();\r\n    const key = 'widget-' + 'contact-details';\r\n\r\n    const typeContact = contact.typeId ? contact.typeId : null;\r\n\r\n    return (\r\n        <Card\r\n            key={key}\r\n            id={key}\r\n            style={{ marginTop: '30px', backgroundColor: backgroundColorUsed, color: textColorUsed }}\r\n        >\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{contact.fullNameFnf}</h5>\r\n                <div className=\"card-text\">\r\n                    {typeContact === 'person' ? (\r\n                        <>\r\n                            {contact.primaryAddress !== undefined ? (\r\n                                <div>\r\n                                    <b>Adres</b>\r\n                                    <br />\r\n                                    {contact.primaryAddress.street} {contact.primaryAddress.number}\r\n                                    <br />\r\n                                    {contact.primaryAddress.postalCode} {contact.primaryAddress.city},{' '}\r\n                                    {contact.primaryAddress.country ? contact.primaryAddress.country.name : ''}\r\n                                </div>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                        </>\r\n                    ) : null}\r\n                    {typeContact === 'organisation' ? (\r\n                        <>\r\n                            {contact.visitAddress !== undefined ? (\r\n                                <div>\r\n                                    <b>Bezoekadres</b>\r\n                                    <br />\r\n                                    {contact.visitAddress.street} {contact.visitAddress.number}\r\n                                    <br />\r\n                                    {contact.visitAddress.postalCode} {contact.visitAddress.city},{' '}\r\n                                    {contact.visitAddress.country ? contact.visitAddress.country.name : ''}\r\n                                </div>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                            {contact.postalAddress !== undefined &&\r\n                            contact.postalAddress &&\r\n                            !isEmpty(contact.postalAddress.postalCode) ? (\r\n                                <div>\r\n                                    <b>Postadres</b>\r\n                                    <br />\r\n                                    {contact.postalAddress.street} {contact.postalAddress.number}\r\n                                    <br />\r\n                                    {contact.postalAddress.postalCode} {contact.postalAddress.city},{' '}\r\n                                    {contact.postalAddress.country ? contact.postalAddress.country.name : ''}\r\n                                </div>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                            {contact.invoiceAddress !== undefined &&\r\n                            contact.invoiceAddress &&\r\n                            !isEmpty(contact.invoiceAddress.postalCode) ? (\r\n                                <div>\r\n                                    <b>Nota adres</b>\r\n                                    <br />\r\n                                    {contact.invoiceAddress.street} {contact.invoiceAddress.number}\r\n                                    <br />\r\n                                    {contact.invoiceAddress.postalCode} {contact.invoiceAddress.city},{' '}\r\n                                    {contact.invoiceAddress.country ? contact.invoiceAddress.country.name : ''}\r\n                                </div>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <div>\r\n                        <br />\r\n                        <b>Telefoon</b>\r\n                        <br />\r\n                        {contact.phoneNumberPrimary.number}\r\n                    </div>\r\n                    <div>\r\n                        <br />\r\n                        <b>E-mail</b>\r\n                        <br />\r\n                        {contact.emailCorrespondence.email}\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <button className=\"w-button btn btn-primary btn-sm\" onClick={() => history.push('/gegevens')}>\r\n                    Gegevens beheren\r\n                </button>\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport const SwitchContactDashboardWidget = function({\r\n    user,\r\n    currentSelectedContact,\r\n    switchCurrentContact,\r\n    backgroundColorUsed,\r\n    textColorUsed,\r\n}) {\r\n    const history = useHistory();\r\n    const key = 'widget-' + 'switch-contact';\r\n\r\n    return (\r\n        <Card\r\n            key={key}\r\n            id={key}\r\n            style={{ marginTop: '30px', backgroundColor: backgroundColorUsed, color: textColorUsed }}\r\n        >\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Wissel van contact</h5>\r\n                <div\r\n                    className=\"card-text\"\r\n                    style={{ display: 'flex', justifyContent: 'space-between', overflowX: 'auto' }}\r\n                >\r\n                    {user.occupations && user.occupations.length > 0 ? (\r\n                        <>\r\n                            <Button\r\n                                className=\"w-button btn btn-primary btn-sm\"\r\n                                key={'user-' + user.id}\r\n                                id={'user-' + user.id}\r\n                                onClick={() => {\r\n                                    switchCurrentContact(user);\r\n                                }}\r\n                                disabled={currentSelectedContact.id === user.id}\r\n                                style={{ margin: '5px' }}\r\n                            >\r\n                                {user.fullNameFnf}\r\n                            </Button>\r\n                            {user.occupations.map(occupationContact =>\r\n                                (occupationContact.primaryContact.typeId === 'organisation' &&\r\n                                    occupationContact.primary) ||\r\n                                (occupationContact.primaryContact.typeId === 'person' &&\r\n                                    occupationContact.occupation.occupationForPortal) ? (\r\n                                    <Button\r\n                                        className=\"w-button btn btn-primary btn-sm\"\r\n                                        key={'user-' + occupationContact.primaryContact.id}\r\n                                        id={'user-' + occupationContact.primaryContact.id}\r\n                                        onClick={() => {\r\n                                            switchCurrentContact(occupationContact.primaryContact);\r\n                                        }}\r\n                                        disabled={currentSelectedContact.id === occupationContact.primaryContact.id}\r\n                                        style={{ margin: '5px' }}\r\n                                    >\r\n                                        {occupationContact.primaryContact.fullNameFnf}\r\n                                    </Button>\r\n                                ) : null\r\n                            )}\r\n                        </>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nconst URL_PORTAL_SETTINGS_DASHBOARD = `/portal-settings-dashboard`;\r\n\r\nexport default {\r\n    fetchDashboardSettings: (id, contactId) => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS_DASHBOARD}/${id}/${contactId}`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n};\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {PortalUserConsumer} from '../../context/PortalUserContext';\r\nimport LoadingView from '../../components/general/LoadingView';\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport ContactAPI from '../../api/contact/ContactAPI';\r\nimport rebaseContact from '../../helpers/RebaseContact';\r\nimport DashboardWidget from './widget';\r\nimport {ContactDetailsDashboardWidget, SwitchContactDashboardWidget} from './widget/default';\r\nimport DashboardSettingsAPI from '../../api/dashboard/DashboardSettingsAPI';\r\nimport {isEmpty} from 'lodash';\r\n\r\nconst Dashboard = function (props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [contact, setContact] = useState({});\r\n    const [dashboardSettings, setDashboardSettings] = useState({});\r\n    const prevCurrentSelectedContact = usePrevious(props.currentSelectedContact);\r\n\r\n    useEffect(() => {\r\n        // Call Api if current selected contact id is filled\r\n        if (props.currentSelectedContact.id) {\r\n            // If there is no previous selected contact OR previous selected contact is not the same as current selected contact\r\n            if (!prevCurrentSelectedContact || prevCurrentSelectedContact.id != props.currentSelectedContact.id) {\r\n                callFetchContact();\r\n            }\r\n        }\r\n    }, [props.currentSelectedContact]);\r\n\r\n    function callFetchContact() {\r\n        setLoading(true);\r\n        ContactAPI.fetchContact(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                const contactData = rebaseContact(payload.data.data);\r\n\r\n                setContact(contactData);\r\n                props.updateNameSelectedContact(\r\n                    contactData.fullNameFnf,\r\n                    contactData.typeId,\r\n                    contactData.firstName,\r\n                    contactData.lastNamePrefix,\r\n                    contactData.lastName\r\n                );\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            })\r\n            .finally(() => callFetchDashboardSettings());\r\n    }\r\n\r\n    function callFetchDashboardSettings() {\r\n        setLoading(true);\r\n        // todo WM: check anders\r\n        //\r\n        const id = 1;\r\n        DashboardSettingsAPI.fetchDashboardSettings(id, props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                setDashboardSettings(payload.data.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function usePrevious(value) {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-section\">\r\n            {isLoading ? (\r\n                <LoadingView/>\r\n            ) : (\r\n                <div className=\"content-container w-container\">\r\n                    <Row>\r\n                        <Col>\r\n                            {!isEmpty(dashboardSettings.welcomeTitle) ? (\r\n                                <h1 className=\"content-heading mt-0 text-center\">{dashboardSettings.welcomeTitle}</h1>\r\n                            ) : null}\r\n                            {!isEmpty(dashboardSettings.welcomeMessage) ? (\r\n                                <p className={'text-center'} style={{whiteSpace: 'break-spaces'}}>\r\n                                    {dashboardSettings.welcomeMessage}\r\n                                </p>\r\n                            ) : null}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {dashboardSettings.widgets\r\n                            .filter(w => w.active)\r\n                            .sort((a, b) => (a.order > b.order ? 1 : -1))\r\n                            .map(widget => (\r\n                                <Col md={6}>\r\n                                    <DashboardWidget\r\n                                        id={widget.codeRef}\r\n                                        image={widget.widgetImageFileName}\r\n                                        title={widget.title}\r\n                                        text={widget.text}\r\n                                        buttonText={widget.buttonText}\r\n                                        buttonLink={widget.buttonLink}\r\n                                        backgroundColorUsed={widget.backgroundColorUsed}\r\n                                        textColorUsed={widget.textColorUsed}\r\n                                    />\r\n                                </Col>\r\n                            ))}\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <ContactDetailsDashboardWidget\r\n                                contact={contact}\r\n                                backgroundColorUsed={dashboardSettings.defaultWidgetBackgroundColor}\r\n                                textColorUsed={dashboardSettings.defaultWidgetTextColor}\r\n                            />\r\n                        </Col>\r\n                        <PortalUserConsumer>\r\n                            {({user, currentSelectedContact, switchCurrentContact}) => {\r\n                                if (user.occupations && user.occupations.length > 0) {\r\n                                    return (\r\n                                        <Col md={6}>\r\n                                            <SwitchContactDashboardWidget\r\n                                                user={user}\r\n                                                currentSelectedContact={currentSelectedContact}\r\n                                                switchCurrentContact={switchCurrentContact}\r\n                                                backgroundColorUsed={dashboardSettings.defaultWidgetBackgroundColor}\r\n                                                textColorUsed={dashboardSettings.defaultWidgetTextColor}\r\n                                            />\r\n                                        </Col>\r\n                                    );\r\n                                }\r\n                            }}\r\n                        </PortalUserConsumer>\r\n                    </Row>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CoachDashboard = function (props) {\r\n    return (\r\n        <div className=\"content-section\">\r\n            <div className=\"content-container w-container\">\r\n                <Row>\r\n                    <Col>\r\n                        <h1 className=\"content-heading mt-0 text-center\">Coach dashboard</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <DashboardWidget\r\n                            id=\"coach-dashboard-widget-1\"\r\n                            image={props.user.portalSettingsLayoutAssigned.portal_image_bg_file_name_header}\r\n                            title=\"Schouwen\"\r\n                            text=\"Bekijk de te schouwen woningen\"\r\n                            buttonText=\"Schouwen\"\r\n                            buttonLink=\"/schouwen\"\r\n                            backgroundColorUsed=\"#ffffff\"\r\n                            textColorUsed=\"#000000\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function DashboardWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({user, currentSelectedContact, updateNameSelectedContact}) => (\r\n                <>\r\n                    {user.id > 0 && (\r\n                        <>\r\n                            {user.isCoach ? (\r\n                                <CoachDashboard\r\n                                    {...props}\r\n                                    user={user}\r\n                                    currentSelectedContact={currentSelectedContact}\r\n                                    updateNameSelectedContact={updateNameSelectedContact}\r\n                                />\r\n                            ) : (\r\n                                <Dashboard\r\n                                    {...props}\r\n                                    user={user}\r\n                                    currentSelectedContact={currentSelectedContact}\r\n                                    updateNameSelectedContact={updateNameSelectedContact}\r\n                                />\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextBlock = ({ children, className, id, placeholder }) => {\r\n    const showPlaceholder = children === '' || children === null || children === undefined;\r\n\r\n    return (\r\n        <div className={`text-block ${className} ${showPlaceholder ? 'placeholder' : ''}`} id={id}>\r\n            {showPlaceholder ? <div className={'placeholder-message'}>{placeholder}</div> : children}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextBlock.defaultProps = {\r\n    className: 'text-block',\r\n    id: '',\r\n    children: '',\r\n    placeholder: '',\r\n};\r\n\r\nTextBlock.propTypes = {\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    placeholder: PropTypes.string,\r\n};\r\n\r\nexport default TextBlock;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Row from 'react-bootstrap/Row';\r\nimport moment from 'moment';\r\n\r\nfunction DefaultContactPersonalView({ portalSettings, initialContact }) {\r\n    const {\r\n        person = {},\r\n        emailCorrespondence,\r\n        emailInvoice,\r\n        phoneNumberPrimary,\r\n        phoneNumberTwo,\r\n        primaryAddress,\r\n        iban,\r\n        ibanAttn,\r\n        didAgreeAvg,\r\n        dateDidAgreeAvg,\r\n        number,\r\n    } = initialContact;\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>Naam</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Aanhef'}>\r\n                        {person.title ? person.title.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Initialen'}>\r\n                        {person.initials}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Voornaam'}>\r\n                        {person.firstName}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Tussenvoegsel'}>\r\n                        {person.lastNamePrefix}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Achternaam'}>\r\n                        {person.lastName}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>Geboortedatum</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Geboortedatum (dd-mm-jjjj)'}>\r\n                        {person.dateOfBirth ? moment(person.dateOfBirth).format('L') : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres correspondentie</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailCorrespondence.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres nota</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailInvoice.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 1</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberPrimary.number}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 2</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberTwo.number}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Adres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {primaryAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {primaryAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {primaryAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {primaryAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {primaryAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {primaryAddress.country ? primaryAddress.country.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>EAN nummer electriciteit</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer electriciteit'}>\r\n                        {primaryAddress.eanElectricity}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>EAN nummer gas</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer gas'}>\r\n                        {primaryAddress.eanGas}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{number}</TextBlock>\r\n                </Row>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>IBAN gegevens</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Rekeningnummer (IBAN)'}>\r\n                        {iban}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'IBAN te name van'}>\r\n                        {ibanAttn}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Akkoord privacybeleid</FormLabel>\r\n                <Row>\r\n                    <div className={'col-12 col-sm-8'}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"did_agree_avg\"\r\n                            checked={didAgreeAvg}\r\n                            className=\"w-checkbox-input checkbox\"\r\n                            disabled={true}\r\n                        />\r\n                        <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                            Ik ga akkoord met{' '}\r\n                            <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                privacybeleid\r\n                            </a>{' '}\r\n                            {didAgreeAvg ? (\r\n                                <em>({dateDidAgreeAvg ? ' ' + moment(dateDidAgreeAvg).format('L') : ''})</em>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                        </span>\r\n                    </div>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Huidige energie leverancier</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Energieleverancier'}>\r\n                        {primaryAddress.primaryAddressEnergySupplierElectricity.energySupplier\r\n                            ? primaryAddress.primaryAddressEnergySupplierElectricity.energySupplier.name\r\n                            : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                {primaryAddress.primaryAddressEnergySupplierElectricity &&\r\n                primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId ? (\r\n                    <>\r\n                        <FormLabel className={'field-label'}>Klant nummer bij leverancier</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant nummer'}>\r\n                                {primaryAddress.primaryAddressEnergySupplierElectricity.esNumber}\r\n                            </TextBlock>\r\n                        </Row>\r\n\r\n                        <FormLabel className={'field-label'}>Klant bij leverancier sinds</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant sinds'}>\r\n                                {primaryAddress.primaryAddressEnergySupplierElectricity.memberSince\r\n                                    ? moment(primaryAddress.primaryAddressEnergySupplierElectricity.memberSince).format(\r\n                                          'L'\r\n                                      )\r\n                                    : ''}\r\n                            </TextBlock>\r\n                        </Row>\r\n                    </>\r\n                ) : (\r\n                    ''\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default DefaultContactPersonalView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get } from 'lodash';\r\n\r\nconst Select = ({\r\n    field,\r\n    className,\r\n    id,\r\n    options,\r\n    optionLabel,\r\n    emptyOption,\r\n    placeholder,\r\n    showErrorMessage,\r\n    errors,\r\n    touched,\r\n    classNameErrorMessage,\r\n    disabled,\r\n    customOnChange = null,\r\n}) => {\r\n    if (customOnChange) {\r\n        field.onChange = customOnChange;\r\n    }\r\n    return (\r\n        <>\r\n            {get(errors, field.name, '') && get(touched, field.name, '') && showErrorMessage ? (\r\n                <small className={`${classNameErrorMessage}`}>{get(errors, field.name, '')}</small>\r\n            ) : null}\r\n            <select\r\n                className={`select-field w-select content ${className} ${\r\n                    Boolean(get(errors, field.name, '') && get(touched, field.name, '')) ? 'has-error mb-0' : ''\r\n                } `}\r\n                id={id}\r\n                {...field}\r\n                disabled={disabled}\r\n            >\r\n                {emptyOption ? <option value=\"\">{placeholder ? `-- ${placeholder} --` : ''}</option> : null}\r\n                {options.map(option => {\r\n                    return (\r\n                        <option key={option.id} value={option.id}>\r\n                            {option[optionLabel]}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </select>\r\n        </>\r\n    );\r\n};\r\n\r\nSelect.defaultProps = {\r\n    className: '',\r\n    readOnly: false,\r\n    required: '',\r\n    optionLabel: 'name',\r\n    emptyOption: true,\r\n    placeholder: '',\r\n    showErrorMessage: true,\r\n    classNameErrorMessage: 'text-danger',\r\n    errors: {},\r\n    touched: {},\r\n};\r\n\r\nSelect.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    options: PropTypes.array.isRequired,\r\n    optionLabel: PropTypes.string,\r\n    emptyOption: PropTypes.bool,\r\n    placeholder: PropTypes.string,\r\n    showErrorMessage: PropTypes.bool,\r\n    classNameErrorMessage: PropTypes.string,\r\n    errors: PropTypes.object,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default Select;\r\n","export default [\r\n    { id: 'AU', name: 'Australië' },\r\n    { id: 'BE', name: 'België' },\r\n    { id: 'CA', name: 'Canade' },\r\n    { id: 'DK', name: 'Denemarken' },\r\n    { id: 'DE', name: 'Duitsland' },\r\n    { id: 'FI', name: 'Finland' },\r\n    { id: 'FR', name: 'Frankrijk' },\r\n    { id: 'IE', name: 'Ierland' },\r\n    { id: 'IT', name: 'Italië' },\r\n    { id: 'LU', name: 'Luxemburg' },\r\n    { id: 'NL', name: 'Nederland' },\r\n    { id: 'NZ', name: 'Nieuw-Zeeland' },\r\n    { id: 'NO', name: 'Noorwegen' },\r\n    { id: 'AT', name: 'Oostenrijk' },\r\n    { id: 'PL', name: 'Polen' },\r\n    { id: 'PT', name: 'Portugal' },\r\n    { id: 'ES', name: 'Spanje' },\r\n    { id: 'CZ', name: 'Tsjechië' },\r\n    { id: 'GB', name: 'Verenigd Koninkrijk' },\r\n    { id: 'VS', name: 'Verenigde Staten' },\r\n    { id: 'SE', name: 'Zweden' },\r\n    { id: 'CH', name: 'Zwitserland' },\r\n];\r\n","export default [\r\n    { id: 26, name: 'Agem' },\r\n    { id: 27, name: 'Anode Energie' },\r\n    { id: 66, name: 'ANWB Energie' },\r\n    { id: 24, name: 'Betuwe stroom' },\r\n    { id: 2, name: 'Budget Energie' },\r\n    { id: 58, name: 'CEN / WoonEnergie' },\r\n    { id: 54, name: 'Clean Energy' },\r\n    { id: 68, name: 'Coolblue Energie' },\r\n    { id: 28, name: 'De Groene Stroomfabriek' },\r\n    { id: 59, name: 'De Vrije Energie Producent' },\r\n    { id: 25, name: 'Delta Energie' },\r\n    { id: 50, name: 'DGB Energie' },\r\n    { id: 51, name: 'Discount Energie' },\r\n    { id: 46, name: 'Dorpstroom' },\r\n    { id: 53, name: 'DVEP Energie' },\r\n    { id: 3, name: 'E.on' },\r\n    { id: 45, name: 'Easyenergy' },\r\n    { id: 4, name: 'Eneco' },\r\n    { id: 19, name: 'Energie VanOns' },\r\n    { id: 42, name: 'Energiebesteding' },\r\n    { id: 5, name: 'Energiedirect' },\r\n    { id: 21, name: 'Energieflex' },\r\n    { id: 37, name: 'Energyhouse' },\r\n    { id: 49, name: 'EnergyZero' },\r\n    { id: 52, name: 'EnerZie' },\r\n    { id: 6, name: 'Engie' },\r\n    { id: 7, name: 'Essent' },\r\n    { id: 35, name: 'Fenor energie' },\r\n    { id: 60, name: 'Gazprom' },\r\n    { id: 56, name: 'Gezinsenergie' },\r\n    { id: 8, name: 'Greenchoice' },\r\n    { id: 43, name: 'GreenNL' },\r\n    { id: 40, name: 'Groenpand' },\r\n    { id: 44, name: 'Hezelaer' },\r\n    { id: 69, name: 'HollandsStroom' },\r\n    { id: 9, name: 'Holland Wind' },\r\n    { id: 20, name: 'Huismerk Energie' },\r\n    { id: 30, name: 'HVC Kringloop Energie' },\r\n    { id: 23, name: 'Innova Energie' },\r\n    { id: 10, name: 'Main energie' },\r\n    { id: 65, name: 'Mijn Domein Energie' },\r\n    { id: 61, name: 'Nieuw Hollands Energiebedrijf' },\r\n    { id: 38, name: 'NieuweStroom' },\r\n    { id: 1, name: 'OM' },\r\n    { id: 18, name: 'Overig' },\r\n    { id: 14, name: 'Oxxio' },\r\n    { id: 39, name: 'ParkStroom' },\r\n    { id: 62, name: 'PostcodeStroom' },\r\n    { id: 36, name: 'Power peers' },\r\n    { id: 15, name: 'Pure energie' },\r\n    { id: 63, name: 'PZEM' },\r\n    { id: 16, name: 'Qurrent' },\r\n    { id: 48, name: 'Qwint' },\r\n    { id: 55, name: 'Samsam' },\r\n    { id: 31, name: 'Sepa Green' },\r\n    { id: 32, name: 'Servicehouse' },\r\n    { id: 67, name: 'Shell Energie' },\r\n    { id: 70, name: 'Tibber' },\r\n    { id: 34, name: 'Total' },\r\n    { id: 22, name: 'United Consumers' },\r\n    { id: 17, name: 'VanDeBron' },\r\n    { id: 13, name: 'Vattenfall' },\r\n    { id: 64, name: 'Vrij Op Naam' },\r\n    { id: 47, name: 'Welkom Energie' },\r\n    { id: 41, name: 'Windcentrale' },\r\n    { id: 57, name: 'Onbekend' },\r\n];\r\n","export default [\r\n    { id: 0, name: '' },\r\n    { id: 1, name: 'Dhr' },\r\n    { id: 2, name: 'Mevr' },\r\n    { id: 3, name: 'De heer, Mevrouw' },\r\n    { id: 4, name: 'Familie' },\r\n    { id: 5, name: 'De heer of mevrouw' },\r\n    { id: 6, name: 'De heren' },\r\n    { id: 7, name: 'De dames' },\r\n    { id: 8, name: 'Erven' },\r\n];\r\n","export default [\r\n    { id: 0, name: '' },\r\n    { id: 1, name: 'van' },\r\n    { id: 2, name: 'de' },\r\n    { id: 3, name: 'van der' },\r\n    { id: 4, name: 'van de' },\r\n    { id: 5, name: 'van den' },\r\n    { id: 6, name: 'den' },\r\n    { id: 7, name: 'ten' },\r\n    { id: 8, name: 'ter' },\r\n    { id: 9, name: 'te' },\r\n    { id: 10, name: \"van 't\" },\r\n    { id: 11, name: 'el' },\r\n    { id: 12, name: 'le' },\r\n    { id: 13, name: 'van het' },\r\n    { id: 14, name: \"in 't\" },\r\n    { id: 15, name: \"'t\" },\r\n    { id: 16, name: 'von' },\r\n    { id: 17, name: 'du' },\r\n    { id: 18, name: 'da' },\r\n    { id: 19, name: 'de la' },\r\n    { id: 20, name: 'la' },\r\n    { id: 21, name: 'der' },\r\n    { id: 22, name: 'van ter' },\r\n    { id: 23, name: \"op 't\" },\r\n    { id: 24, name: 'op den' },\r\n    { id: 25, name: 'op ten' },\r\n    { id: 26, name: 'op de' },\r\n    { id: 27, name: 'uit den' },\r\n];\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get } from 'lodash';\r\n\r\nconst InputTextDate = ({\r\n    field,\r\n    type,\r\n    min,\r\n    max,\r\n    step,\r\n    className,\r\n    id,\r\n    readOnly,\r\n    placeholder,\r\n    showErrorMessage,\r\n    errors,\r\n    touched,\r\n    classNameErrorMessage,\r\n    disabled,\r\n    customOnChange = null,\r\n}) => {\r\n    if (customOnChange) {\r\n        field.onChange = customOnChange;\r\n    }\r\n    return (\r\n        <>\r\n            {get(errors, field.name, '') && get(touched, field.name, '') && showErrorMessage ? (\r\n                <small className={`${classNameErrorMessage}`}>{get(errors, field.name, '')}</small>\r\n            ) : null}\r\n            {type == 'datetime-local' ? (\r\n                <input\r\n                    type={type}\r\n                    className={`text-input w-input ${className} ${\r\n                        Boolean(get(errors, field.name, '') && get(touched, field.name, '')) ? 'has-error mb-0' : ''\r\n                    } `}\r\n                    id={id}\r\n                    {...field}\r\n                    readOnly={readOnly}\r\n                    placeholder={placeholder}\r\n                    disabled={disabled}\r\n                    min={min}\r\n                    max={max}\r\n                    step={step}\r\n                    style={{ width: '200px' }}\r\n                />\r\n            ) : (\r\n                <input\r\n                    type={type}\r\n                    className={`text-input w-input ${className} ${\r\n                        Boolean(get(errors, field.name, '') && get(touched, field.name, '')) ? 'has-error mb-0' : ''\r\n                    } `}\r\n                    id={id}\r\n                    {...field}\r\n                    readOnly={readOnly}\r\n                    placeholder={placeholder}\r\n                    disabled={disabled}\r\n                    min={min}\r\n                    max={max}\r\n                    style={{ width: '200px' }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nInputTextDate.defaultProps = {\r\n    type: 'date',\r\n    className: 'content',\r\n    readOnly: false,\r\n    placeholder: '',\r\n    showErrorMessage: true,\r\n    classNameErrorMessage: 'text-danger',\r\n    min: '1900-01-01',\r\n    max: '2099-12-31',\r\n    step: '60',\r\n    errors: {},\r\n    touched: {},\r\n};\r\n\r\nInputTextDate.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    type: PropTypes.string,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    readOnly: PropTypes.bool,\r\n    showErrorMessage: PropTypes.bool,\r\n    classNameErrorMessage: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    min: PropTypes.string,\r\n    max: PropTypes.string,\r\n    step: PropTypes.string,\r\n    errors: PropTypes.object,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default InputTextDate;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field } from 'formik';\r\nimport Select from '../../../components/form/Select';\r\nimport Countries from '../../../data/Countries';\r\nimport EnergySuppliers from '../../../data/EnergySuppliers';\r\nimport Titles from '../../../data/Titles';\r\nimport LastNamePrefixes from '../../../data/LastNamePrefixes';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport Row from 'react-bootstrap/Row';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport moment from 'moment';\r\nimport { FaInfoCircle } from 'react-icons/fa';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport InputTextDate from '../../../components/form/InputTextDate';\r\n\r\nconst DefaultContactPersonalEdit = function({\r\n    portalSettings,\r\n    initialContact,\r\n    projectTypeCodeRef,\r\n    errors,\r\n    touched,\r\n    values,\r\n    setFieldValue,\r\n}) {\r\n    // determine memberSince disabledBefore and after\r\n    let memberSinceDisabledBefore = '';\r\n    let memberSinceDisabledAfter = '';\r\n    if (initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId) {\r\n        if (\r\n            initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n            initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId !==\r\n                values.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId\r\n        ) {\r\n            memberSinceDisabledBefore = moment(\r\n                initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince\r\n            )\r\n                .add(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        } else if (initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.endDatePrevious) {\r\n            memberSinceDisabledBefore = moment(\r\n                initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.endDatePrevious\r\n            )\r\n                .add(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        }\r\n        if (initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.memberSinceNext) {\r\n            memberSinceDisabledAfter = moment(\r\n                initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.memberSinceNext\r\n            )\r\n                .subtract(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        }\r\n    }\r\n\r\n    // Handy to know: Edit person/organisation is done directly or in step 2 of register steps.\r\n    // When Edit person/organisation directly (not in step 2 of register steps) then projectTypeCodeRef = undefined\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label required'}>Naam</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={6}>\r\n                        <Field\r\n                            name=\"person.titleId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"title_id\"\r\n                                    placeholder={'Aanhef'}\r\n                                    options={Titles}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={6}>\r\n                        {initialContact.disableChangeContactNameOnPortal ? (\r\n                            <>\r\n                                <FaInfoCircle\r\n                                    color={'blue'}\r\n                                    size={'15px'}\r\n                                    data-tip={\r\n                                        'Je neemt deel aan een project waarvan de deelnemingen op naam zijn uitgegeven.<br />' +\r\n                                        'Daarom kun je jouw naam niet zelf wijzigen.<br />' +\r\n                                        'Overige contactgegevens kun je wel zelf aanpassen.<br />' +\r\n                                        'Een wijziging van rekeningnummer wordt door ons gecontroleerd.<br />' +\r\n                                        'Heb je vragen of wil je jouw gegevens door de beheerder laten wijzigen?<br />' +\r\n                                        'Kijk in het menu onder \"Over ons\" voor contact gegevens.'\r\n                                    }\r\n                                    data-for={`contact-${initialContact.id}`}\r\n                                />\r\n                                <ReactTooltip\r\n                                    id={`contact-${initialContact.id}`}\r\n                                    effect=\"float\"\r\n                                    place=\"right\"\r\n                                    multiline={true}\r\n                                    aria-haspopup=\"true\"\r\n                                />\r\n                            </>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"person.initials\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"initials\"\r\n                                    placeholder={'Initialen'}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"person.firstName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"first_name\"\r\n                                    placeholder={'Voornaam'}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"person.lastNamePrefixId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name_prefix_id\"\r\n                                    options={LastNamePrefixes}\r\n                                    placeholder={'Tussenvoegsel'}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"person.lastName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name\"\r\n                                    placeholder={'Achternaam'}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel\r\n                    htmlFor=\"date_of_birth\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Geboortedatum\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"person.dateOfBirth\"\r\n                            render={({ field }) => (\r\n                                <InputTextDate\r\n                                    field={field}\r\n                                    type=\"date\"\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    onChangeAction={setFieldValue}\r\n                                    id=\"date_of_birth\"\r\n                                    placeholder={'Geboortedatum'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-correspondence\" className={'field-label required'}>\r\n                    E-mailadres correspondentie\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailCorrespondence.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-correspondence\"\r\n                                    placeholder={'E-mailadres'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-invoice\" className=\"field-label\">\r\n                    E-mailadres nota\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailInvoice.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-invoice\"\r\n                                    placeholder={'E-mailadres'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"telephone-number-1\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Telefoonnummer 1\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberPrimary.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-1\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"telephone-number-2\" className={'field-label'}>\r\n                    Telefoonnummer 2\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberTwo.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-2\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"street\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Adres\r\n                    {initialContact.blockChangeAddress ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Adres kan momenteel niet worden aangepast. Geef jouw adreswijziging per e-mail aan ons door.`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : initialContact.blockChangeAddressNumber ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Postcode en huisnummer is niet meer wijzigen vanwege deelname aan project op een specifiek postcodegebied met huisnummerreeks`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : initialContact.isParticipantSceProject || initialContact.isParticipantPcrProject ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Postcode is niet meer wijzigen vanwege deelname aan project op een specifiek postcodegebied`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </FormLabel>\r\n                {((!isNaN(values.primaryAddress.number) && values.primaryAddress.number == 0) ||\r\n                    (isNaN(values.primaryAddress.number) && values.primaryAddress.number.trim() == '') ||\r\n                    values.primaryAddress.postalCode.trim() == '') &&\r\n                (values.primaryAddress.street.trim() != '' ||\r\n                    values.primaryAddress.number.trim() != '' ||\r\n                    values.primaryAddress.addition.trim() != '' ||\r\n                    values.primaryAddress.postalCode.trim() != '' ||\r\n                    values.primaryAddress.city.trim() != '') ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                Adres wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"primaryAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"primaryAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress || initialContact.blockChangeAddressNumber\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"primaryAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress || initialContact.blockChangeAddressNumber\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"primaryAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress ||\r\n                                        initialContact.isParticipantSceProject ||\r\n                                        initialContact.isParticipantPcrProject\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"primaryAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"primaryAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel\r\n                    htmlFor=\"ean_electricity\"\r\n                    className={\r\n                        projectTypeCodeRef === 'postalcode_link_capital' ? 'field-label required' : 'field-label'\r\n                    }\r\n                >\r\n                    EAN nummer electriciteit\r\n                </FormLabel>\r\n                {((!isNaN(values.primaryAddress.number) && values.primaryAddress.number == 0) ||\r\n                    (isNaN(values.primaryAddress.number) && values.primaryAddress.number.trim() == '') ||\r\n                    values.primaryAddress.postalCode.trim() == '') &&\r\n                values.primaryAddress.eanElectricity != null &&\r\n                values.primaryAddress.eanElectricity.trim() != '' ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                EAN nummer electriciteit wordt alleen opgeslagen als minimaal nummer en postcode zijn\r\n                                ingevuld bij adres.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"primaryAddress.eanElectricity\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"eanElectricity\"\r\n                                    placeholder={'EAN nummer electriciteit'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel htmlFor=\"ean_gas\" className={'field-label'}>\r\n                    EAN nummer gas\r\n                </FormLabel>\r\n                {((!isNaN(values.primaryAddress.number) && values.primaryAddress.number == 0) ||\r\n                    (isNaN(values.primaryAddress.number) && values.primaryAddress.number.trim() == '') ||\r\n                    values.primaryAddress.postalCode.trim() == '') &&\r\n                values.primaryAddress.eanGas != null &&\r\n                values.primaryAddress.eanGas.trim() != '' ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                EAN nummer gas wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld bij\r\n                                adres.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"primaryAddress.eanGas\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"eanGas\"\r\n                                    placeholder={'EAN nummer gas'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{values.number}</TextBlock>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col xs={12} md={6}>\r\n                <FormLabel\r\n                    htmlFor=\"iban\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    IBAN gegevens\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"iban\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban\"\r\n                                    placeholder={'Rekeningnummer (IBAN)'}\r\n                                    customOnChange={e => {\r\n                                        setFieldValue('iban', ('' + e.target.value).toUpperCase());\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"ibanAttn\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban_attn\"\r\n                                    placeholder={'IBAN te name van'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel htmlFor=\"did_agree_avg\" className={'field-label required'}>\r\n                    Akkoord privacybeleid\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"didAgreeAvg\"\r\n                            render={({ field }) => (\r\n                                <label className=\"w-checkbox checkbox-fld\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        {...field}\r\n                                        id=\"did_agree_avg\"\r\n                                        checked={field.value}\r\n                                        className=\"w-checkbox-input checkbox\"\r\n                                        disabled={initialContact.didAgreeAvg}\r\n                                    />\r\n                                    <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                                        Ik ga akkoord met{' '}\r\n                                        <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                            privacybeleid\r\n                                        </a>{' '}\r\n                                        {values.didAgreeAvg ? (\r\n                                            <em>\r\n                                                (\r\n                                                {initialContact.dateDidAgreeAvg\r\n                                                    ? moment(initialContact.dateDidAgreeAvg).format('L')\r\n                                                    : moment().format('L')}\r\n                                                )\r\n                                            </em>\r\n                                        ) : (\r\n                                            ''\r\n                                        )}\r\n                                    </span>\r\n                                    {touched[field.name] && errors[field.name] ? (\r\n                                        <div className={'error-message text-danger'}>{errors[field.name]}</div>\r\n                                    ) : null}\r\n                                </label>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                {projectTypeCodeRef === 'postalcode_link_capital' || projectTypeCodeRef === undefined ? (\r\n                    <>\r\n                        <FormLabel\r\n                            htmlFor=\"energy_supplier_id\"\r\n                            className={\r\n                                initialContact.isParticipantPcrProject ||\r\n                                projectTypeCodeRef === 'postalcode_link_capital'\r\n                                    ? 'field-label required'\r\n                                    : 'field-label'\r\n                            }\r\n                        >\r\n                            Huidige energie leverancier\r\n                        </FormLabel>\r\n                        {((!isNaN(values.primaryAddress.number) && values.primaryAddress.number == 0) ||\r\n                            (isNaN(values.primaryAddress.number) && values.primaryAddress.number.trim() == '') ||\r\n                            values.primaryAddress.postalCode.trim() == '') &&\r\n                        (values.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId != null ||\r\n                            (values.primaryAddress.primaryAddressEnergySupplierElectricity.esNumber &&\r\n                                values.primaryAddress.primaryAddressEnergySupplierElectricity.esNumber.trim() != '') ||\r\n                            (values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n                                values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() !=\r\n                                    '')) ? (\r\n                            <Row>\r\n                                <Col xs={12} sm={12}>\r\n                                    <small className={'text-danger'}>\r\n                                        Huidige energie leverancier gegevens wordt alleen opgeslagen als minimaal nummer\r\n                                        en postcode zijn ingevuld bij adres.\r\n                                    </small>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                        {(!values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince ||\r\n                            values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() == '') &&\r\n                        ((values.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId != null &&\r\n                            values.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId != '') ||\r\n                            (values.primaryAddress.primaryAddressEnergySupplierElectricity.esNumber &&\r\n                                values.primaryAddress.primaryAddressEnergySupplierElectricity.esNumber.trim() != '') ||\r\n                            (values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n                                values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() !=\r\n                                    '')) ? (\r\n                            <Row>\r\n                                <Col xs={12} sm={12}>\r\n                                    <small className={'text-danger'}>\r\n                                        Huidige energie leverancier gegevens wordt alleen opgeslagen als Klant bij\r\n                                        leverancier sinds is ingevuld.\r\n                                    </small>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId\"\r\n                                    render={({ field }) => (\r\n                                        <Select\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"energy_supplier_id\"\r\n                                            placeholder={'Selecteer uw leverancier'}\r\n                                            options={EnergySuppliers}\r\n                                            customOnChange={e => {\r\n                                                setFieldValue(\r\n                                                    'primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId',\r\n                                                    e.target.value\r\n                                                );\r\n                                                setFieldValue(\r\n                                                    'primaryAddress.primaryAddressEnergySupplierElectricity.esNumber',\r\n                                                    ''\r\n                                                );\r\n                                                setFieldValue(\r\n                                                    'primaryAddress.primaryAddressEnergySupplierElectricity.memberSince',\r\n                                                    ''\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {values.primaryAddress.primaryAddressEnergySupplierElectricity &&\r\n                        values.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId ? (\r\n                            <>\r\n                                <FormLabel\r\n                                    htmlFor=\"es_number\"\r\n                                    className={\r\n                                        projectTypeCodeRef === 'postalcode_link_capital'\r\n                                            ? 'field-label required'\r\n                                            : 'field-label'\r\n                                    }\r\n                                >\r\n                                    Klant nummer bij leverancier\r\n                                </FormLabel>\r\n                                <Row>\r\n                                    <Col xs={12} sm={12} md={8}>\r\n                                        <Field\r\n                                            name=\"primaryAddress.primaryAddressEnergySupplierElectricity.esNumber\"\r\n                                            render={({ field }) => (\r\n                                                <InputText\r\n                                                    field={field}\r\n                                                    errors={errors}\r\n                                                    touched={touched}\r\n                                                    id=\"es_number\"\r\n                                                    placeholder={'Klant nummer bij leverancier'}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <FormLabel htmlFor=\"member_since\" className={'field-label'}>\r\n                                    Klant bij leverancier sinds\r\n                                </FormLabel>\r\n                                <Row>\r\n                                    <Col xs={12} sm={12} md={8}>\r\n                                        <Field\r\n                                            name=\"primaryAddress.primaryAddressEnergySupplierElectricity.memberSince\"\r\n                                            render={({ field }) => (\r\n                                                <InputTextDate\r\n                                                    field={field}\r\n                                                    type=\"date\"\r\n                                                    errors={errors}\r\n                                                    touched={touched}\r\n                                                    onChangeAction={setFieldValue}\r\n                                                    min={memberSinceDisabledBefore}\r\n                                                    max={memberSinceDisabledAfter}\r\n                                                    id=\"member_since\"\r\n                                                    placeholder={'Klant sinds'}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </>\r\n                ) : null}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default DefaultContactPersonalEdit;\r\n","import * as Yup from 'yup';\r\nimport * as ibantools from 'ibantools';\r\nimport { isEmpty } from 'lodash';\r\n\r\nexport default {\r\n    validationSchemaBasic: Yup.object().shape({\r\n        didAgreeAvg: Yup.bool().test(\r\n            'didAgreeAvg',\r\n            'Je dient akkoord te gaan met privacybeleid!',\r\n            value => value === true\r\n        ),\r\n        person: Yup.object().shape({\r\n            lastName: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        emailCorrespondence: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres')\r\n                .required('Verplicht'),\r\n        }),\r\n        emailInvoice: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres'),\r\n        }),\r\n        primaryAddress: Yup.object().shape({\r\n            street: Yup.string().trim(),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n            city: Yup.string().trim(),\r\n            eanElectricity: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig'),\r\n            eanGas: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig'),\r\n        }),\r\n        phoneNumberPrimary: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}|^$/, 'Minimaal 10 cijfers nodig'),\r\n        }),\r\n        phoneNumberTwo: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}|^$/, 'Minimaal 10 cijfers nodig'),\r\n        }),\r\n        iban: Yup.string()\r\n            .nullable()\r\n            .trim()\r\n            .test(\r\n                'iban',\r\n                'Ongeldige IBAN of gebruik geen spaties.',\r\n                value => ibantools.isValidIBAN(value) || isEmpty(value)\r\n            ),\r\n    }),\r\n\r\n    validationSchemaAdditional: Yup.object().shape({\r\n        person: Yup.object().shape({\r\n            firstName: Yup.string()\r\n                .trim()\r\n                // .required('Verplicht'),\r\n                .test('initials-and-first-name-check', 'Voornaam of initialen verplicht', function(value) {\r\n                    if (value.trim() != '' || this.parent.initials.trim() != '') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }),\r\n            dateOfBirth: Yup.date()\r\n                .typeError('Verplicht of ongeldige datum')\r\n                .required('Verplicht'),\r\n        }),\r\n        phoneNumberPrimary: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}/, 'Minimaal 10 cijfers nodig')\r\n                .required('Verplicht'),\r\n        }),\r\n        phoneNumberTwo: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}|^$/, 'Minimaal 10 cijfers nodig'),\r\n        }),\r\n        primaryAddress: Yup.object().shape({\r\n            street: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                })\r\n                .required('Verplicht'),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        this.parent.countryId !== 'NL' &&\r\n                        this.parent.countryId !== null &&\r\n                        this.parent.countryId != ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                })\r\n                .required('Verplicht'),\r\n            city: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        iban: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht')\r\n            .test('iban', 'Ongeldige IBAN of gebruik geen spaties.', value => ibantools.isValidIBAN(value)),\r\n        ibanAttn: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht'),\r\n    }),\r\n\r\n    validationSchemaPcrAdditional: Yup.object().shape({\r\n        primaryAddress: Yup.object().shape({\r\n            eanElectricity: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig')\r\n                .required('Verplicht'),\r\n            primaryAddressEnergySupplierElectricity: Yup.object().shape({\r\n                energySupplierId: Yup.string()\r\n                    .nullable()\r\n                    .required('Verplicht'),\r\n                esNumber: Yup.string()\r\n                    .nullable()\r\n                    .trim()\r\n                    .required('Verplicht'),\r\n            }),\r\n        }),\r\n    }),\r\n\r\n    validationSchemaPostalCodeAndNumber: Yup.object().shape({\r\n        primaryAddress: Yup.object().shape({\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .required('Verplicht')\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .required('Verplicht')\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n        }),\r\n    }),\r\n};\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport DefaultContactPersonalView from './default-form-personal/View';\r\nimport DefaultContactPersonalEdit from './default-form-personal/Edit';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaPersonal from './../../helpers/ValidationSchemaPersonal';\r\nimport { isEmpty } from 'lodash';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction ContactDetailsPersonal({\r\n    portalSettings,\r\n    initialContact,\r\n    handleSubmitContactValues,\r\n    editButtonGroup,\r\n    editForm,\r\n    setEditForm,\r\n}) {\r\n    const validationSchema = initialContact.isParticipantPcrProject\r\n        ? ValidationSchemaPersonal.validationSchemaBasic\r\n              .concat(ValidationSchemaPersonal.validationSchemaAdditional)\r\n              .concat(ValidationSchemaPersonal.validationSchemaPcrAdditional)\r\n        : initialContact.isParticipant\r\n        ? ValidationSchemaPersonal.validationSchemaBasic.concat(ValidationSchemaPersonal.validationSchemaAdditional)\r\n        : ValidationSchemaPersonal.validationSchemaBasic;\r\n    return (\r\n        <div>\r\n            {editForm ? (\r\n                <Formik\r\n                    initialValues={initialContact}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        actions.setSubmitting(true);\r\n                        handleSubmitContactValues(values, actions, () => setEditForm(false));\r\n                    }}\r\n                    render={({ errors, touched, setFieldValue, isSubmitting, status, values, handleSubmit }) => {\r\n                        return (\r\n                            <Form>\r\n                                <DefaultContactPersonalEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                />\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ButtonGroup aria-label=\"personal\" className=\"float-right\">\r\n                                            <Button\r\n                                                variant={'outline-dark'}\r\n                                                size=\"sm\"\r\n                                                onClick={function() {\r\n                                                    setEditForm(false);\r\n                                                }}\r\n                                            >\r\n                                                Annuleren\r\n                                            </Button>\r\n                                            <Button\r\n                                                className={'w-button'}\r\n                                                size=\"sm\"\r\n                                                onClick={handleSubmit}\r\n                                                disabled={isSubmitting}\r\n                                            >\r\n                                                {isSubmitting ? (\r\n                                                    <span>\r\n                                                        <ClipLoader color={'white'} size={14} />\r\n                                                        Bezig met opslaan\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    'Opslaan'\r\n                                                )}\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!isEmpty(errors) ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                    Niet alle verplichte velden zijn (juist) ingevuld!\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                                {status && status.message ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                    {status.message}\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </Form>\r\n                        );\r\n                    }}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <DefaultContactPersonalView portalSettings={portalSettings} initialContact={initialContact} />\r\n                    <Row>\r\n                        <Col>{editButtonGroup}</Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactDetailsPersonal;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Row from 'react-bootstrap/Row';\r\nimport moment from 'moment';\r\n\r\nfunction DefaultContactOrganisationView({ portalSettings, initialContact }) {\r\n    const {\r\n        organisation = {},\r\n        emailCorrespondence,\r\n        emailInvoice,\r\n        phoneNumberPrimary,\r\n        phoneNumberTwo,\r\n        visitAddress,\r\n        postalAddress,\r\n        invoiceAddress,\r\n        iban,\r\n        ibanAttn,\r\n        didAgreeAvg,\r\n        dateDidAgreeAvg,\r\n        number,\r\n        primaryOccupations,\r\n    } = initialContact;\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>Bedrijfsnaam</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Bedrijfsnaam'}>\r\n                        {organisation.name}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>KvK</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'KvK'}>\r\n                        {organisation.chamberOfCommerceNumber}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>BTW nummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'BTW nummer'}>\r\n                        {organisation.vatNumber}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>IBAN gegevens</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Rekeningnummer (IBAN)'}>\r\n                        {iban}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'IBAN te name van'}>\r\n                        {ibanAttn}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Website</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Website'}>\r\n                        {organisation.website}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Akkoord privacybeleid</FormLabel>\r\n                <Row>\r\n                    <div className={'col-12 col-sm-8'}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"did_agree_avg\"\r\n                            checked={didAgreeAvg}\r\n                            className=\"w-checkbox-input checkbox\"\r\n                            disabled={true}\r\n                        />\r\n                        <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                            Ik ga akkoord met{' '}\r\n                            <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                privacybeleid\r\n                            </a>{' '}\r\n                            {didAgreeAvg ? <em>({dateDidAgreeAvg ? moment(dateDidAgreeAvg).format('L') : ''})</em> : ''}\r\n                        </span>\r\n                    </div>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres correspondentie</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailCorrespondence.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres nota</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailInvoice.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 1</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberPrimary.number}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 2</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberTwo.number}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{number}</TextBlock>\r\n                </Row>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>Bezoekadres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {visitAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {visitAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {visitAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {visitAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {visitAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {visitAddress.country ? visitAddress.country.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>EAN nummer electriciteit</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer electriciteit'}>\r\n                        {visitAddress.eanElectricity}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>EAN nummer gas</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer gas'}>\r\n                        {visitAddress.eanGas}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>Huidige energie leverancier</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Energieleverancier'}>\r\n                        {visitAddress.primaryAddressEnergySupplierElectricity.energySupplier\r\n                            ? visitAddress.primaryAddressEnergySupplierElectricity.energySupplier.name\r\n                            : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n                {visitAddress.primaryAddressEnergySupplierElectricity &&\r\n                visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId ? (\r\n                    <>\r\n                        <FormLabel className={'field-label'}>Klant nummer bij leverancier</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant nummer'}>\r\n                                {visitAddress.primaryAddressEnergySupplierElectricity.esNumber}\r\n                            </TextBlock>\r\n                        </Row>\r\n\r\n                        <FormLabel className={'field-label'}>Klant bij leverancier sinds</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant sinds'}>\r\n                                {visitAddress.primaryAddressEnergySupplierElectricity.memberSince\r\n                                    ? moment(visitAddress.primaryAddressEnergySupplierElectricity.memberSince).format(\r\n                                          'L'\r\n                                      )\r\n                                    : ''}\r\n                            </TextBlock>\r\n                        </Row>\r\n                    </>\r\n                ) : (\r\n                    ''\r\n                )}\r\n\r\n                <FormLabel className={'field-label'}>Postadres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {postalAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {postalAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {postalAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {postalAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {postalAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {postalAddress.country ? postalAddress.country.name : ''}\r\n                    </TextBlock>{' '}\r\n                </Row>\r\n                <FormLabel className={'field-label'}>Nota adres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {invoiceAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {invoiceAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {invoiceAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {invoiceAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {invoiceAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {invoiceAddress.country ? invoiceAddress.country.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default DefaultContactOrganisationView;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field } from 'formik';\r\nimport Select from '../../../components/form/Select';\r\nimport Countries from '../../../data/Countries';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport Row from 'react-bootstrap/Row';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport moment from 'moment';\r\nimport EnergySuppliers from '../../../data/EnergySuppliers';\r\nimport { FaInfoCircle } from 'react-icons/fa';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport InputTextDate from '../../../components/form/InputTextDate';\r\n\r\nconst DefaultContactOrganisationEdit = function({\r\n    portalSettings,\r\n    initialContact,\r\n    projectTypeCodeRef,\r\n    errors,\r\n    touched,\r\n    values,\r\n    setFieldValue,\r\n}) {\r\n    // determine memberSince disabledBefore and after\r\n    let memberSinceDisabledBefore = '';\r\n    let memberSinceDisabledAfter = '';\r\n    if (initialContact.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId) {\r\n        if (\r\n            initialContact.visitAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n            initialContact.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId !==\r\n                values.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId\r\n        ) {\r\n            memberSinceDisabledBefore = moment(\r\n                initialContact.visitAddress.primaryAddressEnergySupplierElectricity.memberSince\r\n            )\r\n                .add(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        } else if (initialContact.visitAddress.primaryAddressEnergySupplierElectricity.endDatePrevious) {\r\n            memberSinceDisabledBefore = moment(\r\n                initialContact.visitAddress.primaryAddressEnergySupplierElectricity.endDatePrevious\r\n            )\r\n                .add(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        }\r\n        if (initialContact.visitAddress.primaryAddressEnergySupplierElectricity.memberSinceNext) {\r\n            memberSinceDisabledAfter = moment(\r\n                initialContact.visitAddress.primaryAddressEnergySupplierElectricity.memberSinceNext\r\n            )\r\n                .subtract(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        }\r\n    }\r\n\r\n    // Handy to know: Edit person/organisation is done directly or in step 2 of register steps.\r\n    // When Edit person/organisation directly (not in step 2 of register steps) then projectTypeCodeRef = undefined\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label required'}>Naam</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.name\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"name\"\r\n                                    placeholder={'Naam'}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        {initialContact.disableChangeContactNameOnPortal ? (\r\n                            <>\r\n                                <FaInfoCircle\r\n                                    color={'blue'}\r\n                                    size={'15px'}\r\n                                    data-tip={\r\n                                        'Je neemt deel aan een project waarvan de deelnemingen op naam zijn uitgegeven.<br />' +\r\n                                        'Daarom kun je jouw naam niet zelf wijzigen.<br />' +\r\n                                        'Overige contactgegevens kun je wel zelf aanpassen.<br />' +\r\n                                        'Een wijziging van rekeningnummer wordt door ons gecontroleerd.<br />' +\r\n                                        'Heb je vragen of wil je jouw gegevens door de beheerder laten wijzigen?<br />' +\r\n                                        'Kijk in het menu onder \"Over ons\" voor contact gegevens.'\r\n                                    }\r\n                                    data-for={`contact-${initialContact.id}`}\r\n                                />\r\n                                <ReactTooltip\r\n                                    id={`contact-${initialContact.id}`}\r\n                                    effect=\"float\"\r\n                                    place=\"right\"\r\n                                    multiline={true}\r\n                                    aria-haspopup=\"true\"\r\n                                />\r\n                            </>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>KvK</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.chamberOfCommerceNumber\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"chamber_of_commerce_number\"\r\n                                    placeholder={'KvK'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>BTW nummer</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.vatNumber\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"vat_number\"\r\n                                    placeholder={'BTW nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"iban\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    IBAN gegevens\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"iban\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban\"\r\n                                    placeholder={'Rekeningnummer (IBAN)'}\r\n                                    customOnChange={e => {\r\n                                        setFieldValue('iban', ('' + e.target.value).toUpperCase());\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"ibanAttn\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban_attn\"\r\n                                    placeholder={'IBAN te name van'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Website</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.website\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"website\"\r\n                                    placeholder={'Website'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"did_agree_avg\" className={'field-label required'}>\r\n                    Akkoord privacybeleid\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"didAgreeAvg\"\r\n                            render={({ field }) => (\r\n                                <label className=\"w-checkbox checkbox-fld\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        {...field}\r\n                                        id=\"did_agree_avg\"\r\n                                        checked={field.value}\r\n                                        className=\"w-checkbox-input checkbox\"\r\n                                        disabled={initialContact.didAgreeAvg}\r\n                                    />\r\n                                    <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                                        Ik ga akkoord met{' '}\r\n                                        <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                            privacybeleid\r\n                                        </a>{' '}\r\n                                        {values.didAgreeAvg ? (\r\n                                            <em>\r\n                                                (\r\n                                                {initialContact.dateDidAgreeAvg\r\n                                                    ? moment(initialContact.dateDidAgreeAvg).format('L')\r\n                                                    : moment().format('L')}\r\n                                                )\r\n                                            </em>\r\n                                        ) : (\r\n                                            ''\r\n                                        )}\r\n                                    </span>\r\n                                    {touched[field.name] && errors[field.name] ? (\r\n                                        <div className={'error-message text-danger'}>{errors[field.name]}</div>\r\n                                    ) : null}\r\n                                </label>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-correspondence\" className={'field-label required'}>\r\n                    E-mailadres correspondentie\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailCorrespondence.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-correspondence\"\r\n                                    placeholder={'E-mailadres'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-invoice\" className=\"field-label\">\r\n                    E-mailadres nota\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailInvoice.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-invoice\"\r\n                                    placeholder={'E-mailadres'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"telephone-number-1\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Telefoonnummer 1\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberPrimary.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-1\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"telephone-number-2\" className={'field-label'}>\r\n                    Telefoonnummer 2\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberTwo.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-2\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{values.number}</TextBlock>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col xs={12} md={6}>\r\n                <FormLabel\r\n                    htmlFor=\"street\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Bezoekadres\r\n                    {initialContact.blockChangeAddress ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Adres kan momenteel niet worden aangepast. Geef jouw adreswijziging per e-mail aan ons door.`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : initialContact.blockChangeAddressNumber ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Postcode en huisnummer is niet meer wijzigen vanwege deelname aan project op een specifiek postcodegebied met huisnummerreeks`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : initialContact.isParticipantSceProject || initialContact.isParticipantPcrProject ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Postcode is niet meer wijzigen vanwege deelname aan project op een specifiek postcodegebied`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </FormLabel>\r\n                {((!isNaN(values.visitAddress.number) && values.visitAddress.number == 0) ||\r\n                    (isNaN(values.visitAddress.number) && values.visitAddress.number.trim() == '') ||\r\n                    values.visitAddress.postalCode.trim() == '') &&\r\n                (values.visitAddress.street.trim() != '' ||\r\n                    values.visitAddress.number.trim() != '' ||\r\n                    values.visitAddress.addition.trim() != '' ||\r\n                    values.visitAddress.postalCode.trim() != '' ||\r\n                    values.visitAddress.city.trim() != '') ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                Adres wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"visitAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"visitAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress || initialContact.blockChangeAddressNumber\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"visitAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress || initialContact.blockChangeAddressNumber\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"visitAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress ||\r\n                                        initialContact.isParticipantSceProject ||\r\n                                        initialContact.isParticipantPcrProject\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"visitAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"visitAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel\r\n                    htmlFor=\"ean_electricity\"\r\n                    className={\r\n                        projectTypeCodeRef === 'postalcode_link_capital' ? 'field-label required' : 'field-label'\r\n                    }\r\n                >\r\n                    EAN nummer electriciteit\r\n                </FormLabel>\r\n                {((!isNaN(values.visitAddress.number) && values.visitAddress.number == 0) ||\r\n                    (isNaN(values.visitAddress.number) && values.visitAddress.number.trim() == '') ||\r\n                    values.visitAddress.postalCode.trim() == '') &&\r\n                values.visitAddress.eanElectricity != null &&\r\n                values.visitAddress.eanElectricity.trim() != '' ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                EAN nummer electriciteit wordt alleen opgeslagen als minimaal nummer en postcode zijn\r\n                                ingevuld bij bezoekadres.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"visitAddress.eanElectricity\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"ean_electricity\"\r\n                                    placeholder={'EAN nummer electriciteit'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"ean_gas\" className={'field-label'}>\r\n                    EAN nummer gas\r\n                </FormLabel>\r\n                {((!isNaN(values.visitAddress.number) && values.visitAddress.number == 0) ||\r\n                    (isNaN(values.visitAddress.number) && values.visitAddress.number.trim() == '') ||\r\n                    values.visitAddress.postalCode.trim() == '') &&\r\n                values.visitAddress.eanGas != null &&\r\n                values.visitAddress.eanGas.trim() != '' ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                EAN nummer gas wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld bij\r\n                                bezoekadres.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"visitAddress.eanGas\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"ean_gas\"\r\n                                    placeholder={'EAN nummer gas'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {projectTypeCodeRef === 'postalcode_link_capital' || projectTypeCodeRef === undefined ? (\r\n                    <>\r\n                        <FormLabel\r\n                            htmlFor=\"energy_supplier_id\"\r\n                            className={\r\n                                initialContact.isParticipantPcrProject ||\r\n                                projectTypeCodeRef === 'postalcode_link_capital'\r\n                                    ? 'field-label required'\r\n                                    : 'field-label'\r\n                            }\r\n                        >\r\n                            Huidige energie leverancier\r\n                        </FormLabel>\r\n                        {((!isNaN(values.visitAddress.number) && values.visitAddress.number == 0) ||\r\n                            (isNaN(values.visitAddress.number) && values.visitAddress.number.trim() == '') ||\r\n                            values.visitAddress.postalCode.trim() == '') &&\r\n                        (values.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId != null ||\r\n                            (values.visitAddress.primaryAddressEnergySupplierElectricity.esNumber &&\r\n                                values.visitAddress.primaryAddressEnergySupplierElectricity.esNumber.trim() != '') ||\r\n                            (values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n                                values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() !=\r\n                                    '')) ? (\r\n                            <Row>\r\n                                <Col xs={12} sm={12}>\r\n                                    <small className={'text-danger'}>\r\n                                        Huidige energie leverancier gegevens wordt alleen opgeslagen als minimaal nummer\r\n                                        en postcode zijn ingevuld bij bezoekadres.\r\n                                    </small>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                        {(!values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince ||\r\n                            values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() == '') &&\r\n                        ((values.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId != null &&\r\n                            values.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId != '') ||\r\n                            (values.visitAddress.primaryAddressEnergySupplierElectricity.esNumber &&\r\n                                values.visitAddress.primaryAddressEnergySupplierElectricity.esNumber.trim() != '') ||\r\n                            (values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n                                values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() !=\r\n                                    '')) ? (\r\n                            <Row>\r\n                                <Col xs={12} sm={12}>\r\n                                    <small className={'text-danger'}>\r\n                                        Huidige energie leverancier gegevens wordt alleen opgeslagen als Klant bij\r\n                                        leverancier sinds is ingevuld.\r\n                                    </small>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId\"\r\n                                    render={({ field }) => (\r\n                                        <Select\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"energy_supplier_id\"\r\n                                            placeholder={'Selecteer uw leverancier'}\r\n                                            options={EnergySuppliers}\r\n                                            customOnChange={e => {\r\n                                                setFieldValue(\r\n                                                    'visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId',\r\n                                                    e.target.value\r\n                                                );\r\n                                                setFieldValue(\r\n                                                    'visitAddress.primaryAddressEnergySupplierElectricity.esNumber',\r\n                                                    ''\r\n                                                );\r\n                                                setFieldValue(\r\n                                                    'visitAddress.primaryAddressEnergySupplierElectricity.memberSince',\r\n                                                    ''\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {values.visitAddress.primaryAddressEnergySupplierElectricity &&\r\n                        values.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId ? (\r\n                            <>\r\n                                <FormLabel\r\n                                    htmlFor=\"es_number\"\r\n                                    className={\r\n                                        projectTypeCodeRef === 'postalcode_link_capital'\r\n                                            ? 'field-label required'\r\n                                            : 'field-label'\r\n                                    }\r\n                                >\r\n                                    Klant nummer bij leverancier\r\n                                </FormLabel>\r\n                                <Row>\r\n                                    <Col xs={12} sm={12} md={8}>\r\n                                        <Field\r\n                                            name=\"visitAddress.primaryAddressEnergySupplierElectricity.esNumber\"\r\n                                            render={({ field }) => (\r\n                                                <InputText\r\n                                                    field={field}\r\n                                                    errors={errors}\r\n                                                    touched={touched}\r\n                                                    id=\"es_number\"\r\n                                                    placeholder={'Klant nummer bij leverancier'}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <FormLabel htmlFor=\"member_since\" className={'field-label'}>\r\n                                    Klant bij leverancier sinds\r\n                                </FormLabel>\r\n                                <Row>\r\n                                    <Col xs={12} sm={12} md={8}>\r\n                                        <Field\r\n                                            name=\"visitAddress.primaryAddressEnergySupplierElectricity.memberSince\"\r\n                                            render={({ field }) => (\r\n                                                <InputTextDate\r\n                                                    field={field}\r\n                                                    type=\"date\"\r\n                                                    errors={errors}\r\n                                                    touched={touched}\r\n                                                    onChangeAction={setFieldValue}\r\n                                                    min={memberSinceDisabledBefore}\r\n                                                    max={memberSinceDisabledAfter}\r\n                                                    id=\"member_since\"\r\n                                                    placeholder={'Klant sinds'}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </>\r\n                ) : null}\r\n\r\n                <FormLabel htmlFor=\"street\" className=\"field-label\">\r\n                    Postadres\r\n                </FormLabel>\r\n                {((!isNaN(values.postalAddress.number) && values.postalAddress.number == 0) ||\r\n                    (isNaN(values.postalAddress.number) && values.postalAddress.number.trim() == '') ||\r\n                    values.postalAddress.postalCode.trim() == '') &&\r\n                (values.postalAddress.street.trim() != '' ||\r\n                    values.postalAddress.number.trim() != '' ||\r\n                    values.postalAddress.addition.trim() != '' ||\r\n                    values.postalAddress.postalCode.trim() != '' ||\r\n                    values.postalAddress.city.trim() != '') ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                Adres wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"postalAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"postalAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"postalAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"postalAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"postalAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"postalAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel htmlFor=\"street\" className=\"field-label\">\r\n                    Nota adres\r\n                </FormLabel>\r\n                {((!isNaN(values.invoiceAddress.number) && values.invoiceAddress.number == 0) ||\r\n                    (isNaN(values.invoiceAddress.number) && values.invoiceAddress.number.trim() == '') ||\r\n                    values.invoiceAddress.postalCode.trim() == '') &&\r\n                (values.invoiceAddress.street.trim() != '' ||\r\n                    values.invoiceAddress.number.trim() != '' ||\r\n                    values.invoiceAddress.addition.trim() != '' ||\r\n                    values.invoiceAddress.postalCode.trim() != '' ||\r\n                    values.invoiceAddress.city.trim() != '') ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                Adres wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"invoiceAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"invoiceAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"invoiceAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"invoiceAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"invoiceAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"invoiceAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default DefaultContactOrganisationEdit;\r\n","import * as Yup from 'yup';\r\nimport * as ibantools from 'ibantools';\r\nimport { isEmpty } from 'lodash';\r\n\r\nexport default {\r\n    validationSchemaBasic: Yup.object().shape({\r\n        didAgreeAvg: Yup.bool().test(\r\n            'didAgreeAvg',\r\n            'Je dient akkoord te gaan met privacybeleid!',\r\n            value => value === true\r\n        ),\r\n        organisation: Yup.object().shape({\r\n            name: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        emailCorrespondence: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres')\r\n                .required('Verplicht'),\r\n        }),\r\n        emailInvoice: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres'),\r\n        }),\r\n        postalAddress: Yup.object().shape({\r\n            street: Yup.string().trim(),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n            city: Yup.string().trim(),\r\n        }),\r\n        visitAddress: Yup.object().shape({\r\n            street: Yup.string().trim(),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n            city: Yup.string().trim(),\r\n            eanElectricity: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig'),\r\n            eanGas: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig'),\r\n        }),\r\n        invoiceAddress: Yup.object().shape({\r\n            street: Yup.string().trim(),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n            city: Yup.string().trim(),\r\n        }),\r\n        phoneNumberPrimary: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}|^$/, 'Minimaal 10 cijfers nodig'),\r\n        }),\r\n        phoneNumberTwo: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}|^$/, 'Minimaal 10 cijfers nodig'),\r\n        }),\r\n        iban: Yup.string()\r\n            .nullable()\r\n            .trim()\r\n            .test(\r\n                'iban',\r\n                'Ongeldige IBAN of gebruik geen spaties.',\r\n                value => ibantools.isValidIBAN(value) || isEmpty(value)\r\n            ),\r\n    }),\r\n\r\n    validationSchemaAdditional: Yup.object().shape({\r\n        phoneNumberPrimary: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}/, 'Minimaal 10 cijfers nodig')\r\n                .required('Verplicht'),\r\n        }),\r\n        visitAddress: Yup.object().shape({\r\n            street: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                })\r\n                .required('Verplicht'),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        this.parent.countryId !== 'NL' &&\r\n                        this.parent.countryId !== null &&\r\n                        this.parent.countryId != ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                })\r\n                .required('Verplicht'),\r\n            city: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        iban: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht')\r\n            .test('iban', 'Ongeldige IBAN of gebruik geen spaties.', value => ibantools.isValidIBAN(value)),\r\n        ibanAttn: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht'),\r\n        organisation: Yup.object().shape({\r\n            chamberOfCommerceNumber: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n    }),\r\n\r\n    validationSchemaPcrAdditional: Yup.object().shape({\r\n        visitAddress: Yup.object().shape({\r\n            eanElectricity: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig')\r\n                .required('Verplicht'),\r\n            primaryAddressEnergySupplierElectricity: Yup.object().shape({\r\n                energySupplierId: Yup.string()\r\n                    .nullable()\r\n                    .required('Verplicht'),\r\n                esNumber: Yup.string()\r\n                    .nullable()\r\n                    .trim()\r\n                    .required('Verplicht'),\r\n            }),\r\n        }),\r\n    }),\r\n\r\n    validationSchemaPostalCodeAndNumber: Yup.object().shape({\r\n        visitAddress: Yup.object().shape({\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .required('Verplicht')\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .required('Verplicht')\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n        }),\r\n    }),\r\n};\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport DefaultContactOrganisationView from './default-form-organisation/View';\r\nimport DefaultContactOrganisationEdit from './default-form-organisation/Edit';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaOrganisation from './../../helpers/ValidationSchemaOrganisation';\r\nimport { isEmpty } from 'lodash';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction ContactDetailsOrganisation({\r\n    portalSettings,\r\n    initialContact,\r\n    handleSubmitContactValues,\r\n    editButtonGroup,\r\n    editForm,\r\n    setEditForm,\r\n}) {\r\n    const validationSchema = initialContact.isParticipantPcrProject\r\n        ? ValidationSchemaOrganisation.validationSchemaBasic\r\n              .concat(ValidationSchemaOrganisation.validationSchemaAdditional)\r\n              .concat(ValidationSchemaOrganisation.validationSchemaPcrAdditional)\r\n        : initialContact.isParticipant\r\n        ? ValidationSchemaOrganisation.validationSchemaBasic.concat(\r\n              ValidationSchemaOrganisation.validationSchemaAdditional\r\n          )\r\n        : ValidationSchemaOrganisation.validationSchemaBasic;\r\n\r\n    return (\r\n        <div>\r\n            {editForm ? (\r\n                <Formik\r\n                    initialValues={initialContact}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        actions.setSubmitting(true);\r\n                        handleSubmitContactValues(values, actions, () => setEditForm(false));\r\n                    }}\r\n                    render={({ errors, touched, setFieldValue, isSubmitting, status, values, handleSubmit }) => {\r\n                        return (\r\n                            <Form>\r\n                                <DefaultContactOrganisationEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                />\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ButtonGroup aria-label=\"organisation\" className=\"float-right\">\r\n                                            <Button\r\n                                                variant={'outline-dark'}\r\n                                                size=\"sm\"\r\n                                                onClick={function() {\r\n                                                    setEditForm(false);\r\n                                                }}\r\n                                            >\r\n                                                Annuleren\r\n                                            </Button>\r\n                                            <Button\r\n                                                className={'w-button'}\r\n                                                size=\"sm\"\r\n                                                onClick={handleSubmit}\r\n                                                disabled={isSubmitting}\r\n                                            >\r\n                                                {isSubmitting ? (\r\n                                                    <span>\r\n                                                        <ClipLoader color={'white'} size={14} />\r\n                                                        Bezig met opslaan\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    'Opslaan'\r\n                                                )}\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!isEmpty(errors) ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                    Niet alle verplichte velden zijn (juist) ingevuld!\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                                {status && status.message ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                    {status.message}\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </Form>\r\n                        );\r\n                    }}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <DefaultContactOrganisationView portalSettings={portalSettings} initialContact={initialContact} />\r\n                    <Row>\r\n                        <Col>{editButtonGroup}</Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactDetailsOrganisation;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { PortalUserConsumer } from '../../context/PortalUserContext';\r\nimport ContactAPI from '../../api/contact/ContactAPI';\r\nimport rebaseContact from '../../helpers/RebaseContact';\r\nimport LoadingView from '../../components/general/LoadingView';\r\nimport ContactDetailsPersonal from './Personal';\r\nimport ContactDetailsOrganisation from './Organisation';\r\nimport PortalSettingsAPI from '../../api/portal-settings/PortalSettingsAPI';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nconst ContactDetails = function(props) {\r\n    const [contact, setContact] = useState({});\r\n    const [portalSettings, setPortalSettings] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n    const prevCurrentSelectedContact = usePrevious(props.currentSelectedContact);\r\n    const [editForm, setEditForm] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const keys =\r\n            '?keys[]=portalName' +\r\n            '&keys[]=portalWebsite' +\r\n            '&keys[]=portalUrl' +\r\n            '&keys[]=responsibleUserId' +\r\n            '&keys[]=checkContactTaskResponsibleUserId' +\r\n            '&keys[]=linkPrivacyPolicy' +\r\n            '&keys[]=pcrPowerKwhConsumptionPercentage' +\r\n            '&keys[]=pcrGeneratingCapacityOneSolorPanel';\r\n        PortalSettingsAPI.fetchPortalSettings(keys)\r\n            .then(payload => {\r\n                setPortalSettings({ ...payload.data });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ isLoading: false, hasError: true });\r\n            });\r\n\r\n        // Call Api if current selected contact id is filled\r\n        if (props.currentSelectedContact.id) {\r\n            // If there is no previous selected contact OR previous selected contact is not the same as current selected contact\r\n            if (!prevCurrentSelectedContact || prevCurrentSelectedContact.id != props.currentSelectedContact.id) {\r\n                callFetchContact();\r\n            }\r\n        }\r\n    }, [props.currentSelectedContact]);\r\n\r\n    function callFetchContact() {\r\n        setLoading(true);\r\n        ContactAPI.fetchContact(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                const contactData = rebaseContact(payload.data.data);\r\n\r\n                setContact(contactData);\r\n                props.updateNameSelectedContact(\r\n                    contactData.fullNameFnf,\r\n                    contactData.typeId,\r\n                    contactData.firstName,\r\n                    contactData.lastNamePrefix,\r\n                    contactData.lastName\r\n                );\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function usePrevious(value) {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    function handleSubmitContactValues(values, actions, switchToView) {\r\n        const updatedContact = { ...contact, ...values, projectId: null };\r\n        ContactAPI.updateContact(updatedContact)\r\n            .then(payload => {\r\n                callFetchContact();\r\n                actions.setSubmitting(false);\r\n                switchToView();\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                actions.setStatus({\r\n                    message: error.response.data.message,\r\n                });\r\n                // alert('Er is iets misgegaan met opslaan! Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    const editButtonGroup = (\r\n        <ButtonGroup aria-label=\"contact-details\" className={'float-right'}>\r\n            <Button\r\n                className={'w-button'}\r\n                size=\"sm\"\r\n                onClick={function() {\r\n                    setEditForm(true);\r\n                }}\r\n            >\r\n                Wijzig\r\n            </Button>\r\n        </ButtonGroup>\r\n    );\r\n\r\n    return (\r\n        <div className=\"content-section\">\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <div className=\"content-container w-container\">\r\n                    {editForm ? (\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"content-heading mt-0\">Contactgegevens</h1>\r\n                            </Col>\r\n                        </Row>\r\n                    ) : (\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"content-heading mt-0\">Contactgegevens</h1>\r\n                            </Col>\r\n                            <Col>{editButtonGroup}</Col>\r\n                        </Row>\r\n                    )}\r\n                    <div className=\"w-form\" />\r\n                    {/* If contact is person */}\r\n                    {contact.typeId === 'person' ? (\r\n                        <ContactDetailsPersonal\r\n                            portalSettings={portalSettings}\r\n                            initialContact={contact}\r\n                            handleSubmitContactValues={handleSubmitContactValues}\r\n                            editButtonGroup={editButtonGroup}\r\n                            editForm={editForm}\r\n                            setEditForm={setEditForm}\r\n                        />\r\n                    ) : null}\r\n                    {/* If contact is organisation */}\r\n                    {contact.typeId === 'organisation' ? (\r\n                        <ContactDetailsOrganisation\r\n                            portalSettings={portalSettings}\r\n                            initialContact={contact}\r\n                            handleSubmitContactValues={handleSubmitContactValues}\r\n                            editButtonGroup={editButtonGroup}\r\n                            editForm={editForm}\r\n                            setEditForm={setEditForm}\r\n                        />\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function ContactDetailsWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact, updateNameSelectedContact }) => (\r\n                <ContactDetails\r\n                    {...props}\r\n                    currentSelectedContact={currentSelectedContact}\r\n                    updateNameSelectedContact={updateNameSelectedContact}\r\n                />\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Field, FieldArray, Form, Formik } from 'formik';\r\nimport ButtonText from '../../components/button/ButtonText';\r\n\r\nconst MyAreasOfInterestForm = function({ handleSubmit, initialValues }) {\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            enableReinitialize={true}\r\n            onSubmit={(values, actions) => {\r\n                actions.setSubmitting(true);\r\n                console.log(values);\r\n            }}\r\n            render={({ errors, touched, setFieldValue, isSubmitting, values }) => {\r\n                return (\r\n                    <Form id=\"email-form\" name=\"email-form\">\r\n                        <div className=\"w-row\">\r\n                            <div className=\"w-col w-col-6\">\r\n                                <h6 className=\"heading-content\">Mijn interessegebieden</h6>\r\n                                <FieldArray\r\n                                    name=\"myAreasOfInterest\"\r\n                                    render={arrayHelpers => (\r\n                                        <div>\r\n                                            {values.myAreasOfInterest &&\r\n                                                values.myAreasOfInterest.map((myAreaOfInterest, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Field\r\n                                                            name={`myAreasOfInterest[${index}]['value']`}\r\n                                                            render={({ field }) => (\r\n                                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        {...field}\r\n                                                                        id={myAreaOfInterest.name}\r\n                                                                        checked={myAreaOfInterest.value}\r\n                                                                        className=\"w-checkbox-input checkbox\"\r\n                                                                    />\r\n                                                                    <span\r\n                                                                        htmlFor={myAreaOfInterest.name}\r\n                                                                        className=\"checkbox-label w-form-label\"\r\n                                                                    >\r\n                                                                        {myAreaOfInterest.name}\r\n                                                                    </span>\r\n                                                                </label>\r\n                                                            )}\r\n                                                        />\r\n                                                    </div>\r\n                                                ))}\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n\r\n                                <h6 className=\"heading-content\">Deelname</h6>\r\n                                <FieldArray\r\n                                    name=\"participations\"\r\n                                    render={arrayHelpers => (\r\n                                        <div>\r\n                                            {values.participations &&\r\n                                                values.participations.map((participation, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Field\r\n                                                            name={`participations[${index}]['value']`}\r\n                                                            render={({ field }) => (\r\n                                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        {...field}\r\n                                                                        id={participation.name}\r\n                                                                        checked={participation.value}\r\n                                                                        className=\"w-checkbox-input checkbox\"\r\n                                                                    />\r\n                                                                    <span\r\n                                                                        htmlFor={participation.name}\r\n                                                                        className=\"checkbox-label w-form-label\"\r\n                                                                    >\r\n                                                                        {participation.name}\r\n                                                                    </span>\r\n                                                                </label>\r\n                                                            )}\r\n                                                        />\r\n                                                    </div>\r\n                                                ))}\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n\r\n                                <h6 className=\"heading-content\">Algemeen</h6>\r\n                                <FieldArray\r\n                                    name=\"generalOptions\"\r\n                                    render={arrayHelpers => (\r\n                                        <div>\r\n                                            {values.generalOptions &&\r\n                                                values.generalOptions.map((generalOption, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Field\r\n                                                            name={`generalOptions[${index}]['value']`}\r\n                                                            render={({ field }) => (\r\n                                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        {...field}\r\n                                                                        id={generalOption.name}\r\n                                                                        checked={generalOption.value}\r\n                                                                        className=\"w-checkbox-input checkbox\"\r\n                                                                    />\r\n                                                                    <span\r\n                                                                        htmlFor={generalOption.name}\r\n                                                                        className=\"checkbox-label w-form-label\"\r\n                                                                    >\r\n                                                                        {generalOption.name}\r\n                                                                    </span>\r\n                                                                </label>\r\n                                                            )}\r\n                                                        />\r\n                                                    </div>\r\n                                                ))}\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"w-row\">\r\n                            <div className=\"w-col w-col-6\">\r\n                                <ButtonText\r\n                                    buttonText={'Opslaan'}\r\n                                    buttonClassName={'save-btn w-button'}\r\n                                    type={'submit'}\r\n                                    loading={isSubmitting}\r\n                                />\r\n                            </div>\r\n                            <div className=\"w-col w-col-6\" />\r\n                        </div>\r\n                    </Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MyAreasOfInterestForm;\r\n","import React from 'react';\r\nimport MyAreasOfInterestForm from './Form';\r\n\r\nconst MyAreasOfInterest = function() {\r\n    // TODO Fetch values from API\r\n    const initialValues = {\r\n        myAreasOfInterest: [\r\n            { id: 4, name: 'Gevel isolatie', value: true },\r\n            { id: 5, name: 'Zonnepanelen', value: false },\r\n            { id: 6, name: 'Dak isolatie', value: false },\r\n            { id: 7, name: 'Zonneboiler', value: true },\r\n        ],\r\n        participations: [{ id: 2, name: 'Test groep', value: true }, { id: 3, name: 'De leuke mensen', value: false }],\r\n        generalOptions: [{ id: 1, name: 'Test algemeen groep', value: false }],\r\n    };\r\n\r\n    return (\r\n        <div className=\"content-section\">\r\n            <div className=\"content-container w-container\">\r\n                <h1 className=\"content-heading\">Instellingen</h1>\r\n                <div className=\"w-form\" />\r\n                <MyAreasOfInterestForm initialValues={initialValues} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyAreasOfInterest;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n    fetchProjects: function() {\r\n        const requestUrl = `/jory/project`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: ['id', 'name', 'dateStartRegistrations', 'dateEndRegistrations'],\r\n                    flt: {\r\n                        and: [\r\n                            { f: 'dateStartRegistrations', o: '<=', d: moment().format('YYYY-MM-DD') },\r\n                            { f: 'dateEndRegistrations', o: '>=', d: moment().format('YYYY-MM-DD') },\r\n                        ],\r\n                    },\r\n                    rlt: {\r\n                        administration: { fld: ['id', 'name'] },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    fetchProject: function(id) {\r\n        const requestUrl = `/jory/project/${id}`;\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'name',\r\n                        'description',\r\n                        'dateStartRegistrations',\r\n                        'dateEndRegistrations',\r\n                        'dateEndRegistrations',\r\n                        'minParticipations',\r\n                        'maxParticipations',\r\n                        'totalParticipations',\r\n                        'participationWorth',\r\n                        'currentBookWorth',\r\n                        'amountOfLoanNeeded',\r\n                        'minAmountLoan',\r\n                        'maxAmountLoan',\r\n                        'isSceProject',\r\n                        'checkPostalcodeLink',\r\n                        'postalcodeLink',\r\n                        'linkAgreeTerms',\r\n                        'linkProjectInfo',\r\n                        'linkUnderstandInfo',\r\n                        'showQuestionAboutMembership',\r\n                        'useTransactionCostsWithMembership',\r\n                        'usesMollie',\r\n                        'textTransactionCosts',\r\n                        'transactionCostsCodeRef',\r\n                        'transactionCostsAmountMin',\r\n                        'transactionCostsAmountMax',\r\n                        'transactionCostsAmount',\r\n                        'transactionCostsPercentage',\r\n                        'transactionCostsAmount2',\r\n                        'transactionCostsPercentage2',\r\n                        'transactionCostsAmount3',\r\n                        'transactionCostsPercentage3',\r\n                    ],\r\n                    flt: {\r\n                        and: [\r\n                            { f: 'dateStartRegistrations', o: '<=', d: moment().format('YYYY-MM-DD') },\r\n                            { f: 'dateEndRegistrations', o: '>=', d: moment().format('YYYY-MM-DD') },\r\n                        ],\r\n                    },\r\n                    rlt: {\r\n                        projectType: { fld: ['id', 'codeRef'] },\r\n                        administration: { fld: ['id', 'name', 'portalSettingsLayoutAssigned'] },\r\n                        documentAgreeTerms: { fld: ['id', 'filename'] },\r\n                        documentUnderstandInfo: { fld: ['id', 'filename'] },\r\n                        documentProjectInfo: { fld: ['id', 'filename'] },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    documentDownload: function(projectId, id) {\r\n        const requestUrl = `/project/${projectId}/document/${id}/download`;\r\n\r\n        return axiosInstance.get(requestUrl, { responseType: 'blob' });\r\n    },\r\n};\r\n","export default amount => {\r\n    if (!amount) amount = 0;\r\n    // if (isNaN(amount)) {\r\n    //     amount = amount.replace(',', '.');\r\n    // }\r\n    amount = parseFloat(amount * 100) / 100;\r\n\r\n    if (isNaN(amount)) return 'Ongeldig bedrag';\r\n\r\n    return `€ ${amount.toLocaleString('nl', {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n    })}`;\r\n};\r\n","export default function(project, amountOptioned, participationsOptioned) {\r\n    let transactionCosts = 0;\r\n    let varAmountOptioned = amountOptioned ? parseFloat(amountOptioned.toString().replace(',', '.')) : 0;\r\n    let varParticipationsOptioned = participationsOptioned ? parseFloat(participationsOptioned).toFixed(0) : 0;\r\n    switch (project.transactionCostsCodeRef) {\r\n        case 'amount-once':\r\n            transactionCosts = project.transactionCostsAmount;\r\n            break;\r\n        case 'amount':\r\n            if (project.projectType.codeRef === 'loan') {\r\n                transactionCosts = project.transactionCostsAmount;\r\n            } else {\r\n                transactionCosts = project.transactionCostsAmount * varParticipationsOptioned;\r\n            }\r\n            break;\r\n        case 'percentage':\r\n            let amount = 0;\r\n            if (project.projectType.codeRef === 'loan') {\r\n                amount = varAmountOptioned;\r\n            } else {\r\n                amount = varParticipationsOptioned * project.currentBookWorth;\r\n            }\r\n            if (amount != 0) {\r\n                if (project.transactionCostsAmount3 !== null && amount >= project.transactionCostsAmount3) {\r\n                    transactionCosts = parseFloat(((amount * project.transactionCostsPercentage3) / 100).toFixed(2));\r\n                } else if (project.transactionCostsAmount2 !== null && amount >= project.transactionCostsAmount2) {\r\n                    transactionCosts = parseFloat(((amount * project.transactionCostsPercentage2) / 100).toFixed(2));\r\n                } else if (project.transactionCostsAmount !== null && amount >= project.transactionCostsAmount) {\r\n                    transactionCosts = parseFloat(((amount * project.transactionCostsPercentage) / 100).toFixed(2));\r\n                } else {\r\n                    transactionCosts = 0;\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            transactionCosts = 0;\r\n    }\r\n    if (project.transactionCostsCodeRef !== 'none') {\r\n        if (project.transactionCostsAmountMin !== null && transactionCosts < project.transactionCostsAmountMin) {\r\n            transactionCosts = project.transactionCostsAmountMin;\r\n        }\r\n        if (project.transactionCostsAmountMax !== null && transactionCosts > project.transactionCostsAmountMax) {\r\n            transactionCosts = project.transactionCostsAmountMax;\r\n        }\r\n    }\r\n\r\n    return transactionCosts;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get } from 'lodash';\r\n\r\nconst InputTextCurrency = ({\r\n    field,\r\n    type,\r\n    className,\r\n    id,\r\n    readOnly,\r\n    placeholder,\r\n    showErrorMessage,\r\n    errors,\r\n    touched,\r\n    classNameErrorMessage,\r\n    disabled,\r\n    customOnChange = null,\r\n}) => {\r\n    if (customOnChange) {\r\n        field.onChange = customOnChange;\r\n    }\r\n    return (\r\n        <>\r\n            {get(errors, field.name, '') && get(touched, field.name, '') && showErrorMessage ? (\r\n                <small className={`${classNameErrorMessage}`}>{get(errors, field.name, '')}</small>\r\n            ) : null}\r\n            <input\r\n                type={type}\r\n                className={`text-input w-input ${className} ${\r\n                    Boolean(get(errors, field.name, '') && get(touched, field.name, '')) ? 'has-error mb-0' : ''\r\n                } `}\r\n                id={id}\r\n                {...field}\r\n                value={field.value.toString().replace('.', ',')}\r\n                readOnly={readOnly}\r\n                placeholder={placeholder}\r\n                disabled={disabled}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nInputTextCurrency.defaultProps = {\r\n    type: 'text',\r\n    className: 'content',\r\n    readOnly: false,\r\n    placeholder: '',\r\n    showErrorMessage: true,\r\n    classNameErrorMessage: 'text-danger',\r\n    errors: {},\r\n    touched: {},\r\n};\r\n\r\nInputTextCurrency.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    type: PropTypes.string,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    readOnly: PropTypes.bool,\r\n    showErrorMessage: PropTypes.bool,\r\n    classNameErrorMessage: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    errors: PropTypes.object,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default InputTextCurrency;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { get, isEmpty } from 'lodash';\r\nimport calculateTransactionCosts from '../../../helpers/CalculateTransactionCosts';\r\nimport InputTextCurrency from '../../../components/form/InputTextCurrency';\r\n\r\nfunction StepOneLoan({ next, project, contactProjectData, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        amountOptioned: Yup.string()\r\n            .required('Verplicht')\r\n            .transform(function(value, originalvalue) {\r\n                return value ? value.replace(',', '.') : 0;\r\n            })\r\n            .test(\r\n                'amountOptioned',\r\n                'Minimum van ' + project.minAmountLoan + ' nodig',\r\n                value => value >= project.minAmountLoan\r\n            )\r\n            .test(\r\n                'amountOptioned',\r\n                'Maximum van ' + project.maxAmountLoan + ' bereikt',\r\n                value => value <= project.maxAmountLoan\r\n            )\r\n            .matches(/^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$/, 'Fout bedrag'),\r\n        choiceMembership: Yup.number().test(\r\n            'choiceMembership',\r\n            'Verplicht',\r\n            value => !project.showQuestionAboutMembership || contactProjectData.belongsToMembershipGroup || value != 0\r\n        ),\r\n    });\r\n\r\n    function setAmountOptioned(amountOptioned) {\r\n        return amountOptioned ? amountOptioned.toString().replace(',', '.') : '';\r\n    }\r\n    function calculateAmount(amountOptioned) {\r\n        return amountOptioned ? parseFloat(amountOptioned.toString().replace(',', '.')) : 0;\r\n    }\r\n    function calculateTransactionCostsAmount(amountOptioned, choiceMembership) {\r\n        if (!project.useTransactionCostsWithMembership) {\r\n            if (project.showQuestionAboutMembership && contactProjectData.belongsToMembershipGroup) {\r\n                return 0;\r\n            }\r\n            if (project.showQuestionAboutMembership && choiceMembership === 1) {\r\n                return 0;\r\n            }\r\n        }\r\n        return calculateTransactionCosts(project, amountOptioned, null);\r\n    }\r\n    function calculateTotalAmount(amountOptioned, choiceMembership) {\r\n        return (\r\n            calculateAmount(amountOptioned) + calculateTransactionCostsAmount(amountOptioned, choiceMembership)\r\n        ).toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues({\r\n                    ...values,\r\n                    amountOptioned: setAmountOptioned(values.amountOptioned),\r\n                    amount: calculateAmount(values.amountOptioned),\r\n                    transactionCostsAmount: calculateTransactionCostsAmount(\r\n                        values.amountOptioned,\r\n                        values.choiceMembership\r\n                    ),\r\n                    totalAmount: calculateTotalAmount(values.amountOptioned, values.choiceMembership),\r\n                });\r\n                next();\r\n            }}\r\n            initialValues={initialRegisterValues}\r\n            enableReinitialize={true}\r\n        >\r\n            {({ handleSubmit, values, touched, errors, setFieldValue }) => (\r\n                <>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Minimaal bedrag</FormLabel>\r\n                                <TextBlock>{project.minAmountLoan}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Maximaal bedrag</FormLabel>\r\n                                <TextBlock>{project.maxAmountLoan}</TextBlock>\r\n                            </Col>\r\n\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Label className={'field-label'}>In te leggen bedrag</Form.Label>\r\n                                <Field\r\n                                    name=\"amountOptioned\"\r\n                                    render={({ field }) => (\r\n                                        <InputTextCurrency\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"amount_optioned\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>\r\n                                    {project.transactionCostsCodeRef === 'none' ? 'Te betalen bedrag' : 'Bedrag'}\r\n                                </FormLabel>\r\n                                <TextBlock>{MoneyPresenter(calculateAmount(values.amountOptioned))}</TextBlock>\r\n                            </Col>\r\n                        </Row>\r\n                        {project.showQuestionAboutMembership ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <p>\r\n                                            {contactProjectData.belongsToMembershipGroup\r\n                                                ? contactProjectData.textIsMemberMerged\r\n                                                : contactProjectData.textIsNoMemberMerged}\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!contactProjectData.belongsToMembershipGroup ? (\r\n                                    <Row>\r\n                                        <Col xs={12} md={10}>\r\n                                            <Field\r\n                                                name=\"choiceMembership\"\r\n                                                render={({ field }) => (\r\n                                                    <>\r\n                                                        {get(errors, field.name, '') &&\r\n                                                            get(touched, field.name, '') && (\r\n                                                                <small className=\"text-danger\">\r\n                                                                    {get(errors, field.name, '')}\r\n                                                                </small>\r\n                                                            )}\r\n                                                        <div className=\"form-check\">\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_yes\"\r\n                                                                    checked={field.value === 1}\r\n                                                                    value={1}\r\n                                                                    onChange={() =>\r\n                                                                        setFieldValue('choiceMembership', 1)\r\n                                                                    }\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeMemberMerged}\r\n                                                            </label>\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_no\"\r\n                                                                    checked={field.value === 2}\r\n                                                                    value={2}\r\n                                                                    onChange={() => {\r\n                                                                        setFieldValue('choiceMembership', 2);\r\n                                                                    }}\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeNoMemberMerged}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </>\r\n                        ) : null}\r\n\r\n                        {project.transactionCostsCodeRef !== 'none' ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>{project.textTransactionCosts}</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTransactionCostsAmount(\r\n                                                    values.amountOptioned,\r\n                                                    values.choiceMembership\r\n                                                )\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>Totaal te betalen</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTotalAmount(values.amountOptioned, values.choiceMembership)\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : null}\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                    <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                        Ga naar gegevens\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        {!isEmpty(errors) ? (\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            Niet alle verplichte velden zijn ingevuld om verder te gaan naar de volgende\r\n                                            stap!\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : null}\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOneLoan;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { get, isEmpty } from 'lodash';\r\nimport calculateTransactionCosts from '../../../helpers/CalculateTransactionCosts';\r\n\r\nfunction StepOneObligation({ next, project, contactProjectData, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        participationsOptioned: Yup.number()\r\n            .integer('Alleen gehele aantallen')\r\n            .typeError('Alleen nummers')\r\n            .test(\r\n                'participationsOptioned',\r\n                'Minimum van ' + project.minParticipations + ' nodig',\r\n                value => value >= project.minParticipations\r\n            )\r\n            .max(project.maxParticipations, 'Maximum van ${max} bereikt')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n        choiceMembership: Yup.number().test(\r\n            'choiceMembership',\r\n            'Verplicht',\r\n            value => !project.showQuestionAboutMembership || contactProjectData.belongsToMembershipGroup || value != 0\r\n        ),\r\n    });\r\n\r\n    function calculateAmount(participationsOptioned) {\r\n        return participationsOptioned ? participationsOptioned * project.currentBookWorth : 0;\r\n    }\r\n    function calculateTransactionCostsAmount(participationsOptioned, choiceMembership) {\r\n        if (!project.useTransactionCostsWithMembership) {\r\n            if (project.showQuestionAboutMembership && contactProjectData.belongsToMembershipGroup) {\r\n                return 0;\r\n            }\r\n            if (project.showQuestionAboutMembership && choiceMembership === 1) {\r\n                return 0;\r\n            }\r\n        }\r\n        return calculateTransactionCosts(project, null, participationsOptioned);\r\n    }\r\n    function calculateTotalAmount(participationsOptioned, choiceMembership) {\r\n        return (\r\n            calculateAmount(participationsOptioned) +\r\n            calculateTransactionCostsAmount(participationsOptioned, choiceMembership)\r\n        ).toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues({\r\n                    ...values,\r\n                    amount: calculateAmount(values.participationsOptioned),\r\n                    transactionCostsAmount: calculateTransactionCostsAmount(\r\n                        values.participationsOptioned,\r\n                        values.choiceMembership\r\n                    ),\r\n                    totalAmount: calculateTotalAmount(values.participationsOptioned, values.choiceMembership),\r\n                });\r\n                next();\r\n            }}\r\n            initialValues={initialRegisterValues}\r\n            enableReinitialize={true}\r\n        >\r\n            {({ handleSubmit, values, touched, errors, setFieldValue }) => (\r\n                <>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Minimale aantal obligaties</FormLabel>\r\n                                <TextBlock>{project.minParticipations}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Maximale aantal obligaties</FormLabel>\r\n                                <TextBlock>{project.maxParticipations}</TextBlock>\r\n                            </Col>\r\n\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Huidige hoofdsom per obligatie</FormLabel>\r\n                                <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Label className={'field-label'}>Gewenst aantal obligaties</Form.Label>\r\n                                <Field\r\n                                    name=\"participationsOptioned\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"participations_optioned\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>\r\n                                    {project.transactionCostsCodeRef === 'none' ? 'Te betalen bedrag' : 'Bedrag'}\r\n                                </FormLabel>\r\n                                <TextBlock>{MoneyPresenter(calculateAmount(values.participationsOptioned))}</TextBlock>\r\n                            </Col>\r\n                        </Row>\r\n                        {project.showQuestionAboutMembership ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <p>\r\n                                            {contactProjectData.belongsToMembershipGroup\r\n                                                ? contactProjectData.textIsMemberMerged\r\n                                                : contactProjectData.textIsNoMemberMerged}\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!contactProjectData.belongsToMembershipGroup ? (\r\n                                    <Row>\r\n                                        <Col xs={12} md={10}>\r\n                                            <Field\r\n                                                name=\"choiceMembership\"\r\n                                                render={({ field }) => (\r\n                                                    <>\r\n                                                        {get(errors, field.name, '') &&\r\n                                                            get(touched, field.name, '') && (\r\n                                                                <small className=\"text-danger\">\r\n                                                                    {get(errors, field.name, '')}\r\n                                                                </small>\r\n                                                            )}\r\n                                                        <div className=\"form-check\">\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_yes\"\r\n                                                                    checked={field.value === 1}\r\n                                                                    value={1}\r\n                                                                    onChange={() =>\r\n                                                                        setFieldValue('choiceMembership', 1)\r\n                                                                    }\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeMemberMerged}\r\n                                                            </label>\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_no\"\r\n                                                                    checked={field.value === 2}\r\n                                                                    value={2}\r\n                                                                    onChange={() => {\r\n                                                                        setFieldValue('choiceMembership', 2);\r\n                                                                    }}\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeNoMemberMerged}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </>\r\n                        ) : null}\r\n\r\n                        {project.transactionCostsCodeRef !== 'none' ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>{project.textTransactionCosts}</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTransactionCostsAmount(\r\n                                                    values.participationsOptioned,\r\n                                                    values.choiceMembership\r\n                                                )\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>Totaal te betalen</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTotalAmount(\r\n                                                    values.participationsOptioned,\r\n                                                    values.choiceMembership\r\n                                                )\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : null}\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                    <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                        Ga naar gegevens\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        {!isEmpty(errors) ? (\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            Niet alle verplichte velden zijn ingevuld om verder te gaan naar de volgende\r\n                                            stap!\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : null}\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOneObligation;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { get, isEmpty } from 'lodash';\r\nimport calculateTransactionCosts from '../../../helpers/CalculateTransactionCosts';\r\n\r\nfunction StepOneCapital({ next, project, contactProjectData, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        participationsOptioned: Yup.number()\r\n            .integer('Alleen gehele aantallen')\r\n            .typeError('Alleen nummers')\r\n            .test(\r\n                'participationsOptioned',\r\n                'Minimum van ' + project.minParticipations + ' nodig',\r\n                value => value >= project.minParticipations\r\n            )\r\n            .max(project.maxParticipations, 'Maximum van ${max} bereikt')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n        choiceMembership: Yup.number().test(\r\n            'choiceMembership',\r\n            'Verplicht',\r\n            value => !project.showQuestionAboutMembership || contactProjectData.belongsToMembershipGroup || value != 0\r\n        ),\r\n    });\r\n\r\n    function calculateAmount(participationsOptioned) {\r\n        return participationsOptioned ? participationsOptioned * project.currentBookWorth : 0;\r\n    }\r\n    function calculateTransactionCostsAmount(participationsOptioned, choiceMembership) {\r\n        if (!project.useTransactionCostsWithMembership) {\r\n            if (project.showQuestionAboutMembership && contactProjectData.belongsToMembershipGroup) {\r\n                return 0;\r\n            }\r\n            if (project.showQuestionAboutMembership && choiceMembership === 1) {\r\n                return 0;\r\n            }\r\n        }\r\n        return calculateTransactionCosts(project, null, participationsOptioned);\r\n    }\r\n    function calculateTotalAmount(participationsOptioned, choiceMembership) {\r\n        return (\r\n            calculateAmount(participationsOptioned) +\r\n            calculateTransactionCostsAmount(participationsOptioned, choiceMembership)\r\n        ).toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues({\r\n                    ...values,\r\n                    amount: calculateAmount(values.participationsOptioned),\r\n                    transactionCostsAmount: calculateTransactionCostsAmount(\r\n                        values.participationsOptioned,\r\n                        values.choiceMembership\r\n                    ),\r\n                    totalAmount: calculateTotalAmount(values.participationsOptioned, values.choiceMembership),\r\n                });\r\n                next();\r\n            }}\r\n            initialValues={initialRegisterValues}\r\n            enableReinitialize={true}\r\n        >\r\n            {({ handleSubmit, values, touched, errors, setFieldValue }) => (\r\n                <>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Minimale aantal participaties</FormLabel>\r\n                                <TextBlock>{project.minParticipations}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Maximale aantal participaties</FormLabel>\r\n                                <TextBlock>{project.maxParticipations}</TextBlock>\r\n                            </Col>\r\n\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Huidige boekwaarde per participatie</FormLabel>\r\n                                <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Label className={'field-label'}>Gewenst aantal participaties</Form.Label>\r\n                                <Field\r\n                                    name=\"participationsOptioned\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"participations_optioned\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>\r\n                                    {project.transactionCostsCodeRef === 'none' ? 'Te betalen bedrag' : 'Bedrag'}\r\n                                </FormLabel>\r\n                                <TextBlock>{MoneyPresenter(calculateAmount(values.participationsOptioned))}</TextBlock>\r\n                            </Col>\r\n                        </Row>\r\n                        {project.showQuestionAboutMembership ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <p>\r\n                                            {contactProjectData.belongsToMembershipGroup\r\n                                                ? contactProjectData.textIsMemberMerged\r\n                                                : contactProjectData.textIsNoMemberMerged}\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!contactProjectData.belongsToMembershipGroup ? (\r\n                                    <Row>\r\n                                        <Col xs={12} md={10}>\r\n                                            <Field\r\n                                                name=\"choiceMembership\"\r\n                                                render={({ field }) => (\r\n                                                    <>\r\n                                                        {get(errors, field.name, '') &&\r\n                                                            get(touched, field.name, '') && (\r\n                                                                <small className=\"text-danger\">\r\n                                                                    {get(errors, field.name, '')}\r\n                                                                </small>\r\n                                                            )}\r\n                                                        <div className=\"form-check\">\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_yes\"\r\n                                                                    checked={field.value === 1}\r\n                                                                    value={1}\r\n                                                                    onChange={() =>\r\n                                                                        setFieldValue('choiceMembership', 1)\r\n                                                                    }\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeMemberMerged}\r\n                                                            </label>\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_no\"\r\n                                                                    checked={field.value === 2}\r\n                                                                    value={2}\r\n                                                                    onChange={() => {\r\n                                                                        setFieldValue('choiceMembership', 2);\r\n                                                                    }}\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeNoMemberMerged}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </>\r\n                        ) : null}\r\n\r\n                        {project.transactionCostsCodeRef !== 'none' ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>{project.textTransactionCosts}</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTransactionCostsAmount(\r\n                                                    values.participationsOptioned,\r\n                                                    values.choiceMembership\r\n                                                )\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>Totaal te betalen</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTotalAmount(\r\n                                                    values.participationsOptioned,\r\n                                                    values.choiceMembership\r\n                                                )\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : null}\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                    <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                        Ga naar gegevens\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        {!isEmpty(errors) ? (\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            Niet alle verplichte velden zijn ingevuld om verder te gaan naar de volgende\r\n                                            stap!\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : null}\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOneCapital;\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { get, isEmpty } from 'lodash';\r\nimport calculateTransactionCosts from '../../../helpers/CalculateTransactionCosts';\r\n\r\nfunction StepOnePcr({\r\n    portalSettings,\r\n    next,\r\n    project,\r\n    contactProjectData,\r\n    initialContact,\r\n    initialRegisterValues,\r\n    handleSubmitRegisterValues,\r\n}) {\r\n    const validationSchema = Yup.object({\r\n        participationsOptioned: Yup.number()\r\n            .integer('Alleen gehele aantallen')\r\n            .typeError('Alleen nummers')\r\n            .test(\r\n                'participationsOptioned',\r\n                'Minimum van ' + project.minParticipations + ' nodig',\r\n                value => value >= project.minParticipations\r\n            )\r\n            .max(project.maxParticipations, 'Maximum van ${max} bereikt')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n        pcrYearlyPowerKwhConsumption: Yup.number()\r\n            .typeError('Alleen nummers')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n        pcrPostalCode: Yup.string()\r\n            .min(4, 'Minimum van ${min} postcode cijfers nodig')\r\n            .required('Verplicht')\r\n            .test(\r\n                'pcrPostalCode',\r\n                'Helaas je postcode ligt niet binnen het gebied van potentiele deelnemers',\r\n                value =>\r\n                    value &&\r\n                    (!project.checkPostalcodeLink ||\r\n                        (project.postalcodeLink && project.postalcodeLink.includes(value.substring(0, 4))))\r\n            ),\r\n        pcrNumberOfSolarPanels: Yup.number().typeError('Alleen nummers'),\r\n        pcrInputGeneratedNumberOfKwh: Yup.number().typeError('Alleen nummers'),\r\n        choiceMembership: Yup.number().test(\r\n            'choiceMembership',\r\n            'Verplicht',\r\n            value => !project.showQuestionAboutMembership || contactProjectData.belongsToMembershipGroup || value != 0\r\n        ),\r\n    });\r\n\r\n    // const PCR_POWER_KWH_CONSUMPTION_PERCENTAGE = 0.8;\r\n    const PCR_POWER_KWH_CONSUMPTION_PERCENTAGE = portalSettings['pcrPowerKwhConsumptionPercentage'];\r\n    // const PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL = 250;\r\n    const PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL = portalSettings['pcrGeneratingCapacityOneSolorPanel'];\r\n\r\n    function calculateEstimatedGeneratedNumberOfKwh(values) {\r\n        return values.pcrNumberOfSolarPanels\r\n            ? values.pcrNumberOfSolarPanels * PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL\r\n            : 0;\r\n    }\r\n    function calculateGeneratedNumberOfKwh(values) {\r\n        return values.pcrInputGeneratedNumberOfKwh && values.pcrInputGeneratedNumberOfKwh > 0\r\n            ? values.pcrInputGeneratedNumberOfKwh\r\n            : calculateEstimatedGeneratedNumberOfKwh(values)\r\n            ? calculateEstimatedGeneratedNumberOfKwh(values)\r\n            : 0;\r\n    }\r\n    function calculatePowerKwhConsumption(values) {\r\n        let extraPowerKwhConsumption =\r\n            values.pcrYearlyPowerKwhConsumption - calculateGeneratedNumberOfKwh(values) > 0\r\n                ? values.pcrYearlyPowerKwhConsumption - calculateGeneratedNumberOfKwh(values)\r\n                : 0;\r\n        return extraPowerKwhConsumption;\r\n    }\r\n    function calculateAdviseMaxNumberOfParticipations(values) {\r\n        let pcrAdviseMaxNumberOfParticipations =\r\n            calculatePowerKwhConsumption(values) > 0\r\n                ? Math.ceil(\r\n                      (calculatePowerKwhConsumption(values) * PCR_POWER_KWH_CONSUMPTION_PERCENTAGE) /\r\n                          PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL\r\n                  )\r\n                : 0;\r\n\r\n        if (pcrAdviseMaxNumberOfParticipations < project.minParticipations) {\r\n            pcrAdviseMaxNumberOfParticipations = project.minParticipations;\r\n        } else if (pcrAdviseMaxNumberOfParticipations > project.maxParticipations) {\r\n            pcrAdviseMaxNumberOfParticipations = project.maxParticipations;\r\n        }\r\n        return pcrAdviseMaxNumberOfParticipations;\r\n    }\r\n\r\n    function calculateAmount(participationsOptioned) {\r\n        return participationsOptioned ? participationsOptioned * project.currentBookWorth : 0;\r\n    }\r\n    function calculateTransactionCostsAmount(participationsOptioned, choiceMembership) {\r\n        if (!project.useTransactionCostsWithMembership) {\r\n            if (project.showQuestionAboutMembership && contactProjectData.belongsToMembershipGroup) {\r\n                return 0;\r\n            }\r\n            if (project.showQuestionAboutMembership && choiceMembership === 1) {\r\n                return 0;\r\n            }\r\n        }\r\n        return calculateTransactionCosts(project, null, participationsOptioned);\r\n    }\r\n    function calculateTotalAmount(participationsOptioned, choiceMembership) {\r\n        return (\r\n            calculateAmount(participationsOptioned) +\r\n            calculateTransactionCostsAmount(participationsOptioned, choiceMembership)\r\n        ).toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues({\r\n                    ...values,\r\n                    powerKwhConsumption: calculatePowerKwhConsumption(values),\r\n                    amount: calculateAmount(values.participationsOptioned),\r\n                    transactionCostsAmount: calculateTransactionCostsAmount(\r\n                        values.participationsOptioned,\r\n                        values.choiceMembership\r\n                    ),\r\n                    totalAmount: calculateTotalAmount(values.participationsOptioned, values.choiceMembership),\r\n                });\r\n                next();\r\n            }}\r\n            initialValues={{\r\n                ...initialRegisterValues,\r\n            }}\r\n            enableReinitialize={true}\r\n        >\r\n            {({ handleSubmit, values, touched, errors, setFieldValue }) => {\r\n                let pcrEstimatedGeneratedNumberOfKwh = calculateEstimatedGeneratedNumberOfKwh(values);\r\n                let powerKwhConsumption = Math.ceil(\r\n                    calculatePowerKwhConsumption(values) * PCR_POWER_KWH_CONSUMPTION_PERCENTAGE\r\n                );\r\n                let pcrAdviseMaxNumberOfParticipations = calculateAdviseMaxNumberOfParticipations(values);\r\n                return (\r\n                    <>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>Minimale aantal participaties</FormLabel>\r\n                                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>Maximale aantal participaties</FormLabel>\r\n                                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                                </Col>\r\n\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>Huidige boekwaarde per participatie</FormLabel>\r\n                                    <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label required'}>Je postcode</Form.Label>\r\n                                    <Field\r\n                                        name=\"pcrPostalCode\"\r\n                                        render={({ field }) => (\r\n                                            <InputText\r\n                                                field={field}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                id=\"pcr_postal_code\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label'}>Deelnemende postcodes</Form.Label>\r\n                                    <TextBlock>{project.postalcodeLink}</TextBlock>\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label required'}>\r\n                                        Je (geschatte) jaarlijks verbruik (in kWh)\r\n                                    </Form.Label>\r\n                                    <Field\r\n                                        name=\"pcrYearlyPowerKwhConsumption\"\r\n                                        render={({ field }) => (\r\n                                            <InputText\r\n                                                field={field}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                id=\"pcr_yearly_power_kwh_consumption\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Form.Label className={'field-label'}>\r\n                                        Heb je al zonnepanelen op je eigen dak of doe je mee in een ander project?\r\n                                    </Form.Label>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"pcrHasSolarPanels\"\r\n                                        render={({ field }) => (\r\n                                            <>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_has_solar_panels_yes\"\r\n                                                            checked={field.value === 'Y'}\r\n                                                            value={'Y'}\r\n                                                            onChange={() => setFieldValue('pcrHasSolarPanels', 'Y')}\r\n                                                        />\r\n                                                        &nbsp;Ja\r\n                                                    </label>\r\n                                                    &nbsp;&nbsp;\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_has_solar_panels_no\"\r\n                                                            checked={field.value === 'N'}\r\n                                                            value={'N'}\r\n                                                            onChange={() => {\r\n                                                                setFieldValue('pcrHasSolarPanels', 'N');\r\n                                                                setFieldValue('pcrNumberOfSolarPanels', 0);\r\n                                                            }}\r\n                                                        />\r\n                                                        &nbsp;Nee\r\n                                                    </label>\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {values.pcrHasSolarPanels === 'Y' ? (\r\n                                <Row>\r\n                                    <Col xs={12} md={6}>\r\n                                        <Form.Label className={'field-label'}>\r\n                                            Hoeveel zonnepanelen wekken al stroom voor je op\r\n                                        </Form.Label>\r\n                                        <Field\r\n                                            name=\"pcrNumberOfSolarPanels\"\r\n                                            render={({ field }) => (\r\n                                                <InputText\r\n                                                    field={field}\r\n                                                    errors={errors}\r\n                                                    touched={touched}\r\n                                                    id=\"pcr_number_of_solar_panels\"\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label'}>\r\n                                        Wij schatten in dat je panelen jaarlijks opwekken\r\n                                    </Form.Label>\r\n                                    <TextBlock id=\"pcr_input_estimated_generated_number_of_kwh\">\r\n                                        {pcrEstimatedGeneratedNumberOfKwh} kWh\r\n                                    </TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Form.Label className={'field-label'}>Klopt het geschatte opbrengst?</Form.Label>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"pcrEstimatedRevenueOk\"\r\n                                        render={({ field }) => (\r\n                                            <>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_estimated_revenue_ok_yes\"\r\n                                                            checked={field.value === 'Y'}\r\n                                                            value={'Y'}\r\n                                                            onChange={() => {\r\n                                                                setFieldValue('pcrEstimatedRevenueOk', 'Y');\r\n                                                                setFieldValue('pcrInputGeneratedNumberOfKwh', 0);\r\n                                                            }}\r\n                                                        />\r\n                                                        &nbsp;Ja\r\n                                                    </label>\r\n                                                    &nbsp;&nbsp;\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_estimated_revenue_ok_no\"\r\n                                                            checked={field.value === 'N'}\r\n                                                            value={'N'}\r\n                                                            onChange={() => setFieldValue('pcrEstimatedRevenueOk', 'N')}\r\n                                                        />\r\n                                                        &nbsp;Nee\r\n                                                    </label>\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {values.pcrEstimatedRevenueOk === 'N' ? (\r\n                                <>\r\n                                    <Row>\r\n                                        <Col xs={12} md={6}>\r\n                                            <Form.Label className={'field-label'}>\r\n                                                Wat is de jaarlijkse opbrengst van jouw panelen (in kWh)\r\n                                            </Form.Label>\r\n                                            <Field\r\n                                                name=\"pcrInputGeneratedNumberOfKwh\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"pcr_input_generated_number_of_kwh\"\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <p>\r\n                                        We adviseren tot {PCR_POWER_KWH_CONSUMPTION_PERCENTAGE * 100}% van je jaarlijks\r\n                                        verbruik minus de jaarlijkse opbrengsten (in jouw geval {powerKwhConsumption}{' '}\r\n                                        kWh) te dekken met participaties. In het veld hier direct onder is voor je\r\n                                        uitgerekend hoeveel participaties dat zijn. Het is een advies, je mag er ook\r\n                                        meer kopen. Dit kan echter slecht zijn voor je rendement.\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label'}>\r\n                                        Advies maximaal aantal participaties\r\n                                    </Form.Label>\r\n                                    <TextBlock>{pcrAdviseMaxNumberOfParticipations}</TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label required'}>\r\n                                        Gewenst aantal participaties\r\n                                    </Form.Label>\r\n                                    <Field\r\n                                        name=\"participationsOptioned\"\r\n                                        render={({ field }) => (\r\n                                            <InputText\r\n                                                field={field}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                id=\"participations_optioned\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>\r\n                                        {project.transactionCostsCodeRef === 'none' ? 'Te betalen bedrag' : 'Bedrag'}\r\n                                    </FormLabel>\r\n                                    <TextBlock>\r\n                                        {MoneyPresenter(calculateAmount(values.participationsOptioned))}\r\n                                    </TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n                            {project.showQuestionAboutMembership ? (\r\n                                <>\r\n                                    <hr />\r\n                                    <Row>\r\n                                        <Col xs={12} md={10}>\r\n                                            <p>\r\n                                                {contactProjectData.belongsToMembershipGroup\r\n                                                    ? contactProjectData.textIsMemberMerged\r\n                                                    : contactProjectData.textIsNoMemberMerged}\r\n                                            </p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {!contactProjectData.belongsToMembershipGroup ? (\r\n                                        <Row>\r\n                                            <Col xs={12} md={10}>\r\n                                                <Field\r\n                                                    name=\"choiceMembership\"\r\n                                                    render={({ field }) => (\r\n                                                        <>\r\n                                                            {get(errors, field.name, '') &&\r\n                                                                get(touched, field.name, '') && (\r\n                                                                    <small className=\"text-danger\">\r\n                                                                        {get(errors, field.name, '')}\r\n                                                                    </small>\r\n                                                                )}\r\n                                                            <div className=\"form-check\">\r\n                                                                <label className=\"radio-inline\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        {...field}\r\n                                                                        id=\"choice_membership_yes\"\r\n                                                                        checked={field.value === 1}\r\n                                                                        value={1}\r\n                                                                        onChange={() =>\r\n                                                                            setFieldValue('choiceMembership', 1)\r\n                                                                        }\r\n                                                                    />\r\n                                                                    &nbsp;{contactProjectData.textBecomeMemberMerged}\r\n                                                                </label>\r\n                                                                <label className=\"radio-inline\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        {...field}\r\n                                                                        id=\"choice_membership_no\"\r\n                                                                        checked={field.value === 2}\r\n                                                                        value={2}\r\n                                                                        onChange={() => {\r\n                                                                            setFieldValue('choiceMembership', 2);\r\n                                                                        }}\r\n                                                                    />\r\n                                                                    &nbsp;{contactProjectData.textBecomeNoMemberMerged}\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        </>\r\n                                                    )}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    ) : null}\r\n                                </>\r\n                            ) : null}\r\n\r\n                            {project.transactionCostsCodeRef !== 'none' ? (\r\n                                <>\r\n                                    <hr />\r\n                                    <Row>\r\n                                        <Col xs={12} md={6}>\r\n                                            <FormLabel className={'field-label'}>\r\n                                                {project.textTransactionCosts}\r\n                                            </FormLabel>\r\n                                            <TextBlock>\r\n                                                {MoneyPresenter(\r\n                                                    calculateTransactionCostsAmount(\r\n                                                        values.participationsOptioned,\r\n                                                        values.choiceMembership\r\n                                                    )\r\n                                                )}\r\n                                            </TextBlock>\r\n                                        </Col>\r\n                                        <Col xs={12} md={6}>\r\n                                            <FormLabel className={'field-label'}>Totaal te betalen</FormLabel>\r\n                                            <TextBlock>\r\n                                                {MoneyPresenter(\r\n                                                    calculateTotalAmount(\r\n                                                        values.participationsOptioned,\r\n                                                        values.choiceMembership\r\n                                                    )\r\n                                                )}\r\n                                            </TextBlock>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            ) : null}\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                            Ga naar gegevens\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            {!isEmpty(errors) ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                Niet alle verplichte velden zijn ingevuld om verder te gaan naar de\r\n                                                volgende stap!\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                        </Form>\r\n                    </>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOnePcr;\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DefaultContactPersonalEdit from '../../contact-details/default-form-personal/Edit';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaPersonal from '../../../helpers/ValidationSchemaPersonal';\r\nimport ValidationSchemaOrganisation from '../../../helpers/ValidationSchemaOrganisation';\r\nimport DefaultContactOrganisationEdit from '../../contact-details/default-form-organisation/Edit';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { isEmpty } from 'lodash';\r\n\r\nfunction StepTwo({ portalSettings, previous, next, project, initialContact, handleSubmitContactValues }) {\r\n    initialContact.isParticipant = true;\r\n    const typeContact = initialContact.typeId ? initialContact.typeId : null;\r\n\r\n    let validationSchema = null;\r\n    let validationSchemaBasic = null;\r\n    let validationSchemaAdditional = null;\r\n    let validationSchemaPcrAdditional = null;\r\n    switch (typeContact) {\r\n        case 'person':\r\n            validationSchemaBasic = ValidationSchemaPersonal.validationSchemaBasic;\r\n            validationSchemaAdditional = ValidationSchemaPersonal.validationSchemaAdditional;\r\n            validationSchemaPcrAdditional = ValidationSchemaPersonal.validationSchemaPcrAdditional;\r\n            validationSchema = validationSchemaBasic.concat(validationSchemaAdditional);\r\n            if (project.projectType.codeRef === 'postalcode_link_capital') {\r\n                validationSchema = validationSchema.concat(validationSchemaPcrAdditional);\r\n            }\r\n            break;\r\n        case 'organisation':\r\n            validationSchemaBasic = ValidationSchemaOrganisation.validationSchemaBasic;\r\n            validationSchemaAdditional = ValidationSchemaOrganisation.validationSchemaAdditional;\r\n            validationSchemaPcrAdditional = ValidationSchemaPersonal.validationSchemaPcrAdditional;\r\n            validationSchema = validationSchemaBasic.concat(validationSchemaAdditional);\r\n            if (project.projectType.codeRef === 'postalcode_link_capital') {\r\n                validationSchema = validationSchema.concat(validationSchemaPcrAdditional);\r\n            }\r\n            break;\r\n    }\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialContact}\r\n                enableReinitialize={true}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    actions.setSubmitting(true);\r\n                    handleSubmitContactValues(values, actions, next);\r\n                }}\r\n                render={({ errors, touched, setFieldValue, isSubmitting, status, values, handleSubmit }) => {\r\n                    return (\r\n                        <Form>\r\n                            {/* If contact is person */}\r\n                            {initialContact.typeId === 'person' ? (\r\n                                <DefaultContactPersonalEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    projectTypeCodeRef={project.projectType.codeRef}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                />\r\n                            ) : null}\r\n\r\n                            {/* If contact is organisation */}\r\n                            {initialContact.typeId === 'organisation' ? (\r\n                                <DefaultContactOrganisationEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    projectTypeCodeRef={project.projectType.codeRef}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                />\r\n                            ) : null}\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={previous}>\r\n                                            Terug\r\n                                        </Button>\r\n                                        <Button\r\n                                            className={'w-button'}\r\n                                            size=\"sm\"\r\n                                            onClick={handleSubmit}\r\n                                            disabled={isSubmitting}\r\n                                        >\r\n                                            {isSubmitting ? (\r\n                                                <span>\r\n                                                    <ClipLoader color={'white'} size={14} />\r\n                                                    Bezig met opslaan\r\n                                                </span>\r\n                                            ) : (\r\n                                                'Opslaan en doorgaan'\r\n                                            )}\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            {!isEmpty(errors) ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                Niet alle verplichte velden zijn ingevuld om verder te gaan naar de\r\n                                                volgende stap!\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                            {status && status.message ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                {status.message}\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                        </Form>\r\n                    );\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepTwo;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { isEmpty } from 'lodash';\r\nimport ProjectAPI from '../../../api/project/ProjectAPI';\r\nimport fileDownload from 'js-file-download';\r\nimport { FaFileDownload } from 'react-icons/all';\r\n\r\nfunction StepThree({ project, contactProjectData, previous, next, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        didAcceptAgreement: Yup.bool().test(\r\n            'didAcceptAgreement',\r\n            'Je dient akkoord te gaan met de voorwaarden!',\r\n            value => value === true\r\n        ),\r\n        didUnderstandInfo: Yup.bool().test(\r\n            'didUnderstandInfo',\r\n            'Je dient te bevestigen, dat de project informatie gelezen en begrepen is!',\r\n            value => value === true\r\n        ),\r\n    });\r\n\r\n    function downloadFile(e, id, filename) {\r\n        e.preventDefault();\r\n\r\n        ProjectAPI.documentDownload(project.id, id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, filename);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                onSubmit={function(values, actions) {\r\n                    handleSubmitRegisterValues(values);\r\n                    next();\r\n                }}\r\n                initialValues={initialRegisterValues}\r\n            >\r\n                {({ handleSubmit, touched, errors }) => (\r\n                    <>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <p>\r\n                                        <span\r\n                                            dangerouslySetInnerHTML={{\r\n                                                __html: contactProjectData.textAgreeTermsMerged.replace(\r\n                                                    /\\n/g,\r\n                                                    '<br />'\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"didAcceptAgreement\"\r\n                                        render={({ field }) => (\r\n                                            <label className=\"w-checkbox checkbox-fld\">\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    {...field}\r\n                                                    id=\"did_accept_agreement\"\r\n                                                    checked={field.value}\r\n                                                    className=\"w-checkbox-input checkbox\"\r\n                                                />\r\n                                                <span\r\n                                                    htmlFor=\"did_accept_agreement\"\r\n                                                    className=\"checkbox-label w-form-label\"\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: contactProjectData.textLinkAgreeTermsMerged.replace(\r\n                                                            /\\n/g,\r\n                                                            '<br />'\r\n                                                        ),\r\n                                                    }}\r\n                                                />\r\n                                                {project.documentAgreeTerms ? (\r\n                                                    <>\r\n                                                        {' '}\r\n                                                        <a\r\n                                                            href=\"#\"\r\n                                                            onClick={e =>\r\n                                                                downloadFile(\r\n                                                                    e,\r\n                                                                    project.documentAgreeTerms.id,\r\n                                                                    project.documentAgreeTerms.filename\r\n                                                                )\r\n                                                            }\r\n                                                        >\r\n                                                            <FaFileDownload /> downloaden\r\n                                                        </a>\r\n                                                    </>\r\n                                                ) : null}\r\n                                                {touched[field.name] && errors[field.name] ? (\r\n                                                    <div className={'error-message text-danger'}>\r\n                                                        {errors[field.name]}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </label>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"didUnderstandInfo\"\r\n                                        render={({ field }) => (\r\n                                            <label className=\"w-checkbox checkbox-fld\">\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    {...field}\r\n                                                    id=\"did_understand_info\"\r\n                                                    checked={field.value}\r\n                                                    className=\"w-checkbox-input checkbox\"\r\n                                                />\r\n                                                <span\r\n                                                    htmlFor=\"did_understand_info\"\r\n                                                    className=\"checkbox-label w-form-label\"\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: contactProjectData.textLinkUnderstandInfoMerged.replace(\r\n                                                            /\\n/g,\r\n                                                            '<br />'\r\n                                                        ),\r\n                                                    }}\r\n                                                />\r\n                                                {project.documentUnderstandInfo ? (\r\n                                                    <>\r\n                                                        {' '}\r\n                                                        <a\r\n                                                            href=\"#\"\r\n                                                            onClick={e =>\r\n                                                                downloadFile(\r\n                                                                    e,\r\n                                                                    project.documentUnderstandInfo.id,\r\n                                                                    project.documentUnderstandInfo.filename\r\n                                                                )\r\n                                                            }\r\n                                                        >\r\n                                                            <FaFileDownload /> downloaden\r\n                                                        </a>\r\n                                                    </>\r\n                                                ) : null}{' '}\r\n                                                {touched[field.name] && errors[field.name] ? (\r\n                                                    <div className={'error-message text-danger'}>\r\n                                                        {errors[field.name]}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </label>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={previous}>\r\n                                            Terug\r\n                                        </Button>\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                            {project.usesMollie ? (\r\n                                                <>Ga naar bevestigen en betalen</>\r\n                                            ) : (\r\n                                                <>Ga naar bevestigen</>\r\n                                            )}\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            {!isEmpty(errors) ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                Niet alle verplichte velden zijn ingevuld om verder te gaan naar de\r\n                                                volgende stap!\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                        </Form>\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepThree;\r\n","import React from 'react';\r\nimport Frame from 'react-frame-component';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ViewHtmlAsText = ({ id, value }) => {\r\n    const createMarkup = () => {\r\n        return { __html: value };\r\n    };\r\n\r\n    return (\r\n        <Frame>\r\n            <div id={id} dangerouslySetInnerHTML={createMarkup()} />\r\n        </Frame>\r\n    );\r\n};\r\n\r\nViewHtmlAsText.defaultProps = {\r\n    value: '',\r\n};\r\n\r\nViewHtmlAsText.propTypes = {\r\n    id: PropTypes.string,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nexport default ViewHtmlAsText;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    createParticipantProject: registerValues => {\r\n        const requestUrl = `/project/participant/create`;\r\n\r\n        return axiosInstance.post(requestUrl, registerValues);\r\n    },\r\n\r\n    show: id => {\r\n        const requestUrl = `/project/participant/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n\r\n    participantDocumentDownload: function(participantId, id) {\r\n        const requestUrl = `/project/participant/${participantId}/document/${id}/download`;\r\n\r\n        return axiosInstance.get(requestUrl, { responseType: 'blob' });\r\n    },\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport ViewHtmlAsText from '../../../components/general/ViewHtmlAsText';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ParticipantProjectAPI from '../../../api/participant-project/ParticipantProjectAPI';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { isEmpty } from 'lodash';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction StepFour({ project, contactProjectData, previous, next, registerValues, setSucces }) {\r\n    const [contactDocument, setContactDocument] = useState('');\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        (function callFetchContact() {\r\n            setLoading(true);\r\n            ContactAPI.previewDocument(registerValues)\r\n                .then(payload => {\r\n                    setContactDocument(payload.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                    setLoading(false);\r\n                });\r\n        })();\r\n    }, [registerValues]);\r\n\r\n    function handleSubmitRegisterValues(actions, next) {\r\n        ParticipantProjectAPI.createParticipantProject(registerValues)\r\n            .then(payload => {\r\n                actions.setSubmitting(false);\r\n\r\n                /**\r\n                 * Als Mollie is ingeschakeld voor het project wordt er een betaallink gereturned.\r\n                 * In dat geval huidige scherm verlaten en door naar mollie.\r\n                 */\r\n                if (payload.data.econobisPaymentLink) {\r\n                    window.location.href = payload.data.econobisPaymentLink;\r\n                    return;\r\n                }\r\n\r\n                setSucces(true);\r\n                next();\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met opslaan! Herlaad de pagina opnieuw.');\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        didAgreeRegistration: Yup.bool().test(\r\n            'didAgreeRegistration',\r\n            'Je dient akkoord te gaan met het inschrijfformulier!',\r\n            value => value === true\r\n        ),\r\n    });\r\n\r\n    let contactDocumentOk = false;\r\n    if (!isEmpty('' + contactDocument)) {\r\n        contactDocumentOk = true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : !contactDocumentOk ? (\r\n                <>\r\n                    <Row>\r\n                        <Col>Er ging iets mis bij het maken van het bevestingsformulier voorbeeld.</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={10}>\r\n                            <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                <Button className={'w-button'} size=\"sm\" onClick={previous}>\r\n                                    Terug\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <Formik\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={function(values, actions) {\r\n                        handleSubmitRegisterValues(actions, next);\r\n                    }}\r\n                    initialValues={{ didAgreeRegistration: false }}\r\n                >\r\n                    {({ handleSubmit, touched, errors, isSubmitting, status }) => (\r\n                        <>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <FormLabel className={'field-label'}>Controleer de inschrijving</FormLabel>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <ViewHtmlAsText value={contactDocument} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12} md={3}>\r\n                                        <FormLabel className={'field-label-text'}>\r\n                                            {project.transactionCostsCodeRef === 'none'\r\n                                                ? 'Te betalen bedrag'\r\n                                                : 'Bedrag'}\r\n                                        </FormLabel>\r\n                                    </Col>\r\n                                    <Col xs={12} md={3}>\r\n                                        <TextBlock className={'float-right'}>\r\n                                            {MoneyPresenter(registerValues.amount)}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                </Row>\r\n                                {project.transactionCostsCodeRef !== 'none' ? (\r\n                                    <>\r\n                                        <Row>\r\n                                            <Col xs={12} md={3}>\r\n                                                <FormLabel className={'field-label-text'}>\r\n                                                    {project.textTransactionCosts}\r\n                                                </FormLabel>\r\n                                            </Col>\r\n                                            <Col xs={12} md={3}>\r\n                                                <TextBlock className={'float-right'}>\r\n                                                    {MoneyPresenter(registerValues.transactionCostsAmount)}\r\n                                                </TextBlock>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={12} md={3}>\r\n                                                <FormLabel className={'field-label-text'}>Totaal te betalen</FormLabel>\r\n                                            </Col>\r\n                                            <Col xs={12} md={3}>\r\n                                                <TextBlock className={'float-right'}>\r\n                                                    {MoneyPresenter(registerValues.totalAmount)}\r\n                                                </TextBlock>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </>\r\n                                ) : null}\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <p\r\n                                            dangerouslySetInnerHTML={{\r\n                                                __html: contactProjectData.textAcceptAgreementMerged.replace(\r\n                                                    /\\n/g,\r\n                                                    '<br />'\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <Field\r\n                                            name=\"didAgreeRegistration\"\r\n                                            render={({ field }) => (\r\n                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                    <input\r\n                                                        type=\"checkbox\"\r\n                                                        {...field}\r\n                                                        id=\"did_agree_registration\"\r\n                                                        checked={field.value}\r\n                                                        className=\"w-checkbox-input checkbox\"\r\n                                                    />\r\n                                                    <span\r\n                                                        htmlFor=\"did_agree_registration\"\r\n                                                        className=\"checkbox-label w-form-label\"\r\n                                                    >\r\n                                                        {contactProjectData.textAcceptAgreementQuestionMerged}\r\n                                                    </span>\r\n                                                    {touched[field.name] && errors[field.name] ? (\r\n                                                        <div className={'error-message text-danger'}>\r\n                                                            {errors[field.name]}\r\n                                                        </div>\r\n                                                    ) : null}\r\n                                                </label>\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                            <Button className={'w-button'} size=\"sm\" onClick={previous}>\r\n                                                Terug\r\n                                            </Button>\r\n                                            <Button\r\n                                                className={'w-button'}\r\n                                                size=\"sm\"\r\n                                                onClick={handleSubmit}\r\n                                                disabled={isSubmitting}\r\n                                            >\r\n                                                {isSubmitting ? (\r\n                                                    <span>\r\n                                                        <ClipLoader color={'white'} size={14} />\r\n                                                        Bezig met verwerken\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    <>\r\n                                                        {project.usesMollie ? (\r\n                                                            <>Betaal en bevestig de inschrijving</>\r\n                                                        ) : (\r\n                                                            <>Bevestig inschrijving</>\r\n                                                        )}\r\n                                                    </>\r\n                                                )}\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!isEmpty(errors) ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                    Niet alle verplichte velden zijn ingevuld om verder te gaan naar de\r\n                                                    volgende stap!\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                                {status && status.message ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                    {status.message}\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </Form>\r\n                        </>\r\n                    )}\r\n                </Formik>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StepFour;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form } from 'formik';\r\n\r\nfunction StepFive({ contactProjectData }) {\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col xs={12} md={10}>\r\n                    {contactProjectData.textRegistrationFinishedMerged.split('\\n').map((item, key) => {\r\n                        return (\r\n                            <span key={key}>\r\n                                {item}\r\n                                <br />\r\n                            </span>\r\n                        );\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} md={10}>\r\n                    <ButtonGroup className=\"float-right\">\r\n                        <Link to={`/inschrijvingen-projecten`}>\r\n                            <Button className={'w-button'} size=\"sm\">\r\n                                Naar mijn huidige deelnames\r\n                            </Button>\r\n                        </Link>\r\n                    </ButtonGroup>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepFive;\r\n","import React from 'react';\r\nimport StepOneLoan from './StepOneLoan';\r\nimport StepOneObligation from './StepOneObligation';\r\nimport StepOneCapital from './StepOneCapital';\r\nimport StepOnePcr from './StepOnePcr';\r\nimport StepTwo from './StepTwo';\r\nimport StepThree from './StepThree';\r\nimport StepFour from './StepFour';\r\nimport StepFive from './StepFive';\r\nimport { isEmpty } from 'lodash';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Steps({\r\n    portalSettings,\r\n    currentStep,\r\n    previous,\r\n    next,\r\n    project,\r\n    contactProjectData,\r\n    initialRegisterValues,\r\n    handleSubmitRegisterValues,\r\n    initialContact,\r\n    handleSubmitContactValues,\r\n    setSucces,\r\n}) {\r\n    if (isEmpty(project)) {\r\n        return (\r\n            <Container className={'content-section'}>\r\n                <Row>\r\n                    <Col>\r\n                        <p>Fout bij ophalen project. Inschrijving niet (meer) mogelijk op dit moment.</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    switch (currentStep) {\r\n        case 1:\r\n            switch (project.projectType.codeRef) {\r\n                case 'loan':\r\n                    return (\r\n                        <StepOneLoan\r\n                            next={next}\r\n                            project={project}\r\n                            contactProjectData={contactProjectData}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                case 'obligation':\r\n                    return (\r\n                        <StepOneObligation\r\n                            next={next}\r\n                            project={project}\r\n                            contactProjectData={contactProjectData}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                case 'capital':\r\n                    return (\r\n                        <StepOneCapital\r\n                            next={next}\r\n                            project={project}\r\n                            contactProjectData={contactProjectData}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                case 'postalcode_link_capital':\r\n                    return (\r\n                        <StepOnePcr\r\n                            portalSettings={portalSettings}\r\n                            next={next}\r\n                            project={project}\r\n                            contactProjectData={contactProjectData}\r\n                            initialContact={initialContact}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                default:\r\n                    return null;\r\n            }\r\n\r\n        case 2:\r\n            return (\r\n                <StepTwo\r\n                    portalSettings={portalSettings}\r\n                    previous={previous}\r\n                    next={next}\r\n                    project={project}\r\n                    initialContact={initialContact}\r\n                    handleSubmitContactValues={handleSubmitContactValues}\r\n                />\r\n            );\r\n        case 3:\r\n            return (\r\n                <StepThree\r\n                    project={project}\r\n                    contactProjectData={contactProjectData}\r\n                    previous={previous}\r\n                    next={next}\r\n                    initialRegisterValues={initialRegisterValues}\r\n                    handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                />\r\n            );\r\n        case 4:\r\n            return (\r\n                <StepFour\r\n                    project={project}\r\n                    contactProjectData={contactProjectData}\r\n                    previous={previous}\r\n                    next={next}\r\n                    registerValues={initialRegisterValues}\r\n                    setSucces={setSucces}\r\n                />\r\n            );\r\n        case 5:\r\n            return <StepFive contactProjectData={contactProjectData} />;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport default Steps;\r\n","import React from 'react';\r\nimport Steps from './steps';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction MasterForm({\r\n    portalSettings,\r\n    project,\r\n    contactProjectData,\r\n    initialRegisterValues,\r\n    handleSubmitRegisterValues,\r\n    initialContact,\r\n    handleSubmitContactValues,\r\n    setSucces,\r\n}) {\r\n    const [currentStep, setStep] = React.useState(1);\r\n\r\n    function previous() {\r\n        setStep(currentStep <= 2 ? 1 : currentStep - 1);\r\n    }\r\n\r\n    function next() {\r\n        setStep(currentStep >= 4 ? 5 : currentStep + 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {currentStep <= 4 ? (\r\n                <Row className={'mb-4'}>\r\n                    <Col>\r\n                        <div className={'arrow-steps clearfix'}>\r\n                            <div className={`step ${currentStep === 1 ? 'current' : ''}`}>1. Inschrijven</div>\r\n                            <div className={`step ${currentStep === 2 ? 'current' : ''}`}>2. Gegevens</div>\r\n                            <div className={`step ${currentStep === 3 ? 'current' : ''}`}>3. Voorwaarden</div>\r\n                            <div className={`step ${currentStep === 4 ? 'current' : ''}`}>\r\n                                {\r\n                                    project.usesMollie ? (\r\n                                        <>4. Bevestigen en betalen</>\r\n                                    ) : (\r\n                                        <>4. Bevestigen</>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            ) : null}\r\n            <Steps\r\n                portalSettings={portalSettings}\r\n                currentStep={currentStep}\r\n                previous={previous}\r\n                next={next}\r\n                project={project}\r\n                contactProjectData={contactProjectData}\r\n                initialRegisterValues={initialRegisterValues}\r\n                handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                initialContact={initialContact}\r\n                handleSubmitContactValues={handleSubmitContactValues}\r\n                setSucces={setSucces}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MasterForm;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ProjectAPI from '../../api/project/ProjectAPI';\r\nimport LoadingView from '../../components/general/LoadingView';\r\nimport ContactAPI from '../../api/contact/ContactAPI';\r\nimport rebaseContact from '../../helpers/RebaseContact';\r\nimport { PortalUserConsumer } from '../../context/PortalUserContext';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport MasterForm from './MasterForm';\r\nimport PortalSettingsAPI from '../../api/portal-settings/PortalSettingsAPI';\r\nimport axios from 'axios';\r\nimport { ThemeSettingsContext } from '../../context/ThemeSettingsContext';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction RegisterProject({ match, currentSelectedContact }) {\r\n    const { setCurrentThemeSettings } = useContext(ThemeSettingsContext);\r\n\r\n    const initialRegisterValues = {\r\n        contactId: null,\r\n        projectId: null,\r\n        participationsOptioned: 0,\r\n        powerKwhConsumption: 0,\r\n        amountOptioned: 0,\r\n        didAcceptAgreement: false,\r\n        didUnderstandInfo: false,\r\n        choiceMembership: 0,\r\n    };\r\n\r\n    const initialPcrValues = {\r\n        pcrYearlyPowerKwhConsumption: 0,\r\n        pcrPostalCode: '',\r\n        pcrHasSolarPanels: 'N',\r\n        pcrInputGeneratedNumberOfKwh: 0,\r\n        pcrEstimatedRevenueOk: 'Y',\r\n    };\r\n\r\n    const [registerValues, setRegisterValues] = useState(initialRegisterValues);\r\n\r\n    const [project, setProject] = useState({});\r\n    const [contact, setContact] = useState({});\r\n    const [portalSettings, setPortalSettings] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [isSucces, setSucces] = useState(false);\r\n    const [contactProjectData, setContactProjectData] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (currentSelectedContact.id) {\r\n            (function fetchContactAndProject() {\r\n                setLoading(true);\r\n\r\n                axios\r\n                    .all([\r\n                        ProjectAPI.fetchProject(match.params.id),\r\n                        ContactAPI.fetchContact(currentSelectedContact.id),\r\n                        ContactAPI.fetchContactProjectData(currentSelectedContact.id, match.params.id),\r\n                    ])\r\n                    .then(\r\n                        axios.spread((payloadProject, payloadContact, payloadContactProjectData) => {\r\n                            const contact = payloadContact.data.data;\r\n                            const project = payloadProject.data.data;\r\n                            setProject(project);\r\n                            setCurrentThemeSettings(project.administration.portalSettingsLayoutAssigned);\r\n                            const contactData = rebaseContact(contact);\r\n                            setContact(contactData);\r\n\r\n                            setContactProjectData(payloadContactProjectData.data);\r\n\r\n                            if (\r\n                                project &&\r\n                                project.projectType &&\r\n                                project.projectType.codeRef === 'postalcode_link_capital'\r\n                            ) {\r\n                                let pcrPostalCode = '';\r\n                                if (contactData.typeId === 'organisation') {\r\n                                    pcrPostalCode = contactData.visitAddress ? contactData.visitAddress.postalCode : '';\r\n                                } else {\r\n                                    pcrPostalCode = contactData.primaryAddress\r\n                                        ? contactData.primaryAddress.postalCode\r\n                                        : '';\r\n                                }\r\n                                setRegisterValues({\r\n                                    ...registerValues,\r\n                                    projectId: match.params.id,\r\n                                    contactId: currentSelectedContact.id,\r\n                                    // choiceMembership: payloadContactProjectData.data.belongsToMembershipGroup ? 0 : 1,\r\n                                    ...initialPcrValues,\r\n                                    pcrPostalCode,\r\n                                });\r\n                            } else {\r\n                                setRegisterValues({\r\n                                    ...registerValues,\r\n                                    projectId: match.params.id,\r\n                                    contactId: currentSelectedContact.id,\r\n                                    // choiceMembership: payloadContactProjectData.data.belongsToMembershipGroup ? 0 : 1,\r\n                                });\r\n                            }\r\n\r\n                            if (\r\n                                payloadContactProjectData.data.projectRegisterIndicators.allowChangeParticipation &&\r\n                                payloadContactProjectData.data.projectRegisterIndicators.allowPayMollie\r\n                            ) {\r\n                                /**\r\n                                 * Er is wel ingeschreven maar nog niet betaald, dan mag het formulier\r\n                                 * wel geopend worden en stellen we de eerder ingevoerde gegevens in. projectRegisterIndicators\r\n                                 */\r\n                                setRegisterValues(current => {\r\n                                    return {\r\n                                        ...current,\r\n                                        participationsOptioned:\r\n                                            payloadContactProjectData.data.projectRegisterIndicators\r\n                                                .participationsOptioned,\r\n                                        amountOptioned:\r\n                                            payloadContactProjectData.data.projectRegisterIndicators.amountOptioned,\r\n                                        pcrYearlyPowerKwhConsumption:\r\n                                            payloadContactProjectData.data.projectRegisterIndicators\r\n                                                .powerKwhConsumption,\r\n                                        didAcceptAgreement: true,\r\n                                        didUnderstandInfo: true,\r\n                                    };\r\n                                });\r\n                            }\r\n\r\n                            setLoading(false);\r\n                        })\r\n                    )\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setLoading(false);\r\n                    });\r\n            })();\r\n        }\r\n\r\n        (function callFetchPortalSettings() {\r\n            setLoading(true);\r\n            const keys =\r\n                '?keys[]=portalName' +\r\n                '&keys[]=portalWebsite' +\r\n                '&keys[]=portalUrl' +\r\n                '&keys[]=responsibleUserId' +\r\n                '&keys[]=checkContactTaskResponsibleUserId' +\r\n                '&keys[]=linkPrivacyPolicy' +\r\n                '&keys[]=pcrPowerKwhConsumptionPercentage' +\r\n                '&keys[]=pcrGeneratingCapacityOneSolorPanel';\r\n            PortalSettingsAPI.fetchPortalSettings(keys)\r\n                .then(payload => {\r\n                    setPortalSettings({ ...payload.data });\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ isLoading: false, hasError: true });\r\n                });\r\n        })();\r\n    }, [match, currentSelectedContact]);\r\n\r\n    function handleSubmitRegisterValues(values) {\r\n        setRegisterValues({ ...registerValues, ...values });\r\n    }\r\n\r\n    function handleSubmitContactValues(values, actions, nextStep) {\r\n        const updatedContact = { ...contact, ...values, projectId: project.id };\r\n        ContactAPI.updateContact(updatedContact)\r\n            .then(payload => {\r\n                ContactAPI.fetchContact(currentSelectedContact.id)\r\n                    .then(payload => {\r\n                        const contactData = rebaseContact(payload.data.data);\r\n\r\n                        setContact(contactData);\r\n                        nextStep();\r\n                    })\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setLoading(false);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                actions.setStatus({\r\n                    message: error.response.data.message,\r\n                });\r\n                // alert('Er is iets misgegaan met opslaan! Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : !contactProjectData.projectRegisterIndicators.hasParticipation &&\r\n              !contactProjectData.projectRegisterIndicators.allowRegisterToProject ? (\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">\r\n                                Inschrijving voor project <strong>{project.name}</strong>\r\n                            </h1>\r\n                            <Row className={'mb-4'}>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            {contactProjectData.projectRegisterIndicators.textNotAllowedRegisterToProject\r\n                                                .split('<br />')\r\n                                                .map((item, key) => {\r\n                                                    return (\r\n                                                        <span key={key}>\r\n                                                            {item}\r\n                                                            <br />\r\n                                                        </span>\r\n                                                    );\r\n                                                })}\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={10}>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Link to={`/inschrijvingen-projecten`}>\r\n                                    <Button className={'w-button'} size=\"sm\">\r\n                                        Naar huidige deelnames\r\n                                    </Button>\r\n                                </Link>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            ) : contactProjectData.projectRegisterIndicators.hasParticipation &&\r\n              !contactProjectData.projectRegisterIndicators.allowChangeParticipation ? (\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">\r\n                                <strong>{contact.fullNameFnf}</strong> is al ingeschreven voor project{' '}\r\n                                <strong>{project.name}</strong>\r\n                            </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={10}>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Link to={`/inschrijvingen-projecten`}>\r\n                                    <Button className={'w-button'} size=\"sm\">\r\n                                        Naar huidige deelnames\r\n                                    </Button>\r\n                                </Link>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <Row>\r\n                    <Col>\r\n                        {isSucces ? (\r\n                            <h1 className=\"content-heading\">\r\n                                Ingeschreven voor project <strong>{project.name}</strong>\r\n                            </h1>\r\n                        ) : (\r\n                            <>\r\n                                <Row>\r\n                                    <ButtonGroup aria-label=\"register\" className=\"w-button-group-left\">\r\n                                        <Link to={`/inschrijven-projecten`}>\r\n                                            <Button className={'w-button'} size=\"sm\">\r\n                                                Inschrijven projecten\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </ButtonGroup>\r\n                                </Row>\r\n                                <h1 className=\"content-heading\">\r\n                                    Schrijf <strong>{contact.fullNameFnf}</strong> in voor project{' '}\r\n                                    <strong>{project.name}</strong>\r\n                                </h1>\r\n                            </>\r\n                        )}\r\n                        <MasterForm\r\n                            portalSettings={portalSettings}\r\n                            project={project}\r\n                            contactProjectData={contactProjectData}\r\n                            initialRegisterValues={registerValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                            initialContact={contact}\r\n                            handleSubmitContactValues={handleSubmitContactValues}\r\n                            setSucces={setSucces}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function RegisterProjectWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact }) => (\r\n                <RegisterProject {...props} currentSelectedContact={currentSelectedContact} />\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaPersonal from './../../../../helpers/ValidationSchemaPersonal';\r\nimport { isEmpty } from 'lodash';\r\nimport { Alert } from 'react-bootstrap';\r\nimport InputText from '../../../../components/form/InputText';\r\nimport { Field } from 'formik';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PersonalAddressEdit({ initialContact, handleSubmitContactAddressValues }) {\r\n    const validationSchema = ValidationSchemaPersonal.validationSchemaPostalCodeAndNumber;\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialContact}\r\n                enableReinitialize={true}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    actions.setSubmitting(true);\r\n                    handleSubmitContactAddressValues(values, actions);\r\n                }}\r\n                render={({ errors, touched, setFieldValue, isSubmitting, status, values, handleSubmit }) => {\r\n                    return (\r\n                        <Form>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            Op dit moment zijn je adresgegevens nog niet bij ons bekend.\r\n                                            <br />\r\n                                            Er zijn projecten waarop je kan inschrijven die afhankelijk van je adres\r\n                                            zijn.\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={12}>\r\n                                    <FormLabel className={'field-label'}>Postcode en huisnummer</FormLabel>\r\n                                    <Row>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"primaryAddress.postalCode\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"postal_code\"\r\n                                                        placeholder={'Postcode'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"primaryAddress.number\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"street_number\"\r\n                                                        placeholder={'Nummer'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"primaryAddress.addition\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"addition\"\r\n                                                        placeholder={'Toevoeging'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup aria-label=\"address-person\" className=\"float-right\">\r\n                                        <Link to={`/`}>\r\n                                            <Button variant={'outline-dark'} size=\"sm\">\r\n                                                Annuleren\r\n                                            </Button>\r\n                                        </Link>\r\n                                        <Button\r\n                                            className={'w-button'}\r\n                                            size=\"sm\"\r\n                                            onClick={handleSubmit}\r\n                                            disabled={isSubmitting}\r\n                                        >\r\n                                            {isSubmitting ? (\r\n                                                <span>\r\n                                                    <ClipLoader color={'white'} size={14} />\r\n                                                    Bezig met opslaan\r\n                                                </span>\r\n                                            ) : (\r\n                                                'Opslaan'\r\n                                            )}\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            {!isEmpty(errors) ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                Niet alle verplichte velden zijn (juist) ingevuld!\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                            {status && status.message ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                {status.message}\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                        </Form>\r\n                    );\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalAddressEdit;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaOrganisation from '../../../../helpers/ValidationSchemaOrganisation';\r\nimport { isEmpty } from 'lodash';\r\nimport { Alert } from 'react-bootstrap';\r\nimport InputText from '../../../../components/form/InputText';\r\nimport { Field } from 'formik';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction OrganisationAddressEdit({ initialContact, handleSubmitContactAddressValues }) {\r\n    const validationSchema = ValidationSchemaOrganisation.validationSchemaPostalCodeAndNumber;\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialContact}\r\n                enableReinitialize={true}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    actions.setSubmitting(true);\r\n                    handleSubmitContactAddressValues(values, actions);\r\n                }}\r\n                render={({ errors, touched, setFieldValue, isSubmitting, status, values, handleSubmit }) => {\r\n                    return (\r\n                        <Form>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            Op dit moment zijn je adresgegevens nog niet bij ons bekend.\r\n                                            <br />\r\n                                            Er zijn projecten waarop je kan inschrijven die afhankelijk van je adres\r\n                                            zijn.\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={12}>\r\n                                    <FormLabel className={'field-label'}>Postcode en huisnummer</FormLabel>\r\n                                    <Row>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"visitAddress.postalCode\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"postal_code\"\r\n                                                        placeholder={'Postcode'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"visitAddress.number\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"street_number\"\r\n                                                        placeholder={'Nummer'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"visitAddress.addition\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"addition\"\r\n                                                        placeholder={'Toevoeging'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup aria-label=\"address-organistation\" className=\"float-right\">\r\n                                        <Link to={`/`}>\r\n                                            <Button variant={'outline-dark'} size=\"sm\">\r\n                                                Annuleren\r\n                                            </Button>\r\n                                        </Link>\r\n                                        <Button\r\n                                            className={'w-button'}\r\n                                            size=\"sm\"\r\n                                            onClick={handleSubmit}\r\n                                            disabled={isSubmitting}\r\n                                        >\r\n                                            {isSubmitting ? (\r\n                                                <span>\r\n                                                    <ClipLoader color={'white'} size={14} />\r\n                                                    Bezig met opslaan\r\n                                                </span>\r\n                                            ) : (\r\n                                                'Opslaan'\r\n                                            )}\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            {!isEmpty(errors) ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                Niet alle verplichte velden zijn (juist) ingevuld!\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                            {status && status.message ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                {status.message}\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                        </Form>\r\n                    );\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrganisationAddressEdit;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table';\r\nimport moment from 'moment';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport { PortalUserConsumer } from '../../../context/PortalUserContext';\r\nimport { FaInfoCircle } from 'react-icons/fa';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport rebaseContact from '../../../helpers/RebaseContact';\r\nimport PersonalAddressEdit from './address-person/Edit';\r\nimport OrganisationAddressEdit from './address-organisation/Edit';\r\n\r\nfunction ProjectList(props) {\r\n    const [contact, setContact] = useState({});\r\n    const [contactProjectsArray, setContactProjectsArray] = useState([]);\r\n    const [sceOrPcrProjectsAvailable, setSceOrPcrProjectsAvailable] = useState(false);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const prevCurrentSelectedContact = usePrevious(props.currentSelectedContact);\r\n\r\n    useEffect(() => {\r\n        (function callFetchProjects() {\r\n            setLoading(true);\r\n            // Call Api if current selected contact id is filled\r\n            if (props.currentSelectedContact.id) {\r\n                // If there is no previous selected contact OR previous selected contact is not the same as current selected contact\r\n                if (!prevCurrentSelectedContact || prevCurrentSelectedContact.id != props.currentSelectedContact.id) {\r\n                    callFetchContact();\r\n                    callFetchContactProjects();\r\n                }\r\n            }\r\n        })();\r\n    }, [props.currentSelectedContact]);\r\n\r\n    useEffect(() => {\r\n        (function determineSceOrPcrProjectsAvailable() {\r\n            if (contactProjectsArray.length > 0) {\r\n                contactProjectsArray.find(function(project) {\r\n                    return project.isSceOrPcrProject && setSceOrPcrProjectsAvailable(true);\r\n                });\r\n            }\r\n        })();\r\n    }, [contactProjectsArray.length > 0]);\r\n\r\n    function callFetchContact() {\r\n        setLoading(true);\r\n        ContactAPI.fetchContact(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                const contactData = rebaseContact(payload.data.data);\r\n\r\n                setContact(contactData);\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function callFetchContactProjects() {\r\n        ContactAPI.fetchContactProjects(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                setContactProjectsArray(payload.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function usePrevious(value) {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    function handleSubmitContactAddressValues(values, actions) {\r\n        const updatedContact = { ...contact, ...values, projectId: null };\r\n        ContactAPI.updateContact(updatedContact)\r\n            .then(payload => {\r\n                actions.setSubmitting(false);\r\n                callFetchContact();\r\n                callFetchContactProjects();\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                actions.setStatus({\r\n                    message: error.response.data.message,\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"content-heading\">\r\n                        Overzicht projecten waarop <strong>{props.currentSelectedContact.fullNameFnf}</strong> kan\r\n                        inschrijven.\r\n                    </h1>\r\n                </Col>\r\n            </Row>\r\n            {sceOrPcrProjectsAvailable && contact.noAddressesFound && contact.typeId === 'person' ? (\r\n                <PersonalAddressEdit\r\n                    initialContact={contact}\r\n                    handleSubmitContactAddressValues={handleSubmitContactAddressValues}\r\n                />\r\n            ) : sceOrPcrProjectsAvailable && contact.noAddressesFound && contact.typeId === 'organisation' ? (\r\n                <OrganisationAddressEdit\r\n                    initialContact={contact}\r\n                    handleSubmitContactAddressValues={handleSubmitContactAddressValues}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <p>Klik op het project voor meer details.</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isLoading ? (\r\n                                <LoadingView />\r\n                            ) : contactProjectsArray.length === 0 ? (\r\n                                'Geen projecten beschikbaar om op in te schrijven.'\r\n                            ) : (\r\n                                <Table responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Organisatie</th>\r\n                                            <th>Project</th>\r\n                                            <th>Ingeschreven</th>\r\n                                            <th>Start inschrijving</th>\r\n                                            <th>Einde inschrijving</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {contactProjectsArray.map(project => (\r\n                                            <tr key={project.id}>\r\n                                                <td>{project.administrationName}</td>\r\n                                                <td>\r\n                                                    {project.allowChangeParticipation ? (\r\n                                                        <>\r\n                                                            {project.name} (\r\n                                                            <Link to={`/project/${project.id}`}>\r\n                                                                wijzig inschrijving\r\n                                                            </Link>\r\n                                                            )\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            {!project.hasParticipation &&\r\n                                                            project.allowRegisterToProject ? (\r\n                                                                <Link to={`/project/${project.id}`}>\r\n                                                                    {project.name}\r\n                                                                </Link>\r\n                                                            ) : (\r\n                                                                <span className={'text-muted'}>{project.name}</span>\r\n                                                            )}\r\n                                                        </>\r\n                                                    )}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {project.hasParticipation ? (\r\n                                                        <>\r\n                                                            {project.allowPayMollie ? (\r\n                                                                <div className=\"text-center\">\r\n                                                                    Nog niet betaald,\r\n                                                                    <br />\r\n                                                                    <a href={project.econobisPaymentLink}>betaal nu</a>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                <div className=\"text-success text-center\">✔</div>\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <div className=\"text-center\">\r\n                                                            {!project.allowRegisterToProject ? (\r\n                                                                <>\r\n                                                                    <FaInfoCircle\r\n                                                                        color={'blue'}\r\n                                                                        size={'15px'}\r\n                                                                        data-tip={`${project.textNotAllowedRegisterToProject}`}\r\n                                                                        data-for={`project-${project.id}`}\r\n                                                                    />\r\n                                                                    <ReactTooltip\r\n                                                                        id={`project-${project.id}`}\r\n                                                                        effect=\"float\"\r\n                                                                        place=\"bottom\"\r\n                                                                        multiline={true}\r\n                                                                        aria-haspopup=\"true\"\r\n                                                                    />\r\n                                                                </>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {project.dateStartRegistrations\r\n                                                        ? moment(project.dateStartRegistrations).format('LL')\r\n                                                        : ''}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {project.dateEndRegistrations\r\n                                                        ? moment(project.dateEndRegistrations).format('LL')\r\n                                                        : ''}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function ProjectListWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact }) => <ProjectList {...props} currentSelectedContact={currentSelectedContact} />}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction LoanDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                    <FormLabel>Lening nodig</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.amountOfLoanNeeded)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal bedrag per contact</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.minAmountLoan)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal bedrag per contact</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.maxAmountLoan)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanDetails;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction ObligationDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Huidige hoofdsom per obligatie</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Aantal obligaties nodig</FormLabel>\r\n                    <TextBlock>{project.totalParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal aantal obligaties per contact</FormLabel>\r\n                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal aantal obligaties per contact</FormLabel>\r\n                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ObligationDetails;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction CapitalDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Huidige boekwaarde per participatie</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Aantal participaties nodig</FormLabel>\r\n                    <TextBlock>{project.totalParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CapitalDetails;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction PcrDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Huidige boekwaarde per participatie</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Aantal participaties nodig</FormLabel>\r\n                    <TextBlock>{project.totalParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PcrDetails;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ProjectAPI from '../../../api/project/ProjectAPI';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport LoanDetails from './LoanDetails';\r\nimport ObligationDetails from './ObligationDetails';\r\nimport CapitalDetails from './CapitalDetails';\r\nimport PcrDetails from './PcrDetails';\r\nimport { ThemeSettingsContext } from '../../../context/ThemeSettingsContext';\r\nimport { PortalUserContext } from '../../../context/PortalUserContext';\r\nimport { isEmpty } from 'lodash';\r\nimport fileDownload from 'js-file-download';\r\nimport { FaFileDownload } from 'react-icons/all';\r\n\r\nfunction ProjectDetails({ match }) {\r\n    const { setCurrentThemeSettings } = useContext(ThemeSettingsContext);\r\n    const { currentSelectedContact } = useContext(PortalUserContext);\r\n    const [project, setProject] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (currentSelectedContact.id) {\r\n            (function callFetchProject() {\r\n                setLoading(true);\r\n                ProjectAPI.fetchProject(match.params.id)\r\n                    .then(payload => {\r\n                        setProject(payload.data.data);\r\n                        setCurrentThemeSettings(payload.data.data.administration.portalSettingsLayoutAssigned);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setLoading(false);\r\n                    });\r\n            })();\r\n        }\r\n    }, [match, currentSelectedContact]);\r\n\r\n    function downloadFile(e, id, filename) {\r\n        e.preventDefault();\r\n\r\n        ProjectAPI.documentDownload(project.id, id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, filename);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    function renderDetails() {\r\n        switch (project.projectType.codeRef) {\r\n            case 'loan':\r\n                return <LoanDetails project={project} />;\r\n            case 'obligation':\r\n                return <ObligationDetails project={project} />;\r\n            case 'capital':\r\n                return <CapitalDetails project={project} />;\r\n            case 'postalcode_link_capital':\r\n                return <PcrDetails project={project} />;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    if (isEmpty(project)) {\r\n        return (\r\n            <Container className={'content-section'}>\r\n                {isLoading ? (\r\n                    <LoadingView />\r\n                ) : (\r\n                    <Row>\r\n                        <Col>\r\n                            <p>Geen projectdetails bekend</p>\r\n                        </Col>\r\n                    </Row>\r\n                )}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        <ButtonGroup aria-label=\"project-details\" className=\"w-button-group-left\">\r\n                            <Link to={`/inschrijven-projecten`}>\r\n                                <Button className={'w-button'} size=\"sm\">\r\n                                    Inschrijven projecten\r\n                                </Button>\r\n                            </Link>\r\n                        </ButtonGroup>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">Inschrijven project</h1>\r\n                            <div className=\"content-subheading\">Organisatie {project.administration.name}</div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {renderDetails()}\r\n\r\n                    <Row className={'mt-5'}>\r\n                        <Col>\r\n                            <p>\r\n                                {project.documentProjectInfo ? (\r\n                                    <>\r\n                                        {'Meer informatie over dit project kan je hier '}\r\n                                        <a\r\n                                            href=\"#\"\r\n                                            onClick={e =>\r\n                                                downloadFile(\r\n                                                    e,\r\n                                                    project.documentProjectInfo.id,\r\n                                                    project.documentProjectInfo.filename\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <FaFileDownload /> downloaden\r\n                                        </a>\r\n                                    </>\r\n                                ) : project.linkProjectInfo != null ? (\r\n                                    <>\r\n                                        {'Meer informatie over dit project vind je '}\r\n                                        <a href={`${project.linkProjectInfo}`} target=\"_blank\">\r\n                                            hier\r\n                                        </a>\r\n                                    </>\r\n                                ) : null}\r\n                            </p>\r\n                            <p>Wil je inschrijven op dit project. Klik dan op \"Ga naar inschrijven\".</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Link to={`/inschrijven/${project.id}`}>\r\n                                    <Button className={'w-button'} size=\"sm\">\r\n                                        Ga naar inschrijven\r\n                                    </Button>\r\n                                </Link>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProjectDetails;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport { PortalUserConsumer } from '../../../context/PortalUserContext';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction RegistrationList(props) {\r\n    const [contact, setContact] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n    const prevCurrentSelectedContact = usePrevious(props.currentSelectedContact);\r\n\r\n    useEffect(() => {\r\n        // Call Api if current selected contact id is filled\r\n        if (props.currentSelectedContact.id) {\r\n            // If there is no previous selected contact OR previous selected contact is not the same as current selected contact\r\n            if (!prevCurrentSelectedContact || prevCurrentSelectedContact.id != props.currentSelectedContact.id) {\r\n                callFetchContact();\r\n            }\r\n        }\r\n    }, [props.currentSelectedContact]);\r\n\r\n    function callFetchContact() {\r\n        setLoading(true);\r\n        ContactAPI.fetchContactWithParticipants(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                setContact(payload.data.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function usePrevious(value) {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"content-heading\">\r\n                        De projecten waarin <strong>{contact.fullNameFnf}</strong> deelneemt.\r\n                    </h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {isLoading ? (\r\n                        <LoadingView />\r\n                    ) : contact.participations.length === 0 ? (\r\n                        'Geen huidige deelnames aanwezig.'\r\n                    ) : (\r\n                        <Table responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Organisatie</th>\r\n                                    <th>Project</th>\r\n                                    <th>Deelname</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {contact.participations.map(participation => {\r\n                                    if (\r\n                                        !participation.project.dateEnd ||\r\n                                        moment(participation.project.dateEnd).format('YYYY-MM-DD') >=\r\n                                            moment().format('YYYY-MM-DD')\r\n                                    ) {\r\n                                        return (\r\n                                            <tr key={participation.id}>\r\n                                                <td>{participation.project.administration.name}</td>\r\n                                                <td>\r\n                                                    <Link to={`/project-deelname/${participation.id}`}>\r\n                                                        {participation.project.name}\r\n                                                    </Link>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {participation.project.projectType.codeRef == 'loan' ? (\r\n                                                        <>\r\n                                                            {participation.amountInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening{' '}\r\n                                                                    {MoneyPresenter(participation.amountInteressed)}{' '}\r\n                                                                    <em>(Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.amountOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening{' '}\r\n                                                                    {MoneyPresenter(participation.amountOptioned)}{' '}\r\n                                                                    <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.amountGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening {MoneyPresenter(participation.amountGranted)}{' '}\r\n                                                                    <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.amountDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening{' '}\r\n                                                                    {MoneyPresenter(participation.amountDefinitive)}{' '}\r\n                                                                    <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n\r\n                                                    {participation.project.projectType.codeRef == 'obligation' ? (\r\n                                                        <>\r\n                                                            {participation.participationsInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsInteressed}\r\n                                                                    {' obligaties '} <em> (Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsOptioned}\r\n                                                                    {' obligaties '} <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsGranted}\r\n                                                                    {' obligaties '} <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsDefinitive}\r\n                                                                    {' obligaties '}\r\n                                                                    <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n\r\n                                                    {participation.project.projectType.codeRef == 'capital' ? (\r\n                                                        <>\r\n                                                            {participation.participationsInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsInteressed}\r\n                                                                    {' participaties '} <em>(Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsOptioned}\r\n                                                                    {' participaties '} <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsGranted}\r\n                                                                    {' participaties '} <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsDefinitive}\r\n                                                                    {' participaties '} <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n\r\n                                                    {participation.project.projectType.codeRef ==\r\n                                                    'postalcode_link_capital' ? (\r\n                                                        <>\r\n                                                            {participation.participationsInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsInteressed}\r\n                                                                    {' participaties '} <em>(Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsOptioned}\r\n                                                                    {' participaties '} <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsGranted}\r\n                                                                    {' participaties '} <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsDefinitive}\r\n                                                                    {' participaties '} <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    }\r\n                                    return null;\r\n                                })}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function RegistrationListWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact }) => (\r\n                <RegistrationList {...props} currentSelectedContact={currentSelectedContact} />\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Titles from '../../../data/Titles';\r\nimport LastNamePrefixes from '../../../data/LastNamePrefixes';\r\nimport Select from '../../../components/form/Select';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n    personFirstName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n    personLastName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst NewAccountFormPersonal = ({ handleSubmit, showSuccessMessage }) => (\r\n    <Formik\r\n        initialValues={{\r\n            email: '',\r\n            personTitleId: '',\r\n            personFirstName: '',\r\n            personLastName: '',\r\n        }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'authorization-text'}>Account aanmaken voor jezelf</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'authorization-text'}>Gegevens</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personTitleId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"title_id\"\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Aanhef'}\r\n                                    options={Titles}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personFirstName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"first_name-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'Voornaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personLastNamePrefixId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name_prefix_id\"\r\n                                    options={LastNamePrefixes}\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Tussenvoegsel'}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Field\r\n                            name=\"personLastName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'Achternaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"email-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'E-mailadres'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <ButtonGroup aria-label=\"create-account\" className=\"w-button-group\">\r\n                            <ButtonText\r\n                                buttonText={'Account aanmaken'}\r\n                                buttonClassName={'authorization-button'}\r\n                                size=\"sm\"\r\n                                type={'submit'}\r\n                                loading={isSubmitting}\r\n                                loadingSpinnerColor={'#034b8c'}\r\n                                disabled={showSuccessMessage}\r\n                            />\r\n                        </ButtonGroup>\r\n                    </Row>\r\n                </>\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default NewAccountFormPersonal;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Titles from '../../../data/Titles';\r\nimport LastNamePrefixes from '../../../data/LastNamePrefixes';\r\nimport Select from '../../../components/form/Select';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n    organisationName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n    personFirstName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n    personLastName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst NewAccountFormOrganisation = ({ handleSubmit, showSuccessMessage }) => (\r\n    <Formik\r\n        initialValues={{ email: '', organisationName: '', personTitleId: '', personFirstName: '', personLastName: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'authorization-text'}>Account aanmaken voor je organisatie</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"organisationName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"name-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'Naam Organisatie'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'authorization-text'}>Gegevens contactpersoon</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personTitleId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"title_id\"\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Aanhef'}\r\n                                    options={Titles}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personFirstName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"first_name-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'Voornaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personLastNamePrefixId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name_prefix_id\"\r\n                                    options={LastNamePrefixes}\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Tussenvoegsel'}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Field\r\n                            name=\"personLastName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'Achternaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"email-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'E-mailadres'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <ButtonText\r\n                            buttonText={'Account aanmaken'}\r\n                            buttonClassName={'authorization-button'}\r\n                            size=\"sm\"\r\n                            type={'submit'}\r\n                            loading={isSubmitting}\r\n                            loadingSpinnerColor={'#034b8c'}\r\n                            disabled={showSuccessMessage}\r\n                        />\r\n                    </Row>\r\n                </>\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default NewAccountFormOrganisation;\r\n","import React, { useState } from 'react';\r\nimport { GoogleReCaptchaProvider, useGoogleReCaptcha } from 'react-google-recaptcha-v3';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport NewAccountFormPersonal from './NewAccountFormPersonal';\r\nimport NewAccountFormOrganisation from './NewAccountFormOrganisation';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nconst NewAccount = props => {\r\n    const { executeRecaptcha } = useGoogleReCaptcha();\r\n    const [contactType, setContactType] = useState('person');\r\n    const [showError, toggleError] = useState(false);\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [redirectToReferrer, toggleRedirect] = useState(false);\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    async function handleSubmit(values, actions) {\r\n        if (!executeRecaptcha) {\r\n            return;\r\n        }\r\n        const reCaptchaToken = await executeRecaptcha('signup_page');\r\n\r\n        AuthAPI.newAccount({ ...values, contactType: contactType, reCaptchaToken })\r\n            .then(payload => {\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                // If new account fails show error and then set submitting back to false\r\n                toggleError(true);\r\n                if (error.response && error.response.status === 404) {\r\n                    setErrorMessage(\r\n                        'Er bestaat al een account met het e-mailadres dat je hebt ingevuld. Je kunt met dit e-mailadres inloggen als bestaand contact. Wil je een nieuw account aanmaken? Gebruik dan alsjeblieft een ander e-mailadres.'\r\n                    );\r\n                } else if (error.response && error.response.status === 405) {\r\n                    setErrorMessage(\r\n                        'Er bestaat al een contact met het e-mailadres, voornaam en achternaam dat je hebt ingevuld. Wil je een nieuw account aanmaken? Gebruik dan alsjeblieft een ander e-mailadres, voornaam of achternaam.'\r\n                    );\r\n                } else {\r\n                    setErrorMessage('Fout bij aanmaken nieuw account!');\r\n                }\r\n\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect(from) {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {redirectToReferrer && !showSuccessMessage ? (\r\n                redirect('/dashboard')\r\n            ) : (\r\n                <div className=\"authorization-container\">\r\n                    <Container fluid className=\"authorization-text\">\r\n                        <Row className=\"justify-content-center align-content-start align-content-lg-center full-height p-2\">\r\n                            <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\r\n                                <img\r\n                                    src={`images/logo.png?${imageHash}`}\r\n                                    alt=\"\"\r\n                                    className=\"image logo-container-small\"\r\n                                />\r\n\r\n                                {showSuccessMessage ? (\r\n                                    redirect('nieuw-account-succes')\r\n                                ) : (\r\n                                    <>\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <h3 className={'authorization-text'}>Nieuw account</h3>\r\n                                        </Row>\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <p className={'authorization-text'}>\r\n                                                Maak binnen 2 minuten een account aan.\r\n                                            </p>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <ButtonToolbar toggle>\r\n                                                <Col>\r\n                                                    <Button\r\n                                                        className={'authorization-button'}\r\n                                                        variant={\r\n                                                            contactType === 'person'\r\n                                                                ? 'primary fixed-height'\r\n                                                                : 'light fixed-height'\r\n                                                        }\r\n                                                        block\r\n                                                        onClick={() => setContactType('person')}\r\n                                                    >\r\n                                                        Voor jezelf\r\n                                                    </Button>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Button\r\n                                                        className={'authorization-button'}\r\n                                                        variant={contactType === 'organisation' ? 'primary' : 'light'}\r\n                                                        block\r\n                                                        onClick={() => setContactType('organisation')}\r\n                                                    >\r\n                                                        Voor je organisatie\r\n                                                    </Button>\r\n                                                </Col>\r\n                                            </ButtonToolbar>\r\n                                        </Row>\r\n                                        <br />\r\n\r\n                                        {contactType === 'person' ? (\r\n                                            <NewAccountFormPersonal\r\n                                                handleSubmit={handleSubmit}\r\n                                                showSuccessMessage={showSuccessMessage}\r\n                                            />\r\n                                        ) : (\r\n                                            <NewAccountFormOrganisation\r\n                                                handleSubmit={handleSubmit}\r\n                                                showSuccessMessage={showSuccessMessage}\r\n                                            />\r\n                                        )}\r\n                                        {showError ? (\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                                    {errorMessage}\r\n                                                </Alert>\r\n                                            </Row>\r\n                                        ) : null}\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <ButtonGroup aria-label=\"redirect-to-login\" className=\"w-button-group\">\r\n                                                <Col>\r\n                                                    <ButtonText\r\n                                                        buttonText={'Heb je al een account ?'}\r\n                                                        onClickAction={toggleRedirect}\r\n                                                        buttonClassName={'authorization-button'}\r\n                                                        size=\"sm\"\r\n                                                    />\r\n                                                </Col>\r\n                                            </ButtonGroup>\r\n                                        </Row>\r\n                                    </>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nfunction NewAccountWithProvider() {\r\n    const RE_CAPTCHA_KEY = process.env.REACT_APP_RE_CAPTCHA_KEY;\r\n\r\n    return (\r\n        <GoogleReCaptchaProvider reCaptchaKey={RE_CAPTCHA_KEY} language={'nl'}>\r\n            <NewAccount />\r\n        </GoogleReCaptchaProvider>\r\n    );\r\n}\r\n\r\nexport default NewAccountWithProvider;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NewAccountSuccess = () => {\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    return (\r\n        <Container fluid className=\"authorization-container\">\r\n            <Row className=\"justify-content-center align-content-center full-height\">\r\n                <Col xs=\"12\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"4\">\r\n                    <img src={`images/logo.png?${imageHash}`} alt=\"\" className=\"image logo-container\" />\r\n                    <div>\r\n                        <h3 className={'authorization-text'}>Een E-mail is onderweg!</h3>\r\n                        <p className={'authorization-text'}>\r\n                            Binnen enkele minuten ontvang je een e-mail met een persoonlijke link. Via deze link kun je\r\n                            je account activeren.\r\n                            <br />\r\n                            <br />\r\n                            <strong>Let op:</strong> Het kan zijn dat de mail door een spamfilter is geblokkeerd.\r\n                            Spamfilters van bijvoorbeeld Gmail en Hotmail staan erg \"scherp\". Kijk even bij de\r\n                            Spam/Reclame of je onze mail daar terug vindt.\r\n                        </p>\r\n                        <a onClick={window.close} href=\"#\" className=\"authorization-link\">\r\n                            Sluit venster\r\n                        </a>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default NewAccountSuccess;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport PortalUserAPI from '../../../api/portal-user/PortalUserAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string()\r\n        .email('Geen geldig e-mailadres')\r\n        .required('Verplicht'),\r\n});\r\n\r\nfunction ChangeAccountEmail() {\r\n    const [portalUserEmail, setPortalUserEmail] = useState('');\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const [showError, toggleError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (function callFetchUserEmail() {\r\n            PortalUserAPI.fetchPortalUserEmail()\r\n                .then(payload => {\r\n                    setPortalUserEmail(payload.data);\r\n                })\r\n                .catch(error => {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                });\r\n        })();\r\n    }, []);\r\n    function handleSubmitChangeEmail(values, actions) {\r\n        PortalUserAPI.changeEmail(values)\r\n            .then(payload => {\r\n                setPortalUserEmail(values.email);\r\n                actions.resetForm();\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                toggleError(true);\r\n                toggleSuccessMessage(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', changePrimaryEmailAddress: false }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitChangeEmail(values, actions);\r\n            }}\r\n        >\r\n            {({ touched, errors, isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    {showSuccessMessage ? (\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <Alert className={'p-1 m-1 text-success'} variant={'success'}>\r\n                                    Inlog e-mail is succesvol gewijzigd!\r\n                                </Alert>\r\n                            </Col>\r\n                        </Row>\r\n                    ) : null}\r\n                    {showError ? (\r\n                        <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                            Er bestaat al een account met het e-mailadres dat je hebt ingevuld. Je kunt met dit\r\n                            e-mailadres inloggen als bestaand contact. Wil je een nieuw account aanmaken? Gebruik dan\r\n                            alsjeblieft een ander e-mailadres.\r\n                        </Alert>\r\n                    ) : null}\r\n\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <FormLabel className={'field-label'}>Huidig e-mailadres</FormLabel>\r\n                            <TextBlock>{portalUserEmail}</TextBlock>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Form.Label className={'field-label pt-1'}>Nieuw e-mailadres</Form.Label>\r\n                            <Field\r\n                                name=\"email\"\r\n                                render={({ field }) => (\r\n                                    <InputText field={field} errors={errors} touched={touched} id=\"email\" />\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Field\r\n                                name=\"changePrimaryEmailAddress\"\r\n                                render={({ field }) => (\r\n                                    <label className=\"w-checkbox checkbox-fld\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            {...field}\r\n                                            id=\"change-primary-email-address\"\r\n                                            checked={field.value}\r\n                                            className=\"w-checkbox-input checkbox\"\r\n                                        />\r\n                                        <span\r\n                                            htmlFor=\"change-primary-email-address\"\r\n                                            className=\"checkbox-label w-form-label\"\r\n                                        >\r\n                                            Wijziging ook doorvoeren op huidig correspondentie e-mailadres?\r\n                                        </span>\r\n                                    </label>\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={6}>\r\n                            <ButtonText\r\n                                buttonText={'Wijzig e-mailadres'}\r\n                                size=\"sm\"\r\n                                type={'submit'}\r\n                                loading={isSubmitting}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default ChangeAccountEmail;\r\n","import React, { useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport PortalUserAPI from '../../../api/portal-user/PortalUserAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(10, 'Minimum van ${min} verplicht')\r\n        .matches(/([0-9])/, 'Minimaal 1 cijfer is verplicht')\r\n        .matches(/([A-Z])/, 'Minimaal 1 hoofdletter is verplicht')\r\n        .required('Verplicht'),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Wachtwoorden moeten gelijk zijn')\r\n        .required('Verplicht'),\r\n});\r\n\r\nfunction ChangeAccountPassword() {\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const [showError, toggleError] = useState(false);\r\n\r\n    function handleSubmitChangePassword(values, actions) {\r\n        PortalUserAPI.changePassword(values)\r\n            .then(payload => {\r\n                actions.resetForm();\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                toggleError(true);\r\n                toggleSuccessMessage(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ password: '', passwordConfirmation: '' }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitChangePassword(values, actions);\r\n            }}\r\n        >\r\n            {({ touched, errors, isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    {showSuccessMessage ? (\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <Alert className={'p-1 m-1 text-success'} variant={'success'}>\r\n                                    Wachtwoord is succesvol gewijzigd!\r\n                                </Alert>\r\n                            </Col>\r\n                        </Row>\r\n                    ) : null}\r\n                    {showError ? (\r\n                        <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                            Fout bij wijzigen wachtwoord!\r\n                        </Alert>\r\n                    ) : null}\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Form.Label className={'field-label'}>Nieuw wachtwoord</Form.Label>\r\n                            <Field\r\n                                name=\"password\"\r\n                                render={({ field }) => (\r\n                                    <InputText\r\n                                        field={field}\r\n                                        id=\"password\"\r\n                                        className={field.value ? 'content numeric-password' : 'content'}\r\n                                        placeholder={'Nieuw wachtwoord'}\r\n                                        errors={errors}\r\n                                        touched={touched}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Form.Label className={'field-label mt-0'}>Herhaal nieuw wachtwoord</Form.Label>\r\n                            <Field\r\n                                name=\"passwordConfirmation\"\r\n                                render={({ field }) => (\r\n                                    <InputText\r\n                                        field={field}\r\n                                        id=\"passwordConfirmation\"\r\n                                        className={field.value ? 'content numeric-password' : 'content'}\r\n                                        placeholder={'Herhaal nieuw wachtwoord'}\r\n                                        errors={errors}\r\n                                        touched={touched}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={6}>\r\n                            <ButtonText\r\n                                buttonText={'Wijzig wachtwoord'}\r\n                                size=\"sm\"\r\n                                type={'submit'}\r\n                                loading={isSubmitting}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default ChangeAccountPassword;\r\n","import React, {useRef, useState} from 'react';\r\nimport MeAPI from \"../../../api/general/MeAPI\";\r\nimport {Alert} from \"react-bootstrap\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst TwoFactorSettings = function () {\r\n    const activationCodeInput = useRef(null);\r\n    const [password, setPassword] = useState('');\r\n    const [hasValidPassword, setHasValidPassword] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [hasTwoFactorEnabled, setHasTwoFactorEnabled] = useState(false);\r\n    const [activationQr, setActivationQr] = useState(null);\r\n    const [isActivatingTwoFactor, setIsActivatingTwoFactor] = useState(false);\r\n    const [activationCode, setActivationCode] = useState('');\r\n    const [recoveryCodes, setRecoveryCodes] = useState([]);\r\n\r\n    const checkPasswordHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        setErrorMessage('');\r\n        MeAPI.checkPassword(password).then(payload => {\r\n            setHasValidPassword(true);\r\n\r\n            fetchTwoFactorStatus();\r\n        }).catch(error => {\r\n            setErrorMessage('Het wachtwoord is onjuist');\r\n        });\r\n    }\r\n\r\n    const enableTwoFactorHandler = () => {\r\n        MeAPI.enableTwoFactor(password).then(payload => {\r\n            setIsActivatingTwoFactor(true);\r\n            activationCodeInput.current.focus();\r\n            fetchQr();\r\n        });\r\n    }\r\n\r\n    const disableTwoFactorHandler = () => {\r\n        if(!window.confirm('Weet u zeker dat u twee factor authenticatie wilt uitschakelen.')) {\r\n            return;\r\n        }\r\n\r\n        MeAPI.disableTwoFactor(password).then(payload => {\r\n            setHasTwoFactorEnabled(false);\r\n            localStorage.removeItem('portal_two_factor_token');\r\n        });\r\n    }\r\n\r\n    const fetchTwoFactorStatus = () => {\r\n        MeAPI.fetchTwoFactorStatus().then(payload => {\r\n            setHasTwoFactorEnabled(payload.data.hasTwoFactorEnabled);\r\n        });\r\n    }\r\n\r\n    const fetchQr = () => {\r\n        MeAPI.fetchTwoFactorQr(password).then(payload => {\r\n            setActivationQr(payload.data.svg);\r\n        });\r\n    }\r\n\r\n    const confirmTwoFactorHandler = () => {\r\n        setErrorMessage('');\r\n\r\n        MeAPI.confirmTwoFactor(activationCode).then(payload => {\r\n            setIsActivatingTwoFactor(false);\r\n            setHasTwoFactorEnabled(true);\r\n            setActivationCode('');\r\n            fetchRecoveryCodes();\r\n\r\n            localStorage.setItem('portal_two_factor_token', payload.data.token);\r\n        }).catch(() => {\r\n            setErrorMessage('De code is onjuist');\r\n        });\r\n    }\r\n\r\n    const fetchRecoveryCodes = () => {\r\n        MeAPI.fetchTwoFactorRecoveryCodes(password).then(payload => {\r\n            setRecoveryCodes(payload.data);\r\n        });\r\n    }\r\n\r\n    const regenerateRecoveryCodes = () => {\r\n        if(!window.confirm('Weet u zeker dat u nieuwe recovery code wilt genereren? De huidige code is daarna niet meer geldig.')) {\r\n            return;\r\n        }\r\n\r\n        MeAPI.regenerateTwoFactorRecoveryCodes(password).then(payload => {\r\n            fetchRecoveryCodes();\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={9}>\r\n            {errorMessage && (<>\r\n                <Alert variant={'danger'}>\r\n                    {errorMessage}\r\n                </Alert>\r\n            </>)}\r\n\r\n            {hasValidPassword ? (\r\n                <>\r\n                    {hasTwoFactorEnabled ? (\r\n                        <>\r\n                            <p>U heeft twee factor authenticatie geactiveerd.</p>\r\n                            <button onClick={disableTwoFactorHandler} className=\"btn btn-primary btn-sm\">Twee factor uitschakelen</button>\r\n                            <br/><br/>\r\n                            <strong>Recovery code</strong>\r\n                            <p><small>De recovery code kunt u gebruiken om uw account te herstellen bij problemen met uw authenticator app\r\n                                of verlies van uw telefoon. Sla deze op een veilige plek op.</small></p>\r\n\r\n                            {recoveryCodes.length ? (<>\r\n                                <ul>\r\n                                    {recoveryCodes.map((code) => {\r\n                                        return (\r\n                                            <li key={code} style={{'font-family': 'courier'}}>{code}</li>\r\n                                        );\r\n                                    })}\r\n                                </ul>\r\n                                <button onClick={() => setRecoveryCodes([])} className=\"btn btn-sm\">Verbergen</button>\r\n                                <button onClick={regenerateRecoveryCodes} className=\"btn btn-sm btn-primary\">Vernieuwen</button>\r\n                            </>) : (<>\r\n                                <button onClick={fetchRecoveryCodes} className=\"btn btn-primary btn-sm\">Toon recovery code</button>\r\n                            </>)}\r\n                        </>) : (\r\n                        <>\r\n                            {isActivatingTwoFactor ? (\r\n                                <>\r\n                                    <p>Scan onderstaande QR met uw authenticator app en voer de zescijferige code\r\n                                        in.</p>\r\n                                    <div dangerouslySetInnerHTML={{__html: activationQr}}/>\r\n                                    <br/>\r\n                                    <input ref={activationCodeInput} placeholder=\"Code\" className=\"text-input w-input content\" type=\"text\" value={activationCode}\r\n                                           onChange={(e) => setActivationCode(e.target.value)}/>\r\n                                    <button onClick={() => setIsActivatingTwoFactor(false)} className=\"btn btn-sm btn-light\">Annuleren</button>\r\n                                    <button onClick={confirmTwoFactorHandler} className=\"btn btn-primary btn-sm\">Bevestigen</button>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <p>U heeft twee factor authenticatie <strong>niet</strong> geactiveerd.</p>\r\n                                    <button onClick={enableTwoFactorHandler} className=\"btn btn-primary btn-sm\">Twee factor inschakelen</button>\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    )\r\n                    }\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <form onSubmit={checkPasswordHandler}>\r\n                    Voer uw wachtwoord in om de twee factor instellingen te wijzigen.<br/>\r\n                    <input placeholder=\"Wachtwoord\" className=\"text-input w-input content\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                    <button type=\"submit\" className=\"btn btn-primary btn-sm\">Ontgrendel</button>\r\n                    </form>\r\n                </>\r\n            )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default TwoFactorSettings;","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ChangeAccountEmail from './Email';\r\nimport ChangeAccountPassword from './Password';\r\nimport TwoFactorSettings from \"./TwoFactorSettings\";\r\n\r\nfunction ChangeAccount() {\r\n    return (\r\n        <Container className={'content-section'}>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"content-heading\">Wijzig inloggegevens</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} md={6} className={'mb-5'}>\r\n                    <h3 className={'h3'}>Wijzig inlog e-mailadres</h3>\r\n\r\n                    <ChangeAccountEmail />\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <h3 className={'h3'}>Wijzig wachtwoord</h3>\r\n\r\n                    <ChangeAccountPassword />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} md={6} style={{marginTop: '24px'}}>\r\n                    <h3 className={'h3'}>Twee factor authenticatie</h3>\r\n\r\n                    <TwoFactorSettings/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChangeAccount;\r\n","import React, { useEffect, useReducer, useContext, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport { PortalUserContext } from '../../../context/PortalUserContext';\r\n\r\nconst INITIAL_STATE = {\r\n    result: [],\r\n    isLoading: true,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'updateIsLoading':\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            };\r\n        case 'updateResult':\r\n            return {\r\n                ...state,\r\n                result: action.payload,\r\n            };\r\n        default:\r\n            return INITIAL_STATE;\r\n    }\r\n};\r\n\r\nfunction AboutUs() {\r\n    const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\r\n    const { currentSelectedContact } = useContext(PortalUserContext);\r\n    const [hasSingleRelatedAdministration, setHasSingleRelatedAdministration] = useState(false);\r\n\r\n    useEffect(\r\n        function() {\r\n            if (currentSelectedContact.id) {\r\n                if (currentSelectedContact.singleRelatedAdministration) {\r\n                    setIsLoading(false);\r\n                    setHasSingleRelatedAdministration(true);\r\n                } else {\r\n                    ContactAPI.fetchContactRelatedAdministrations(currentSelectedContact.id)\r\n                        .then(payload => {\r\n                            dispatch({\r\n                                type: 'updateResult',\r\n                                payload: payload.data.data,\r\n                            });\r\n                            setIsLoading(false);\r\n                        })\r\n                        .catch(() => {\r\n                            alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                            setIsLoading(false);\r\n                        });\r\n                }\r\n            }\r\n        },\r\n        [currentSelectedContact.id]\r\n    );\r\n\r\n    function setIsLoading(isLoading) {\r\n        dispatch({\r\n            type: 'updateIsLoading',\r\n            payload: isLoading,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {hasSingleRelatedAdministration ? (\r\n                <Redirect to={`/over-ons-organisatie/${currentSelectedContact.singleRelatedAdministration}`} />\r\n            ) : (\r\n                <Container className={'content-section'}>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">\r\n                                Overzicht organisaties waar <strong>{currentSelectedContact.fullNameFnf}</strong> een\r\n                                relatie mee heeft.\r\n                            </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    {state.isLoading ? (\r\n                        <Row>\r\n                            <Col>\r\n                                <LoadingView />\r\n                            </Col>\r\n                        </Row>\r\n                    ) : state.result.length === 0 ? (\r\n                        <Row>\r\n                            <Col>Geen informatie organisaties beschikbaar waar contact een relatie mee heeft.</Col>\r\n                        </Row>\r\n                    ) : (\r\n                        <>\r\n                            <Row>\r\n                                <Col>\r\n                                    <p>Klik op de organisatie voor meer details.</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Table responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Naam</th>\r\n                                        <th>Adres</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {state.result.map(item => (\r\n                                        <tr key={item.id}>\r\n                                            <td>\r\n                                                <Link to={`/over-ons-organisatie/${item.id}`}>{item.name}</Link>\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.address}, {item.city}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        </>\r\n                    )}\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AboutUs;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction RegistrationDetailsTitle({ contactName, projectName, administrationName }) {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <h1 className=\"content-heading\">\r\n                    Deelname van {contactName} in de {projectName}\r\n                </h1>\r\n                <div className=\"content-subheading\">Organisatie {administrationName}</div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default RegistrationDetailsTitle;\r\n","import moneyPresenter from './MoneyPresenter';\r\nimport moment from 'moment';\r\n\r\nexport default field => {\r\n    switch (field.type) {\r\n        case 'date':\r\n            return field.value ? moment(field.value).format('L') : '';\r\n        case 'decimal':\r\n            return field.value\r\n                ? field.value.toLocaleString('nl', {\r\n                      minimumFractionDigits: 2,\r\n                      maximumFractionDigits: 2,\r\n                  })\r\n                : '';\r\n        case 'money':\r\n            return moneyPresenter(field.value);\r\n        case 'string':\r\n        case 'integer':\r\n        default:\r\n            return field.value;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport valueBasedOnTypePresenter from '../../../../helpers/ValueBasedOnTypePresenter';\r\n\r\nfunction RegistrationDetailsProjectTable({ fields }) {\r\n    if (!fields || fields.length === 0) return <p>Geen projectdetails bekend</p>;\r\n\r\n    return (\r\n        <Table>\r\n            <tbody>\r\n                {fields.map((field, index) => (\r\n                    <tr key={index}>\r\n                        <td>\r\n                            <strong>{field.label}</strong>\r\n                        </td>\r\n                        <td>{valueBasedOnTypePresenter(field)}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default RegistrationDetailsProjectTable;\r\n","export default field => {\r\n    switch (field.type) {\r\n        case 'date':\r\n        case 'string':\r\n            return 'text-left';\r\n        case 'decimal':\r\n        case 'money':\r\n        case 'integer':\r\n            return 'text-right';\r\n        default:\r\n            return 'text-left';\r\n    }\r\n};\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport valueBasedOnTypePresenter from '../../../../helpers/ValueBasedOnTypePresenter';\r\nimport classNameBasedOnTypePresenter from '../../../../helpers/classNameBasedOnTypePresenter';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction RegistrationDetailsMutationTable({ participantMutations }) {\r\n    if (!participantMutations || participantMutations.length === 0) return <p>Geen mutaties bekend</p>;\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <div className=\"content-subheading\">Mutaties</div>\r\n                </Col>\r\n            </Row>\r\n            <Table responsive={true}>\r\n                <thead>\r\n                    <tr>\r\n                        {participantMutations[0].fields.map((field, index) => (\r\n                            <th key={index}>{field.label}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {participantMutations.map((participantMutation, index) => (\r\n                        <tr key={index}>\r\n                            {participantMutation.fields.map((field, index) => (\r\n                                <td className={classNameBasedOnTypePresenter(field)} key={index}>\r\n                                    {valueBasedOnTypePresenter(field)}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RegistrationDetailsMutationTable;\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { FaFileDownload } from 'react-icons/all';\r\nimport fileDownload from 'js-file-download';\r\nimport ParticipantProjectAPI from '../../../../api/participant-project/ParticipantProjectAPI';\r\n\r\nfunction RegistrationDetailsDocumentTable({ participantId, documents }) {\r\n    function downloadFile(e, id, filename) {\r\n        e.preventDefault();\r\n\r\n        ParticipantProjectAPI.participantDocumentDownload(participantId, id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, filename);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    if (\r\n        (documents && documents.relatedDocumentsOnPortal && documents.relatedDocumentsOnPortal.length !== 0) ||\r\n        (documents &&\r\n            documents.relatedDocumentsProjectOnPortal &&\r\n            documents.relatedDocumentsProjectOnPortal.length !== 0)\r\n    ) {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"content-subheading\">Documenten</div>\r\n                    </Col>\r\n                </Row>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Naam</th>\r\n                            <th>Omschrijving</th>\r\n                            <th>Downloaden</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {documents &&\r\n                    documents.relatedDocumentsOnPortal &&\r\n                    documents.relatedDocumentsOnPortal.length !== 0 ? (\r\n                        <tbody>\r\n                            {documents.relatedDocumentsOnPortal.map(item => (\r\n                                <tr key={item.id}>\r\n                                    <td>{item.filename}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td>\r\n                                        <a href=\"#\" onClick={e => downloadFile(e, item.id, item.filename)}>\r\n                                            <FaFileDownload /> downloaden\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : null}\r\n                    {documents &&\r\n                    documents.relatedDocumentsProjectOnPortal &&\r\n                    documents.relatedDocumentsProjectOnPortal.length !== 0 ? (\r\n                        <tbody>\r\n                            {documents.relatedDocumentsProjectOnPortal.map(item => (\r\n                                <tr key={item.id}>\r\n                                    <td>{item.filename}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td>\r\n                                        <a href=\"#\" onClick={e => downloadFile(e, item.id, item.filename)}>\r\n                                            <FaFileDownload /> downloaden\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : null}\r\n                </Table>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default RegistrationDetailsDocumentTable;\r\n","import React, { useEffect, useReducer, useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ParticipantProjectAPI from '../../../api/participant-project/ParticipantProjectAPI';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport RegistrationDetailsTitle from './Title';\r\nimport RegistrationDetailsProjectTable from './project-table';\r\nimport RegistrationDetailsMutationTable from './mutation-table';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ThemeSettingsContext } from '../../../context/ThemeSettingsContext';\r\nimport { PortalUserContext } from '../../../context/PortalUserContext';\r\nimport Col from 'react-bootstrap/Col';\r\nimport RegistrationDetailsDocumentTable from './document-table';\r\n\r\nconst INITIAL_STATE = {\r\n    result: [],\r\n    isLoading: true,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'updateIsLoading':\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            };\r\n        case 'updateResult':\r\n            return {\r\n                ...state,\r\n                result: action.payload,\r\n            };\r\n        default:\r\n            return INITIAL_STATE;\r\n    }\r\n};\r\n\r\nfunction RegistrationDetails({ match: { params } }) {\r\n    const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\r\n    const { setCurrentThemeSettings } = useContext(ThemeSettingsContext);\r\n    const { currentSelectedContact } = useContext(PortalUserContext);\r\n\r\n    useEffect(() => {\r\n        if (currentSelectedContact.id) {\r\n            (function() {\r\n                ParticipantProjectAPI.show(params.id)\r\n                    .then(payload => {\r\n                        dispatch({\r\n                            type: 'updateResult',\r\n                            payload: payload.data.data,\r\n                        });\r\n                        setCurrentThemeSettings(payload.data.data.basicInformation.portalSettingsLayoutAssigned);\r\n                        setIsLoading(false);\r\n                    })\r\n                    .catch(() => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setIsLoading(false);\r\n                    });\r\n            })();\r\n        }\r\n    }, [params.id, currentSelectedContact]);\r\n\r\n    function setIsLoading(isLoading) {\r\n        dispatch({\r\n            type: 'updateIsLoading',\r\n            payload: isLoading,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {state.isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        <ButtonGroup aria-label=\"current-participations\" className=\"w-button-group-left\">\r\n                            <Link to={`/inschrijvingen-projecten`}>\r\n                                <Button className={'w-button'} size=\"sm\">\r\n                                    Huidige deelnames\r\n                                </Button>\r\n                            </Link>\r\n                        </ButtonGroup>\r\n                    </Row>\r\n                    <RegistrationDetailsTitle {...state.result.basicInformation} />\r\n                    {state.result.length === 0 ? (\r\n                        <Row>\r\n                            <Col>Geen huidige deelname aanwezig.</Col>\r\n                        </Row>\r\n                    ) : (\r\n                        <>\r\n                            <RegistrationDetailsProjectTable fields={state.result.fields} />\r\n                            <RegistrationDetailsMutationTable\r\n                                participantMutations={state.result.participantMutations}\r\n                            />\r\n                            <RegistrationDetailsDocumentTable\r\n                                participantId={params.id}\r\n                                documents={state.result.documents}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default RegistrationDetails;\r\n","import React, { useEffect, useReducer, useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport { PortalUserContext } from '../../../context/PortalUserContext';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { FaFileDownload } from 'react-icons/all';\r\nimport fileDownload from 'js-file-download';\r\n\r\nconst INITIAL_STATE = {\r\n    result: [],\r\n    isLoading: true,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'updateIsLoading':\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            };\r\n        case 'updateResult':\r\n            return {\r\n                ...state,\r\n                result: action.payload,\r\n            };\r\n        default:\r\n            return INITIAL_STATE;\r\n    }\r\n};\r\n\r\nfunction FinancialOverviewDocuments() {\r\n    const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\r\n    const { currentSelectedContact } = useContext(PortalUserContext);\r\n\r\n    useEffect(\r\n        function() {\r\n            if (currentSelectedContact.id) {\r\n                ContactAPI.fetchContactFinancialOverviewDocuments(currentSelectedContact.id)\r\n                    .then(payload => {\r\n                        dispatch({\r\n                            type: 'updateResult',\r\n                            payload: payload.data.data,\r\n                        });\r\n                        setIsLoading(false);\r\n                    })\r\n                    .catch(() => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setIsLoading(false);\r\n                    });\r\n            }\r\n        },\r\n        [currentSelectedContact.id]\r\n    );\r\n\r\n    function setIsLoading(isLoading) {\r\n        dispatch({\r\n            type: 'updateIsLoading',\r\n            payload: isLoading,\r\n        });\r\n    }\r\n\r\n    function downloadFile(e, id) {\r\n        e.preventDefault();\r\n\r\n        ContactAPI.financialOverviewContactDownload(id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, payload.headers['x-filename']);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {state.isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading mt-0\">Waardestaat documenten</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    {state.result.length === 0 ? (\r\n                        <Row>\r\n                            <Col>Geen waardestaat documenten aanwezig om te tonen.</Col>\r\n                        </Row>\r\n                    ) : (\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Naam</th>\r\n                                    <th>Omschrijving</th>\r\n                                    <th>Downloaden</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {state.result.map(item => (\r\n                                    <tr key={item.id}>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.description}</td>\r\n                                        <td>\r\n                                            <a href=\"#\" onClick={e => downloadFile(e, item.id)}>\r\n                                                <FaFileDownload /> downloaden\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default FinancialOverviewDocuments;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n    fetchAdministration: function(id) {\r\n        const requestUrl = `/jory/administration/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'name',\r\n                        'address',\r\n                        'postalCode',\r\n                        'city',\r\n                        'kvkNumber',\r\n                        'iBAN',\r\n                        'ibanAttn',\r\n                        'btwNumber',\r\n                        'website',\r\n                        'email',\r\n                    ],\r\n                    rlt: {\r\n                        country: { fld: ['name'] },\r\n                        documentsOnPortal: { fld: ['id', 'filename', 'description'] },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n    documentDownload: function(administrationId, id) {\r\n        const requestUrl = `/administration/${administrationId}/document/${id}/download`;\r\n\r\n        return axiosInstance.get(requestUrl, { responseType: 'blob' });\r\n    },\r\n};\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { FaFileDownload } from 'react-icons/all';\r\nimport fileDownload from 'js-file-download';\r\nimport AdministrationAPI from '../../../../api/administration/AdministrationAPI';\r\n\r\nfunction AboutUsDocumentTable({ administrationId, documents }) {\r\n    function downloadFile(e, id, filename) {\r\n        e.preventDefault();\r\n\r\n        AdministrationAPI.documentDownload(administrationId, id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, filename);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    if (documents && documents.length !== 0) {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"content-subheading\">Documenten</div>\r\n                    </Col>\r\n                </Row>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Naam</th>\r\n                            <th>Omschrijving</th>\r\n                            <th>Downloaden</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {documents.map(item => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.filename}</td>\r\n                                <td>{item.description}</td>\r\n                                <td>\r\n                                    <a href=\"#\" onClick={e => downloadFile(e, item.id, item.filename)}>\r\n                                        <FaFileDownload /> downloaden\r\n                                    </a>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default AboutUsDocumentTable;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport { PortalUserContext } from '../../../context/PortalUserContext';\r\nimport { Card, Table } from 'react-bootstrap';\r\nimport AdministrationAPI from '../../../api/administration/AdministrationAPI';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport AboutUsDocumentTable from './document-table';\r\n\r\nfunction AboutUsAdministration({ match }) {\r\n    const { currentSelectedContact } = useContext(PortalUserContext);\r\n    const [administration, setAdministration] = useState({});\r\n    const [websiteLink, setWebsiteLink] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (currentSelectedContact.id) {\r\n            (function callFetchAdministration() {\r\n                setLoading(true);\r\n                // console.log(match);\r\n                AdministrationAPI.fetchAdministration(match.params.id)\r\n                    .then(payload => {\r\n                        setAdministration(payload.data.data);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setLoading(false);\r\n                    });\r\n            })();\r\n        }\r\n    }, [match, currentSelectedContact]);\r\n\r\n    useEffect(() => {\r\n        if (administration.id && administration.website) {\r\n            if (\r\n                administration.website.toLowerCase().startsWith('http') ||\r\n                administration.website.toLowerCase().startsWith('https')\r\n            ) {\r\n                setWebsiteLink(administration.website);\r\n            } else {\r\n                setWebsiteLink('https://' + administration.website);\r\n            }\r\n        }\r\n    }, [administration]);\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        <ButtonGroup aria-label=\"about-us\" className=\"w-button-group-left\">\r\n                            <Link to={`/over-ons`}>\r\n                                <Button className={'w-button'} size=\"sm\">\r\n                                    Over ons\r\n                                </Button>\r\n                            </Link>\r\n                        </ButtonGroup>\r\n                    </Row>\r\n                    <Row className={'justify-content-center align-content-center flex-wrap'}>\r\n                        <Col xs={12} lg={6} className={'mb-3'}>\r\n                            <Card>\r\n                                <Card.Header className={'card-header_title'}>\r\n                                    Informatie over {administration.name}\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Table responsive>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>Naam</strong>\r\n                                                </td>\r\n                                                <td>{administration.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>Adres</strong>\r\n                                                </td>\r\n                                                <td>{administration.address}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>Postcode / Plaats</strong>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {administration.postalCode} {administration.city}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>Kvk</strong>\r\n                                                </td>\r\n                                                <td>{administration.kvkNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>Website</strong>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {administration.website && (\r\n                                                        <a href={websiteLink} target=\"_blank\">\r\n                                                            <button className=\"w-button btn btn-primary btn-sm\">\r\n                                                                {administration.website}\r\n                                                            </button>\r\n                                                        </a>\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>E-mail</strong>\r\n                                                </td>\r\n                                                <td>{administration.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>IBAN</strong>\r\n                                                </td>\r\n                                                <td>{administration.iBAN}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>IBAN t.n.v.</strong>\r\n                                                </td>\r\n                                                <td>{administration.ibanAttn}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>BTW nummer</strong>\r\n                                                </td>\r\n                                                <td>{administration.btwNumber}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <AboutUsDocumentTable\r\n                        administrationId={match.params.id}\r\n                        documents={administration.documentsOnPortal}\r\n                    />\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AboutUsAdministration;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    fetchByCode: code => {\r\n        const requestUrl = `/jory/participant-mutation`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    flt: {\r\n                        f: 'code',\r\n                        d: code,\r\n                    },\r\n                    fld: ['econobisPaymentLink', 'isPaidByMollie'],\r\n                    rlt: {\r\n                        participation: {\r\n                            rlt: {\r\n                                project: {\r\n                                    fld: ['name', 'textRegistrationFinished'],\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ParticipantMutationAPI from '../../../api/participant-mutation/ParticipantMutationAPI';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport {PortalUserConsumer} from '../../../context/PortalUserContext';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\nfunction ProjectMollieRedirect({match, currentSelectedContact}) {\r\n    const [participantMutation, setParticipantMutation] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    const handlePaymentRetry = () => {\r\n        window.location.href = participantMutation.econobisPaymentLink;\r\n    }\r\n\r\n    useEffect(() => {\r\n        (function fetchContactAndProject() {\r\n            setLoading(true);\r\n\r\n            axios\r\n                .all([\r\n                    ParticipantMutationAPI.fetchByCode(match.params.code),\r\n                ])\r\n                .then(\r\n                    axios.spread((payloadParticipantMutation) => {\r\n                        if(payloadParticipantMutation.data.data.length !== 1){\r\n                            alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                            setLoading(false);\r\n                            return;\r\n                        }\r\n\r\n                        setParticipantMutation(payloadParticipantMutation.data.data[0]);\r\n                        setLoading(false);\r\n                    })\r\n                )\r\n                .catch(error => {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                    setLoading(false);\r\n                });\r\n        })();\r\n    }, [match]);\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView/>\r\n            ) : (\r\n                <>\r\n                    <Row className={'mb-4'}>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">\r\n                                {\r\n                                    participantMutation.isPaidByMollie ? (\r\n                                        <>Ingeschreven voor\r\n                                            project <strong>{participantMutation.participation.project.name}</strong></>\r\n                                    ) : (\r\n                                        <>Betaling voor\r\n                                            project <strong>{participantMutation.participation.project.name}</strong> nog\r\n                                            niet gelukt.</>\r\n                                    )\r\n                                }\r\n\r\n                            </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={10}>\r\n                            {participantMutation.isPaidByMollie ? (\r\n                                <>\r\n                                    <p>\r\n                                        { participantMutation.participation.project.textRegistrationFinished.split('\\n').map((item, key) => {\r\n                                            return <span key={key}>{item}<br/></span>\r\n                                        }) }\r\n                                    </p>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <p>\r\n                                        Uw inschrijving kon nog niet worden afgerond doordat de betaling niet is gelukt,\r\n                                        gebruik onderstaande betaal button om de betaling alsnog uit te voeren.</p>\r\n                                </>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={10}>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Link to={`/inschrijvingen-projecten`}>\r\n                                    <Button className={'w-button'} size=\"sm\">\r\n                                        Naar mijn huidige deelnames\r\n                                    </Button>\r\n                                </Link>\r\n                                {!participantMutation.isPaidByMollie && (\r\n                                    <Button className={'w-button'} size=\"sm\" onClick={handlePaymentRetry}>\r\n                                        Betalen\r\n                                    </Button>\r\n                                )}\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function ProjectMollieRedirectWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({currentSelectedContact}) => (\r\n                <ProjectMollieRedirect {...props} currentSelectedContact={currentSelectedContact}/>\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    fetchAll: function() {\r\n        return axiosInstance.get('me/quotation-request');\r\n    },\r\n\r\n    fetchById: function(id) {\r\n        return axiosInstance.get('quotation-request/' + id);\r\n    },\r\n\r\n    update: function(quotationRequest) {\r\n        return axiosInstance.post('quotation-request/' + quotationRequest.id, quotationRequest);\r\n    },\r\n\r\n    quotationRequestDownloadDocument: function(quotationRequestId, id) {\r\n        const requestUrl = `quotation-request/${quotationRequestId}/document/${id}/download`;\r\n\r\n        return axiosInstance.get(requestUrl, { responseType: 'blob' });\r\n    },\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport { PortalUserConsumer } from '../../../context/PortalUserContext';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport QuotationRequestAPI from '../../../api/quotation-request/QuotationRequestAPI';\r\n\r\nfunction Inspectlist(props) {\r\n    const [quotationRequestsArray, setQuotationRequestsArray] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        QuotationRequestAPI.fetchAll(props.user.id).then(response => {\r\n            setQuotationRequestsArray(response.data);\r\n\r\n            setIsLoading(false);\r\n        });\r\n    }, [props.user]);\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"content-heading\">Overzicht schouwingen</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {isLoading ? (\r\n                        <LoadingView />\r\n                    ) : quotationRequestsArray.length === 0 ? (\r\n                        'Geen schouwingen beschikbaar.'\r\n                    ) : (\r\n                        <Table responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Naam</th>\r\n                                    <th>Adres</th>\r\n                                    <th>Status</th>\r\n                                    <th>Datum afspraak</th>\r\n                                    <th>Datum opname</th>\r\n                                    <th>Akkoord projectleider</th>\r\n                                    <th>Datum uitgebracht</th>\r\n                                    <th>Akkoord bewoner</th>\r\n                                    <th>Datum akkoord extern</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {quotationRequestsArray.map(quotationRequest => (\r\n                                    <tr key={quotationRequest.id}>\r\n                                        <td>{quotationRequest.opportunity.intake.contact.fullName}</td>\r\n                                        <td>\r\n                                            <Link to={`/schouwen/${quotationRequest.id}`}>\r\n                                                {quotationRequest.opportunity.intake.address.streetPostalCodeCity}\r\n                                            </Link>\r\n                                        </td>\r\n                                        <td>{quotationRequest.opportunity.status.name}</td>\r\n                                        <td>\r\n                                            {quotationRequest.datePlanned\r\n                                                ? moment(quotationRequest.datePlanned).format('L HH:mm')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            {quotationRequest.dateRecorded\r\n                                                ? moment(quotationRequest.dateRecorded).format('L HH:mm')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            {quotationRequest.dateApprovedProjectManager\r\n                                                ? moment(quotationRequest.dateApprovedProjectManager).format('L')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            {quotationRequest.dateReleased\r\n                                                ? moment(quotationRequest.dateReleased).format('L HH:mm')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            {quotationRequest.dateApprovedClient\r\n                                                ? moment(quotationRequest.dateApprovedClient).format('L')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            {quotationRequest.dateApprovedExternal\r\n                                                ? moment(quotationRequest.dateApprovedExternal).format('L')\r\n                                                : ''}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function InspectlistWithContext(props) {\r\n    return <PortalUserConsumer>{({ user }) => <Inspectlist {...props} user={user} />}</PortalUserConsumer>;\r\n}\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { FaFileDownload, FiZoomIn } from 'react-icons/all';\r\nimport fileDownload from 'js-file-download';\r\nimport QuotationRequestAPI from '../../../../api/quotation-request/QuotationRequestAPI';\r\n\r\nfunction InspectDetailsDocumentTable({ quotationRequestId, documents, previewDocument }) {\r\n    function downloadFile(e, id, filename) {\r\n        e.preventDefault();\r\n\r\n        QuotationRequestAPI.quotationRequestDownloadDocument(quotationRequestId, id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, filename);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    if (documents && documents.length !== 0) {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"content-subheading\">Documenten</div>\r\n                    </Col>\r\n                </Row>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Naam</th>\r\n                            <th>Omschrijving</th>\r\n                            <th>Downloaden</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {documents.map(item => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.filename}</td>\r\n                                <td>{item.description}</td>\r\n                                <td>\r\n                                    {item.filename && item.filename.toLowerCase().endsWith('.pdf') ? (\r\n                                        <>\r\n                                            <a href=\"#\" onClick={e => previewDocument(e, item.id)}>\r\n                                                <FiZoomIn /> preview\r\n                                            </a>\r\n                                            <br />\r\n                                        </>\r\n                                    ) : null}\r\n                                    <a href=\"#\" onClick={e => downloadFile(e, item.id, item.filename)}>\r\n                                        <FaFileDownload /> downloaden\r\n                                    </a>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default InspectDetailsDocumentTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport * as Yup from 'yup';\r\nimport QuotationRequestAPI from '../../../api/quotation-request/QuotationRequestAPI';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport moment from 'moment';\r\nimport InputTextDate from '../../../components/form/InputTextDate';\r\nimport InspectDetailsDocumentTable from './document-table';\r\n\r\nfunction InspectDetails({ match, history }) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [initialQuotationRequest, setInitialQuotationRequest] = useState({});\r\n\r\n    const validationSchema = Yup.object().shape({});\r\n\r\n    const handleSubmit = (values, actions) => {\r\n        QuotationRequestAPI.update({\r\n            id: match.params.id,\r\n            dateRecorded: values.dateRecorded,\r\n            datePlanned: values.datePlanned,\r\n            dateApprovedExternal: values.dateApprovedExternal,\r\n            dateReleased: values.dateReleased,\r\n        }).then(response => {\r\n            history.push('/schouwen');\r\n        });\r\n    };\r\n\r\n    const previewDocument = (event, documentId) => {\r\n        event.preventDefault();\r\n        history.push(`/schouwen/${match.params.id}/document/${documentId}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        QuotationRequestAPI.fetchById(match.params.id).then(response => {\r\n            setInitialQuotationRequest(response.data);\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    <div>\r\n                        <Formik\r\n                            initialValues={initialQuotationRequest}\r\n                            enableReinitialize={true}\r\n                            validationSchema={validationSchema}\r\n                            onSubmit={handleSubmit}\r\n                            render={({\r\n                                errors,\r\n                                touched,\r\n                                setFieldValue,\r\n                                isSubmitting,\r\n                                status,\r\n                                values,\r\n                                handleSubmit,\r\n                            }) => {\r\n                                return (\r\n                                    <Form>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <FormLabel className={'field-label'}>Naams</FormLabel>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className={`text-input w-input content`}\r\n                                                    value={initialQuotationRequest.opportunity.intake.contact.fullName}\r\n                                                    readOnly={true}\r\n                                                />\r\n                                                <FormLabel className={'field-label'}>Adres</FormLabel>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className={`text-input w-input content`}\r\n                                                    value={\r\n                                                        initialQuotationRequest.opportunity.intake.address\r\n                                                            .streetPostalCodeCity\r\n                                                    }\r\n                                                    readOnly={true}\r\n                                                />\r\n                                                <FormLabel className={'field-label'}>Telefoon</FormLabel>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className={`text-input w-input content`}\r\n                                                    value={\r\n                                                        initialQuotationRequest.opportunity.intake.contact\r\n                                                            .primaryphoneNumber\r\n                                                    }\r\n                                                    readOnly={true}\r\n                                                />\r\n                                                <FormLabel className={'field-label'}>Email</FormLabel>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className={`text-input w-input content`}\r\n                                                    value={\r\n                                                        initialQuotationRequest.opportunity.intake.contact\r\n                                                            .primaryEmailAddress\r\n                                                    }\r\n                                                    readOnly={true}\r\n                                                />\r\n                                                <FormLabel className={'field-label'}>Status</FormLabel>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className={`text-input w-input content`}\r\n                                                    value={\r\n                                                        initialQuotationRequest.opportunityAction.name +\r\n                                                        ' - ' +\r\n                                                        initialQuotationRequest.opportunity.status.name\r\n                                                    }\r\n                                                    readOnly={true}\r\n                                                />\r\n                                                <FormLabel htmlFor=\"date_planned\" className={'field-label'}>\r\n                                                    Datum afspraak\r\n                                                </FormLabel>\r\n                                                <Field\r\n                                                    name=\"datePlanned\"\r\n                                                    render={({ field }) => (\r\n                                                        <InputTextDate\r\n                                                            name=\"datePlanned\"\r\n                                                            field={field}\r\n                                                            type=\"datetime-local\"\r\n                                                            errors={errors}\r\n                                                            touched={touched}\r\n                                                            onChangeAction={setFieldValue}\r\n                                                            id=\"date_planned\"\r\n                                                            placeholder={'Datum afspraak'}\r\n                                                            step=\"900\"\r\n                                                        />\r\n                                                    )}\r\n                                                />\r\n                                                {initialQuotationRequest.opportunityAction.codeRef ===\r\n                                                'quotation-request' ? (\r\n                                                    <>\r\n                                                        <FormLabel htmlFor=\"date_recorded\" className={'field-label'}>\r\n                                                            Datum opname\r\n                                                        </FormLabel>\r\n                                                        <Field\r\n                                                            name=\"dateRecorded\"\r\n                                                            render={({ field }) => (\r\n                                                                <InputTextDate\r\n                                                                    name=\"dateRecorded\"\r\n                                                                    field={field}\r\n                                                                    type=\"datetime-local\"\r\n                                                                    errors={errors}\r\n                                                                    touched={touched}\r\n                                                                    onChangeAction={setFieldValue}\r\n                                                                    id=\"date_recorded\"\r\n                                                                    placeholder={'Datum opname'}\r\n                                                                    step=\"900\"\r\n                                                                />\r\n                                                            )}\r\n                                                        />\r\n                                                    </>\r\n                                                ) : null}\r\n                                                {initialQuotationRequest.opportunityAction.codeRef ===\r\n                                                'subsidy-request' ? (\r\n                                                    <>\r\n                                                        <FormLabel\r\n                                                            htmlFor=\"date_approved_project_manager\"\r\n                                                            className={'field-label'}\r\n                                                        >\r\n                                                            Datum akkoord projectleider\r\n                                                        </FormLabel>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className={`text-input w-input content`}\r\n                                                            value={\r\n                                                                initialQuotationRequest.dateApprovedProjectManager\r\n                                                                    ? moment(\r\n                                                                          initialQuotationRequest.dateApprovedProjectManager\r\n                                                                      ).format('L')\r\n                                                                    : ''\r\n                                                            }\r\n                                                            readOnly={true}\r\n                                                        />\r\n                                                    </>\r\n                                                ) : null}\r\n                                                <FormLabel htmlFor=\"date_released\" className={'field-label'}>\r\n                                                    Datum uitgebracht\r\n                                                </FormLabel>\r\n                                                <Field\r\n                                                    name=\"dateReleased\"\r\n                                                    render={({ field }) => (\r\n                                                        <InputTextDate\r\n                                                            name=\"dateReleased\"\r\n                                                            field={field}\r\n                                                            type=\"datetime-local\"\r\n                                                            errors={errors}\r\n                                                            touched={touched}\r\n                                                            onChangeAction={setFieldValue}\r\n                                                            id=\"date_released\"\r\n                                                            placeholder={'Datum uitgebracht'}\r\n                                                            step=\"900\"\r\n                                                        />\r\n                                                    )}\r\n                                                />\r\n                                                {initialQuotationRequest.opportunityAction.codeRef ===\r\n                                                'subsidy-request' ? (\r\n                                                    <>\r\n                                                        <FormLabel\r\n                                                            htmlFor=\"date_approved_client\"\r\n                                                            className={'field-label'}\r\n                                                        >\r\n                                                            Datum akkoord bewoner\r\n                                                        </FormLabel>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className={`text-input w-input content`}\r\n                                                            value={\r\n                                                                initialQuotationRequest.dateApprovedClient\r\n                                                                    ? moment(\r\n                                                                          initialQuotationRequest.dateApprovedClient\r\n                                                                      ).format('L')\r\n                                                                    : ''\r\n                                                            }\r\n                                                            readOnly={true}\r\n                                                        />\r\n                                                    </>\r\n                                                ) : null}\r\n                                                <FormLabel htmlFor=\"date_approved_external\" className={'field-label'}>\r\n                                                    Datum akkoord extern\r\n                                                </FormLabel>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    className={`text-input w-input content`}\r\n                                                    value={\r\n                                                        initialQuotationRequest.dateApprovedExternal\r\n                                                            ? moment(\r\n                                                                  initialQuotationRequest.dateApprovedExternal\r\n                                                              ).format('L')\r\n                                                            : ''\r\n                                                    }\r\n                                                    readOnly={true}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <ButtonGroup className=\"float-right\">\r\n                                                    <Button\r\n                                                        variant={'outline-dark'}\r\n                                                        size=\"sm\"\r\n                                                        onClick={function() {\r\n                                                            history.push(`/schouwen`);\r\n                                                        }}\r\n                                                    >\r\n                                                        Annuleren\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        className={'w-button'}\r\n                                                        size=\"sm\"\r\n                                                        onClick={handleSubmit}\r\n                                                        disabled={isSubmitting}\r\n                                                    >\r\n                                                        {isSubmitting ? (\r\n                                                            <span>\r\n                                                                <ClipLoader color={'white'} size={14} />\r\n                                                                Bezig met opslaan\r\n                                                            </span>\r\n                                                        ) : (\r\n                                                            'Opslaan'\r\n                                                        )}\r\n                                                    </Button>\r\n                                                </ButtonGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                );\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <InspectDetailsDocumentTable\r\n                        quotationRequestId={match.params.id}\r\n                        documents={initialQuotationRequest.documents}\r\n                        previewDocument={previewDocument}\r\n                    />\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default InspectDetails;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    fetchDocumentDetails: id => {\r\n        const requestUrl = `/jory/document/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: ['id', 'filename', 'description'],\r\n                },\r\n            },\r\n        });\r\n    },\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CustomPrevButton = props => {\r\n    const { page, pages, handlePrevClick } = props;\r\n    if (page === 1) return <div />;\r\n\r\n    return (\r\n        <h3\r\n            style={{ cursor: 'pointer', display: 'inline-block', marginRight: 24, marginTop: 0 }}\r\n            onClick={handlePrevClick}\r\n        >\r\n            {'<'}\r\n        </h3>\r\n    );\r\n};\r\nCustomPrevButton.propTypes = {\r\n    page: PropTypes.number.isRequired,\r\n    pages: PropTypes.number.isRequired,\r\n    handlePrevClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport const CustomNextButton = props => {\r\n    const { page, pages, handleNextClick } = props;\r\n    if (page === pages) return <div />;\r\n\r\n    return (\r\n        <h3\r\n            style={{ cursor: 'pointer', display: 'inline-block', marginLeft: 24, marginTop: 0 }}\r\n            onClick={handleNextClick}\r\n        >\r\n            {'>'}\r\n        </h3>\r\n    );\r\n};\r\nCustomNextButton.propTypes = {\r\n    page: PropTypes.number.isRequired,\r\n    pages: PropTypes.number.isRequired,\r\n    handleNextClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport const CustomPages = props => {\r\n    const { page, pages } = props;\r\n    return (\r\n        <h3 style={{ display: 'inline-block', marginTop: 0 }}>\r\n            Pagina {page} van {pages}\r\n        </h3>\r\n    );\r\n};\r\nCustomPages.propTypes = {\r\n    page: PropTypes.number.isRequired,\r\n    pages: PropTypes.number.isRequired,\r\n};\r\n\r\nconst CustomNavigation = props => {\r\n    const { page, pages } = props;\r\n\r\n    const { handlePrevClick, handleNextClick } = props;\r\n\r\n    return (\r\n        <div className=\"customWrapper\">\r\n            <CustomPrevButton page={page} pages={pages} handlePrevClick={handlePrevClick} />\r\n            <CustomPages page={page} pages={pages} />\r\n            <CustomNextButton page={page} pages={pages} handleNextClick={handleNextClick} />\r\n        </div>\r\n    );\r\n};\r\nCustomNavigation.propTypes = {\r\n    page: PropTypes.number.isRequired,\r\n    pages: PropTypes.number.isRequired,\r\n    handlePrevClick: PropTypes.func.isRequired,\r\n    handleNextClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CustomNavigation;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PDFViewer from 'mgr-pdf-viewer-react';\r\nimport CustomNavigation from './CustomNavigation';\r\n\r\nconst PdfViewer = props => {\r\n    const { file, scale } = props;\r\n    return (\r\n        <div className={`panel-heading`}>\r\n            <PDFViewer\r\n                document={{\r\n                    file: file,\r\n                }}\r\n                navigation={CustomNavigation}\r\n                scale={scale}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nPDFViewer.defaultProps = {\r\n    file: '',\r\n    scale: 1,\r\n};\r\n\r\nPDFViewer.propTypes = {\r\n    file: PropTypes.string,\r\n    scale: PropTypes.number,\r\n};\r\n\r\nexport default PdfViewer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport LoadingView from '../../../../components/general/LoadingView';\r\nimport fileDownload from 'js-file-download';\r\nimport { FaFileDownload, FiZoomIn, FiZoomOut } from 'react-icons/all';\r\nimport DocumentAPI from '../../../../api/document/DocumentAPI';\r\nimport PdfViewer from '../../../../components/pdf/PdfViewer';\r\nimport { Button } from 'react-bootstrap';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport QuotationRequestAPI from '../../../../api/quotation-request/QuotationRequestAPI';\r\n\r\nfunction DocumentPreview({ match, history }) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [scale, setScale] = useState(1);\r\n    const [file, setFile] = useState(null);\r\n    const [initialDocument, setInitialDocument] = useState({});\r\n\r\n    useEffect(() => {\r\n        DocumentAPI.fetchDocumentDetails(match.params.id)\r\n            .then(payload => {\r\n                setInitialDocument(payload.data.data);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 403) {\r\n                    alert('Niet geautoriseerd voor dit document.');\r\n                } else {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuwd.');\r\n                }\r\n            });\r\n        QuotationRequestAPI.quotationRequestDownloadDocument(match.params.quotationRequestId, match.params.id)\r\n            .then(payload => {\r\n                setFile(payload.data);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 403) {\r\n                    alert('Niet geautoriseerd voor dit document.');\r\n                } else {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuwd.');\r\n                }\r\n            });\r\n\r\n        setLoading(false);\r\n        // });\r\n    }, []);\r\n\r\n    function zoomIn() {\r\n        setScale(scale + 0.2);\r\n    }\r\n\r\n    function zoomOut() {\r\n        setScale(scale - 0.2);\r\n    }\r\n\r\n    function downloadFile(e) {\r\n        e.preventDefault();\r\n\r\n        QuotationRequestAPI.quotationRequestDownloadDocument(match.params.quotationRequestId, match.params.id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, initialDocument.filename);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    {file && initialDocument.filename && initialDocument.filename.toLowerCase().endsWith('.pdf') ? (\r\n                        <>\r\n                            <Row className={'mb-1'}>\r\n                                <Col xs={12} md={10}>\r\n                                    <ButtonGroup aria-label=\"document-preview\" className=\"w-button-group-left\">\r\n                                        <Button className={'w-button btn-sm'} onClick={() => zoomIn()}>\r\n                                            <FiZoomIn />\r\n                                            &nbsp;Inzoomen\r\n                                        </Button>\r\n                                        <Button className={'w-button btn-sm'} onClick={() => zoomOut()}>\r\n                                            <FiZoomOut />\r\n                                            &nbsp;Uitzoomen\r\n                                        </Button>\r\n                                        <Button className={'w-button btn-sm'} onClick={e => downloadFile(e)}>\r\n                                            <FaFileDownload />\r\n                                            &nbsp;Downloaden\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <PdfViewer file={file} scale={scale} />\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    ) : null}\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default DocumentPreview;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Switch } from 'react-router-dom';\r\nimport ProtectedRoute from './route/ProtectedRoute';\r\nimport PublicRoute from './route/PublicRoute';\r\nimport { AuthProvider } from './context/AuthContext';\r\nimport { PortalUserProvider } from './context/PortalUserContext';\r\nimport Login from './container/authorization/login';\r\nimport TwoFactorConfirm from './container/authorization/two-factor';\r\nimport TwoFactorRecover from './container/authorization/two-factor/recover';\r\nimport Register from './container/authorization/register';\r\nimport Forgot from './container/authorization/forgot';\r\nimport Reset from './container/authorization/reset';\r\nimport Dashboard from './container/dashboard';\r\nimport ContactDetails from './container/contact-details';\r\nimport MyAreasOfInterest from './container/my-areas-of-interest';\r\nimport RegisterProject from './container/register';\r\nimport ProjectList from './container/project/list';\r\nimport ProjectDetails from './container/project/details';\r\nimport RegistrationList from './container/registration/list';\r\nimport NewAccount from './container/authorization/new-account';\r\nimport NewAccountSuccess from './container/authorization/new-account/NewAccountSuccess';\r\nimport ChangeAccount from './container/authorization/change-account';\r\nimport AboutUs from './container/about-us/list';\r\nimport RegistrationDetails from './container/registration/details';\r\nimport FinancialOverviewDocuments from './container/financial-overview-documents/list';\r\nimport { ThemeSettingsProvider } from './context/ThemeSettingsContext';\r\nimport AboutUsAdministration from './container/about-us/details';\r\nimport ProjectMollieRedirectWithContext from './container/register/mollie-redirect';\r\nimport CoachInspectList from './container/inspect/list';\r\nimport CoachInspectDetails from './container/inspect/details';\r\nimport DocumentPreview from './container/inspect/details/document';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <AuthProvider>\r\n                <PortalUserProvider>\r\n                    <ThemeSettingsProvider>\r\n                        <Switch>\r\n                            <ProtectedRoute exact path=\"/\" component={Dashboard} />\r\n                            <ProtectedRoute path=\"/dashboard\" component={Dashboard} />\r\n                            <ProtectedRoute path=\"/gegevens\" component={ContactDetails} />\r\n                            <ProtectedRoute path=\"/mijn-interessegebieden\" component={MyAreasOfInterest} />\r\n                            <ProtectedRoute\r\n                                path=\"/inschrijven/mollie-resultaat/:code\"\r\n                                component={ProjectMollieRedirectWithContext}\r\n                            />\r\n                            <ProtectedRoute path=\"/inschrijven/:id\" component={RegisterProject} />\r\n                            <ProtectedRoute path=\"/inschrijven-projecten\" component={ProjectList} />\r\n                            <ProtectedRoute path=\"/inschrijvingen-projecten\" component={RegistrationList} />\r\n                            <ProtectedRoute path=\"/project-deelname/:id\" component={RegistrationDetails} />\r\n                            <ProtectedRoute path=\"/project/:id\" component={ProjectDetails} />\r\n                            <ProtectedRoute path=\"/waardestaat-documenten\" component={FinancialOverviewDocuments} />\r\n                            <ProtectedRoute path=\"/wijzig-inloggegevens\" component={ChangeAccount} />\r\n                            <ProtectedRoute path=\"/over-ons\" component={AboutUs} />\r\n                            <ProtectedRoute path=\"/over-ons-organisatie/:id\" component={AboutUsAdministration} />\r\n                            <ProtectedRoute\r\n                                path=\"/schouwen/:quotationRequestId/document/:id\"\r\n                                component={DocumentPreview}\r\n                            />\r\n                            <ProtectedRoute path=\"/schouwen/:id\" component={CoachInspectDetails} />\r\n                            <ProtectedRoute path=\"/schouwen\" component={CoachInspectList} />\r\n                            <PublicRoute path=\"/login\" component={Login} />\r\n                            <PublicRoute path=\"/two-factor/confirm\" component={TwoFactorConfirm} />\r\n                            <PublicRoute path=\"/two-factor/recover\" component={TwoFactorRecover} />\r\n                            <PublicRoute path=\"/activeer-registratie/:registrationCode/:email\" component={Register} />\r\n                            <PublicRoute path=\"/wachtwoord-vergeten\" component={Forgot} />\r\n                            <PublicRoute path=\"/wachtwoord-wijzigen/:token/:email\" component={Reset} />\r\n                            <PublicRoute path=\"/nieuw-account\" component={NewAccount} />\r\n                            <PublicRoute path=\"/nieuw-account-succes\" component={NewAccountSuccess} />\r\n                        </Switch>\r\n                    </ThemeSettingsProvider>\r\n                </PortalUserProvider>\r\n            </AuthProvider>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/normalize.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-day-picker/lib/style.css';\r\nimport './css/webflow.css';\r\nimport './css/econobis.webflow.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'moment/locale/nl';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// Server data is set and can now removed\r\nvar serverDataScript = document.getElementById('server-data');\r\nserverDataScript.remove();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}