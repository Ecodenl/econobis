{"version":3,"sources":["context/AuthContext.js","context/PortalUserContext.js","context/ThemeSettingsContext.js","components/layout/Header.js","api/default-setup/AxiosInstance.js","api/portal-user/PortalUserAPI.js","route/ProtectedRoute.js","route/PublicRoute.js","components/form/InputText.js","components/button/ButtonText.js","container/authorization/login/Form.js","api/auth/AuthAPI.js","api/portal-settings/PortalSettingsAPI.js","container/authorization/login/index.js","container/authorization/register/Form.js","container/authorization/register/index.js","container/authorization/forgot/Form.js","container/authorization/forgot/index.js","container/authorization/reset/Form.js","container/authorization/reset/index.js","components/general/LoadingView.js","api/contact/ContactAPI.js","helpers/RebaseContact.js","container/dashboard/widget/index.js","container/dashboard/widget/default.js","api/dashboard/DashboardSettingsAPI.js","container/dashboard/index.js","components/general/TextBlock.js","container/contact-details/default-form-personal/View.js","components/form/Select.js","data/Countries.js","data/EnergySuppliers.js","data/Titles.js","data/LastNamePrefixes.js","components/form/InputTextDate.js","container/contact-details/default-form-personal/Edit.js","helpers/ValidationSchemaPersonal.js","container/contact-details/Personal.js","container/contact-details/default-form-organisation/View.js","container/contact-details/default-form-organisation/Edit.js","helpers/ValidationSchemaOrganisation.js","container/contact-details/Organisation.js","container/contact-details/index.js","container/my-areas-of-interest/Form.js","container/my-areas-of-interest/index.js","api/project/ProjectAPI.js","helpers/MoneyPresenter.js","helpers/CalculateTransactionCosts.js","components/form/InputTextCurrency.js","container/register/steps/StepOneLoan.js","container/register/steps/StepOneObligation.js","container/register/steps/StepOneCapital.js","container/register/steps/StepOnePcr.js","container/register/steps/StepTwo.js","container/register/steps/StepThree.js","components/general/ViewHtmlAsText.js","api/participant-project/ParticipantProjectAPI.js","container/register/steps/StepFour.js","container/register/steps/StepFive.js","container/register/steps/index.js","container/register/MasterForm.js","container/register/index.js","container/project/list/address-person/Edit.js","container/project/list/address-organisation/Edit.js","container/project/list/index.js","container/project/details/LoanDetails.js","container/project/details/ObligationDetails.js","container/project/details/CapitalDetails.js","container/project/details/PcrDetails.js","container/project/details/index.js","container/registration/list/index.js","container/authorization/new-account/NewAccountFormPersonal.js","container/authorization/new-account/NewAccountFormOrganisation.js","container/authorization/new-account/index.js","container/authorization/new-account/NewAccountSuccess.js","container/authorization/change-account/Email.js","container/authorization/change-account/Password.js","container/authorization/change-account/index.js","container/about-us/list/index.js","container/registration/details/Title.js","helpers/ValueBasedOnTypePresenter.js","container/registration/details/project-table/index.js","helpers/classNameBasedOnTypePresenter.js","container/registration/details/mutation-table/index.js","container/registration/details/document-table/index.js","container/registration/details/index.js","container/financial-overview-documents/list/index.js","api/administration/AdministrationAPI.js","container/about-us/details/document-table/index.js","container/about-us/details/index.js","api/participant-mutation/ParticipantMutationAPI.js","container/register/mollie-redirect/index.js","api/quotation-request/QuotationRequestAPI.js","container/inspect/list/index.js","container/inspect/details/index.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","localStorageToken","AuthProvider","props","useState","window","localStorage","getItem","checkIfAuth","isAuth","setAuth","Provider","value","login","payload","cbRedirect","token","access_token","removeItem","setItem","moment","format","logout","children","AuthConsumer","Consumer","PortalUserContext","user","setInitialUserData","PortalUserProvider","setUser","currentSelectedContact","setCurrentContact","selectedContactId","id","occupationUser","occupations","find","occupation","primaryContact","organisationUser","typeId","primary","switchCurrentContact","contact","resetCurrentUserToDefault","updateNameSelectedContact","fullNameFnf","firstName","lastNamePrefix","lastName","updatedOccupations","map","occupationContact","PortalUserConsumer","ThemeSettingsContext","defaultThemeSettings","setInitialThemeSettings","setCurrentThemeSettings","switchToDefaultThemeSettings","ThemeSettingsProvider","setDefaultThemeSettings","currentThemeSettings","Date","now","imageHash","useEffect","document","documentElement","style","setProperty","portal_image_bg_file_name_header","portal_main_background_color","portal_main_text_color","portal_background_color","portal_background_text_color","login_header_background_color","login_header_background_text_color","header_icons_color","login_field_background_color","login_field_background_text_color","button_color","button_text_color","ThemeSettingsConsumer","withRouter","location","history","menuOpen","updateStateMenu","closeMenu","formatProfilePicName","replace","redirect","to","push","ref","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","useOutsideAlerter","useRef","className","isCoach","length","ReactHtmlParser","alignRight","Toggle","marginTop","Menu","Header","Item","onClick","active","occupationForPortal","key","xs","undefined","portal_logo_file_name_header","src","fontSize","marginLeft","padding","disabled","Divider","pathname","Button","right","width","isOpen","onStateChange","state","handleStateChange","customBurgerIcon","Fragment","hasFinancialOverviews","BASE_URL","__SERVER_DATA__","base_url","axiosInstance","axios","create","baseURL","interceptors","request","use","config","lastActivity","add","hash","setTimeout","reload","checkTokenExpiration","AUTH_TOKEN","headers","Authorization","error","Promise","reject","get","params","jory","fld","rlt","values","post","ProtectedRoute","Component","component","rest","useLocation","useContext","PortalUserAPI","then","data","portalSettingsLayoutAssigned","catch","alert","includes","render","ProtectedRouteWithContext","PublicRoute","InputText","field","type","readOnly","placeholder","showErrorMessage","errors","touched","classNameErrorMessage","customOnChange","onChange","name","Boolean","defaultProps","ButtonText","buttonClassName","buttonText","onClickAction","loading","title","loadingSpinnerColor","size","color","validationSchema","Yup","shape","username","email","required","password","LoginForm","handleSubmit","initialValues","enableReinitialize","onSubmit","actions","setSubmitting","isSubmitting","AUTH_KEY","client_id","client_secret","client_key","grant_type","requestUrl","defaults","common","loginCredentials","keys","isLoading","setIsLoading","showError","toggleError","redirectToReferrer","toggleRedirect","from","portalActive","setPortalActive","showNewAtCooperativeLink","setShowNewAtCooperativeLink","newAtCooperativeLinkText","setNewAtCooperativeLinkText","AuthAPI","PortalSettingsAPI","fluid","sm","md","lg","xl","alt","variant","href","min","matches","passwordConfirmation","oneOf","RegisterForm","Register","match","showLoginLink","setLoginLink","errorMessage","setErrorMessage","showSuccessMessage","toggleSuccessMessage","registrationCode","decodeURIComponent","password_confirmation","response","message","status","RegisterWithContext","ForgotForm","Forgot","ResetForm","Reset","ResetWithContext","Loading","height","person","organisation","emailAddresses","phoneNumbers","addresses","country","primaryAddressEnergySupplierElectricity","energySupplier","flt","f","d","participations","project","projectType","administration","registerValues","contactId","projectId","responseType","contactData","emptyPrimaryAddressEnergySupplierElectricity","energySupplierId","esNumber","memberSince","emptyAddress","street","number","addition","postalCode","city","countryId","eanElectricity","eanGas","primaryAddress","visitAddress","postalAddress","invoiceAddress","address","emptyEmail","emailCorrespondence","emailAddress","emailInvoice","emptyPhoneNumber","phoneNumberPrimary","phoneNumber","phoneNumberTwo","filter","DashboardWidget","text","image","buttonLink","backgroundColorUsed","textColorUsed","useHistory","externalLink","toLowerCase","startsWith","Card","backgroundColor","CardImg","whiteSpace","ContactDetailsDashboardWidget","typeContact","isEmpty","SwitchContactDashboardWidget","display","justifyContent","overflowX","margin","Dashboard","setLoading","setContact","dashboardSettings","setDashboardSettings","prevCurrentSelectedContact","usePrevious","ContactAPI","rebaseContact","console","log","finally","DashboardSettingsAPI","LoadingView","welcomeTitle","welcomeMessage","widgets","w","sort","a","b","order","widget","codeRef","widgetImageFileName","defaultWidgetBackgroundColor","defaultWidgetTextColor","CoachDashboard","DashboardWithContext","TextBlock","showPlaceholder","DefaultContactPersonalView","portalSettings","initialContact","iban","ibanAttn","didAgreeAvg","dateDidAgreeAvg","initials","dateOfBirth","checked","htmlFor","Select","options","optionLabel","emptyOption","option","InputTextDate","max","DefaultContactPersonalEdit","projectTypeCodeRef","setFieldValue","memberSinceDisabledBefore","memberSinceDisabledAfter","endDatePrevious","memberSinceNext","subtract","Titles","disableChangeContactNameOnPortal","data-tip","data-for","effect","place","multiline","aria-haspopup","LastNamePrefixes","isParticipant","onChangeAction","blockChangeAddress","blockChangeAddressNumber","isParticipantSceProject","isParticipantPcrProject","isNaN","trim","Countries","e","toUpperCase","EnergySuppliers","validationSchemaBasic","test","nullable","Number","isInteger","this","parent","search","ibantools","validationSchemaAdditional","typeError","validationSchemaPcrAdditional","validationSchemaPostalCodeAndNumber","ContactDetailsPersonal","handleSubmitContactValues","editButtonGroup","editForm","setEditForm","ValidationSchemaPersonal","concat","aria-label","DefaultContactOrganisationView","primaryOccupations","chamberOfCommerceNumber","vatNumber","website","DefaultContactOrganisationEdit","ContactDetailsOrganisation","ValidationSchemaOrganisation","ContactDetails","setPortalSettings","callFetchContact","switchToView","updatedContact","setStatus","setState","hasError","ContactDetailsWithContext","MyAreasOfInterestForm","arrayHelpers","myAreasOfInterest","myAreaOfInterest","index","participation","generalOptions","generalOption","MyAreasOfInterest","and","o","documentAgreeTerms","documentUnderstandInfo","documentProjectInfo","amount","parseFloat","toLocaleString","minimumFractionDigits","maximumFractionDigits","amountOptioned","participationsOptioned","transactionCosts","varAmountOptioned","toString","varParticipationsOptioned","toFixed","transactionCostsCodeRef","transactionCostsAmount","currentBookWorth","transactionCostsAmount3","transactionCostsPercentage3","transactionCostsAmount2","transactionCostsPercentage2","transactionCostsPercentage","transactionCostsAmountMin","transactionCostsAmountMax","InputTextCurrency","StepOneLoan","next","contactProjectData","initialRegisterValues","handleSubmitRegisterValues","transform","originalvalue","minAmountLoan","maxAmountLoan","choiceMembership","showQuestionAboutMembership","belongsToMembershipGroup","calculateAmount","calculateTransactionCostsAmount","useTransactionCostsWithMembership","calculateTransactionCosts","calculateTotalAmount","totalAmount","Label","MoneyPresenter","textIsMemberMerged","textIsNoMemberMerged","textBecomeMemberMerged","textBecomeNoMemberMerged","textTransactionCosts","StepOneObligation","integer","minParticipations","maxParticipations","positive","StepOneCapital","StepOnePcr","pcrYearlyPowerKwhConsumption","pcrPostalCode","checkPostalcodeLink","postalcodeLink","substring","pcrNumberOfSolarPanels","pcrInputGeneratedNumberOfKwh","PCR_POWER_KWH_CONSUMPTION_PERCENTAGE","PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL","calculateEstimatedGeneratedNumberOfKwh","calculateGeneratedNumberOfKwh","calculatePowerKwhConsumption","powerKwhConsumption","pcrEstimatedGeneratedNumberOfKwh","Math","ceil","pcrAdviseMaxNumberOfParticipations","calculateAdviseMaxNumberOfParticipations","pcrHasSolarPanels","pcrEstimatedRevenueOk","StepTwo","previous","StepThree","didAcceptAgreement","didUnderstandInfo","downloadFile","filename","preventDefault","ProjectAPI","fileDownload","dangerouslySetInnerHTML","__html","textAgreeTermsMerged","textLinkAgreeTermsMerged","textLinkUnderstandInfoMerged","usesMollie","ViewHtmlAsText","participantId","StepFour","setSucces","contactDocument","setContactDocument","didAgreeRegistration","contactDocumentOk","ParticipantProjectAPI","econobisPaymentLink","textAcceptAgreementMerged","textAcceptAgreementQuestionMerged","StepFive","textRegistrationFinishedMerged","split","item","Steps","currentStep","MasterForm","setStep","RegisterProject","initialPcrValues","setRegisterValues","setProject","isSucces","setContactProjectData","all","spread","payloadProject","payloadContact","payloadContactProjectData","projectRegisterIndicators","allowChangeParticipation","allowPayMollie","hasParticipation","allowRegisterToProject","nextStep","textNotAllowedRegisterToProject","RegisterProjectWithContext","PersonalAddressEdit","handleSubmitContactAddressValues","OrganisationAddressEdit","ProjectList","contactProjectsArray","setContactProjectsArray","sceOrPcrProjectsAvailable","setSceOrPcrProjectsAvailable","callFetchContactProjects","isSceOrPcrProject","noAddressesFound","responsive","administrationName","dateStartRegistrations","dateEndRegistrations","ProjectListWithContext","LoanDetails","amountOfLoanNeeded","description","ObligationDetails","totalParticipations","CapitalDetails","PcrDetails","ProjectDetails","renderDetails","linkProjectInfo","RegistrationList","dateEnd","amountInteressed","amountGranted","amountDefinitive","participationsInteressed","participationsGranted","participationsDefinitive","RegistrationListWithContext","personFirstName","personLastName","NewAccountFormPersonal","personTitleId","organisationName","NewAccountFormOrganisation","NewAccount","executeRecaptcha","useGoogleReCaptcha","contactType","setContactType","reCaptchaToken","ButtonToolbar","toggle","block","NewAccountWithProvider","reCaptchaKey","process","language","NewAccountSuccess","close","ChangeAccountEmail","portalUserEmail","setPortalUserEmail","changePrimaryEmailAddress","resetForm","handleSubmitChangeEmail","ChangeAccountPassword","handleSubmitChangePassword","ChangeAccount","INITIAL_STATE","result","reducer","action","AboutUs","useReducer","dispatch","hasSingleRelatedAdministration","setHasSingleRelatedAdministration","singleRelatedAdministration","RegistrationDetailsTitle","contactName","projectName","moneyPresenter","RegistrationDetailsProjectTable","fields","label","valueBasedOnTypePresenter","RegistrationDetailsMutationTable","participantMutations","participantMutation","classNameBasedOnTypePresenter","RegistrationDetailsDocumentTable","documents","relatedDocumentsOnPortal","relatedDocumentsProjectOnPortal","RegistrationDetails","basicInformation","FinancialOverviewDocuments","documentsOnPortal","administrationId","AboutUsDocumentTable","AdministrationAPI","AboutUsAdministration","setAdministration","websiteLink","setWebsiteLink","Body","kvkNumber","iBAN","btwNumber","code","ProjectMollieRedirect","setParticipantMutation","ParticipantMutationAPI","payloadParticipantMutation","isPaidByMollie","textRegistrationFinished","ProjectMollieRedirectWithContext","quotationRequest","Inspectlist","quotationRequestsArray","setQuotationRequestsArray","QuotationRequestAPI","opportunity","intake","fullName","streetPostalCodeCity","datePlanned","dateRecorded","dateApprovedExternal","dateReleased","dateApprovedProjectManager","dateApprovedClient","InspectlistWithContext","InspectDetails","initialQuotationRequest","setInitialQuotationRequest","primaryphoneNumber","primaryEmailAddress","opportunityAction","App","exact","path","CoachInspectDetails","CoachInspectList","Login","hostname","ReactDOM","getElementById","remove","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.23a08791.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nconst localStorageToken = '__customer-portal-econobis-token__';\r\nconst localStorageLastActivity = '__customer-portal-econobis-last-activity__';\r\nconst localStorageCurrentSelectedContact = '__customer-portal-econobis-current_selected_contact__';\r\n\r\nconst AuthProvider = function(props) {\r\n    const [isAuth, setAuth] = useState(checkIfAuth());\r\n\r\n    function login(payload, cbRedirect) {\r\n        const token = payload.access_token;\r\n        window.localStorage.removeItem(localStorageCurrentSelectedContact);\r\n        window.localStorage.setItem(localStorageToken, token);\r\n        localStorage.setItem(localStorageLastActivity, moment().format());\r\n        setAuth(true);\r\n        cbRedirect();\r\n    }\r\n\r\n    function logout() {\r\n        window.localStorage.removeItem(localStorageToken);\r\n        window.localStorage.removeItem(localStorageLastActivity);\r\n        setAuth(false);\r\n    }\r\n\r\n    function checkIfAuth() {\r\n        const token = getToken();\r\n        if (!token) {\r\n            // Redirect to login\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getToken() {\r\n        return window.localStorage.getItem(localStorageToken);\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isAuth: isAuth,\r\n                login: login,\r\n                logout: logout,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nconst AuthConsumer = AuthContext.Consumer;\r\n\r\nexport { AuthProvider, AuthConsumer };\r\n","import React, { createContext, useState } from 'react';\r\n\r\nconst localStorageCurrentSelectedContact = '__customer-portal-econobis-current_selected_contact__';\r\n\r\nconst PortalUserContext = createContext({\r\n    user: {},\r\n    setInitialUserData: () => {},\r\n});\r\n\r\nconst PortalUserProvider = function(props) {\r\n    const [user, setUser] = useState({});\r\n    const [currentSelectedContact, setCurrentContact] = useState({});\r\n\r\n    function setInitialUserData(user) {\r\n        setUser(user);\r\n\r\n        const selectedContactId = window.localStorage.getItem(localStorageCurrentSelectedContact);\r\n\r\n        // When there is already a selected contact id then lookup the contact\r\n        // Selected contact could be the user or one of the occupations\r\n        if (selectedContactId) {\r\n            if (user.id == selectedContactId) {\r\n                setCurrentContact(user);\r\n            } else {\r\n                const occupationUser = user.occupations.find(\r\n                    occupation => occupation.primaryContact.id == selectedContactId\r\n                );\r\n\r\n                setCurrentContact(occupationUser.primaryContact);\r\n            }\r\n        } else {\r\n            // If there is no selected contact then set default the login user as selected contact.\r\n            // Except if the user has an organisation as occupation that is primary\r\n            const organisationUser = user.occupations.find(\r\n                occupation => occupation.primaryContact.typeId === 'organisation' && occupation.primary\r\n            );\r\n\r\n            if (organisationUser) {\r\n                setCurrentContact(organisationUser.primaryContact);\r\n                window.localStorage.setItem(localStorageCurrentSelectedContact, organisationUser.primaryContact.id);\r\n            } else {\r\n                setCurrentContact(user);\r\n                window.localStorage.setItem(localStorageCurrentSelectedContact, user.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    function switchCurrentContact(contact) {\r\n        setCurrentContact(contact);\r\n        window.localStorage.setItem(localStorageCurrentSelectedContact, contact.id);\r\n    }\r\n\r\n    function resetCurrentUserToDefault() {\r\n        setUser({});\r\n        setCurrentContact({});\r\n    }\r\n\r\n    function updateNameSelectedContact(fullNameFnf, typeId, firstName, lastNamePrefix, lastName) {\r\n        setCurrentContact({ ...currentSelectedContact, fullNameFnf, typeId, firstName, lastNamePrefix, lastName });\r\n\r\n        if (user.id === currentSelectedContact.id) {\r\n            user.fullNameFnf = fullNameFnf;\r\n            user.typeId = typeId;\r\n            user.firstName = firstName;\r\n            user.lastNamePrefix = lastNamePrefix;\r\n            user.lastName = lastName;\r\n        }\r\n\r\n        const updatedOccupations = user.occupations.map(occupationContact => {\r\n            if (occupationContact.primaryContact.id === currentSelectedContact.id) {\r\n                occupationContact.primaryContact.fullNameFnf = fullNameFnf;\r\n                occupationContact.primaryContact.typeId = typeId;\r\n                occupationContact.primaryContact.firstName = firstName;\r\n                occupationContact.primaryContact.lastNamePrefix = lastNamePrefix;\r\n                occupationContact.primaryContact.lastName = lastName;\r\n            }\r\n            return occupationContact;\r\n        });\r\n\r\n        setUser({ ...user, occupations: updatedOccupations });\r\n    }\r\n\r\n    return (\r\n        <PortalUserContext.Provider\r\n            value={{\r\n                user: user,\r\n                setInitialUserData,\r\n                currentSelectedContact,\r\n                switchCurrentContact,\r\n                resetCurrentUserToDefault,\r\n                updateNameSelectedContact,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PortalUserContext.Provider>\r\n    );\r\n};\r\n\r\nconst PortalUserConsumer = PortalUserContext.Consumer;\r\n\r\nexport { PortalUserProvider, PortalUserConsumer, PortalUserContext };\r\n","import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeSettingsContext = createContext({\r\n    defaultThemeSettings: {},\r\n    setInitialThemeSettings: () => {},\r\n    setCurrentThemeSettings: () => {},\r\n    switchToDefaultThemeSettings: () => {},\r\n});\r\n\r\nconst ThemeSettingsProvider = function(props) {\r\n    const [defaultThemeSettings, setDefaultThemeSettings] = useState({});\r\n    const [currentThemeSettings, setCurrentThemeSettings] = useState({});\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    useEffect(\r\n        function() {\r\n            if (currentThemeSettings.id) {\r\n                handleChangeCurrentThemeSettings();\r\n            }\r\n        },\r\n        [currentThemeSettings.id]\r\n    );\r\n\r\n    function setInitialThemeSettings(payload) {\r\n        setDefaultThemeSettings(payload);\r\n        setCurrentThemeSettings(payload);\r\n    }\r\n\r\n    function switchToDefaultThemeSettings() {\r\n        setCurrentThemeSettings(defaultThemeSettings);\r\n    }\r\n\r\n    function handleChangeCurrentThemeSettings() {\r\n        document.documentElement.style.setProperty(\r\n            '--main-header-background-image-url',\r\n            'url(images/' + currentThemeSettings.portal_image_bg_file_name_header + '?' + imageHash + ')'\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--portal-main-background-color',\r\n            currentThemeSettings.portal_main_background_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--portal-main-text-color',\r\n            currentThemeSettings.portal_main_text_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--portal-background-color',\r\n            currentThemeSettings.portal_background_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--portal-background-text-color',\r\n            currentThemeSettings.portal_background_text_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--main-primary-rgba',\r\n            currentThemeSettings.login_header_background_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--main-primary-rgba-text-color',\r\n            currentThemeSettings.login_header_background_text_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--main-header-portal-icon-color',\r\n            currentThemeSettings.header_icons_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--main-secondary-color',\r\n            currentThemeSettings.login_field_background_color\r\n        );\r\n        document.documentElement.style.setProperty(\r\n            '--main-secondary-text-color',\r\n            currentThemeSettings.login_field_background_text_color\r\n        );\r\n        document.documentElement.style.setProperty('--button-primary-color', currentThemeSettings.button_color);\r\n        document.documentElement.style.setProperty(\r\n            '--button-primary-text-color',\r\n            currentThemeSettings.button_text_color\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ThemeSettingsContext.Provider\r\n            value={{\r\n                defaultThemeSettings,\r\n                setInitialThemeSettings,\r\n                setCurrentThemeSettings,\r\n                switchToDefaultThemeSettings,\r\n                currentThemeSettings,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ThemeSettingsContext.Provider>\r\n    );\r\n};\r\n\r\nconst ThemeSettingsConsumer = ThemeSettingsContext.Consumer;\r\n\r\nexport { ThemeSettingsProvider, ThemeSettingsConsumer, ThemeSettingsContext };\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport { AuthConsumer } from '../../context/AuthContext';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { PortalUserConsumer } from '../../context/PortalUserContext';\r\nimport { ThemeSettingsConsumer } from '../../context/ThemeSettingsContext';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { FaHome, FaUser } from 'react-icons/fa';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction Header({ location, history }) {\r\n    const [menuOpen, updateStateMenu] = useState(false);\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    // This keeps your state in sync with the opening/closing of the menu\r\n    // via the default means, e.g. clicking the X, pressing the ESC key etc.\r\n    function handleStateChange(state) {\r\n        updateStateMenu(state.isOpen);\r\n    }\r\n\r\n    // This can be used to close the menu, e.g. when a user clicks a menu item\r\n    function openMenu() {\r\n        updateStateMenu(true);\r\n    }\r\n\r\n    // This can be used to close the menu, e.g. when a user clicks a menu item\r\n    function closeMenu() {\r\n        updateStateMenu(false);\r\n    }\r\n\r\n    // This can be used to toggle the menu, e.g. when using a custom icon\r\n    // Tip: You probably want to hide either/both default icons if using a custom icon\r\n    // See https://github.com/negomi/react-burger-menu#custom-icons\r\n    function toggleMenu() {\r\n        updateStateMenu(!menuOpen);\r\n    }\r\n\r\n    function formatProfilePicName(currentSelectedContact) {\r\n        if (currentSelectedContact.typeId === 'person') {\r\n            return (\r\n                currentSelectedContact.firstName +\r\n                (currentSelectedContact.lastNamePrefix ? ' ' + currentSelectedContact.lastNamePrefix : '') +\r\n                (currentSelectedContact.firstName || currentSelectedContact.lastNamePrefix ? '<br>' : '') +\r\n                currentSelectedContact.lastName\r\n            );\r\n        } else if (currentSelectedContact.typeId === 'organisation') {\r\n            return currentSelectedContact.fullNameFnf.replace(/\\s(?=\\S*$)/, '<br>');\r\n        } else {\r\n            return '?';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hook that alerts clicks outside of the passed ref\r\n     */\r\n    function useOutsideAlerter(ref) {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                updateStateMenu(false);\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            // Bind the event listener\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n            return () => {\r\n                // Unbind the event listener on clean up\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            };\r\n        });\r\n    }\r\n\r\n    const wrapperRef = useRef(null);\r\n    useOutsideAlerter(wrapperRef);\r\n\r\n    function redirect(to) {\r\n        history.push(`/${to}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <div className=\"header-portal\">\r\n                    <div className=\"profile-pic\">\r\n                        <PortalUserConsumer>\r\n                            {({ user, currentSelectedContact, switchCurrentContact, resetCurrentUserToDefault }) => {\r\n                                if (user.isCoach || !user.occupations || user.occupations.length < 1) {\r\n                                    return <>{ReactHtmlParser(formatProfilePicName(currentSelectedContact))}</>;\r\n                                }\r\n\r\n                                return (\r\n                                    <Dropdown alignRight>\r\n                                        <Dropdown.Toggle style={{ marginTop: '0' }}>\r\n                                            {ReactHtmlParser(formatProfilePicName(currentSelectedContact))}\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu>\r\n                                            <Dropdown.Header>Beheren van</Dropdown.Header>\r\n                                            <Dropdown.Item\r\n                                                onClick={() => {\r\n                                                    switchCurrentContact(user);\r\n                                                    redirect('dashboard');\r\n                                                }}\r\n                                                active={currentSelectedContact.id === user.id ? true : false}\r\n                                            >\r\n                                                {user.fullNameFnf}\r\n                                            </Dropdown.Item>\r\n                                            {user.occupations && user.occupations.length > 0\r\n                                                ? user.occupations.map(occupationContact =>\r\n                                                      (occupationContact.primaryContact.typeId === 'organisation' &&\r\n                                                          occupationContact.primary) ||\r\n                                                      (occupationContact.primaryContact.typeId === 'person' &&\r\n                                                          occupationContact.occupation.occupationForPortal) ? (\r\n                                                          <Dropdown.Item\r\n                                                              key={occupationContact.id}\r\n                                                              onClick={() => {\r\n                                                                  switchCurrentContact(\r\n                                                                      occupationContact.primaryContact\r\n                                                                  );\r\n                                                                  redirect('dashboard');\r\n                                                              }}\r\n                                                              active={\r\n                                                                  currentSelectedContact.id ===\r\n                                                                  occupationContact.primaryContact.id\r\n                                                              }\r\n                                                          >\r\n                                                              {occupationContact.primaryContact.fullNameFnf}\r\n                                                          </Dropdown.Item>\r\n                                                      ) : null\r\n                                                  )\r\n                                                : null}\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                );\r\n                            }}\r\n                        </PortalUserConsumer>\r\n                    </div>\r\n\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xs={6}>\r\n                                <ThemeSettingsConsumer>\r\n                                    {({ currentThemeSettings }) => (\r\n                                        <div className=\"header-logo\">\r\n                                            {currentThemeSettings.portal_logo_file_name_header !== undefined && (\r\n                                                <Image\r\n                                                    src={`images/${currentThemeSettings.portal_logo_file_name_header}?${imageHash}`}\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                                </ThemeSettingsConsumer>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    {/* Hambuger menu */}\r\n                                    <div className=\"bm-burger-button text-center\" onClick={openMenu}>\r\n                                        <span>\r\n                                            <span className=\"bm-burger-bars bm-burger-bar-1\" />\r\n                                            <span className=\"bm-burger-bars bm-burger-bar-2\" />\r\n                                            <span className=\"bm-burger-bars bm-burger-bar-3\" />\r\n                                        </span>\r\n                                        <br />\r\n                                        <small style={{ fontSize: '10px', marginLeft: '-3.5px' }}>MENU</small>\r\n                                    </div>\r\n                                    {/* User switch menu */}\r\n                                    <AuthConsumer>\r\n                                        {({ logout }) => {\r\n                                            return (\r\n                                                <PortalUserConsumer>\r\n                                                    {({\r\n                                                        user,\r\n                                                        currentSelectedContact,\r\n                                                        switchCurrentContact,\r\n                                                        resetCurrentUserToDefault,\r\n                                                    }) => {\r\n                                                        return (\r\n                                                            <Dropdown alignRight>\r\n                                                                <Dropdown.Toggle\r\n                                                                    id={'account-dropdown'}\r\n                                                                    style={{ padding: '0', marginTop: '14px' }}\r\n                                                                >\r\n                                                                    <FaUser />\r\n                                                                    <br />\r\n                                                                    <small\r\n                                                                        className={'account-dropdown-text'}\r\n                                                                        style={{ fontSize: '10px' }}\r\n                                                                    >\r\n                                                                        ACCOUNT\r\n                                                                    </small>\r\n                                                                </Dropdown.Toggle>\r\n                                                                <Dropdown.Menu>\r\n                                                                    <Dropdown.Header>Ingelogd als</Dropdown.Header>\r\n                                                                    <Dropdown.Item disabled>\r\n                                                                        {user.fullNameFnf}\r\n                                                                    </Dropdown.Item>\r\n                                                                    <Dropdown.Item>\r\n                                                                        <Link\r\n                                                                            to={'/wijzig-inloggegevens'}\r\n                                                                            className={'dropdown-link'}\r\n                                                                        >\r\n                                                                            Wijzig inloggegevens\r\n                                                                        </Link>\r\n                                                                    </Dropdown.Item>\r\n                                                                    <Dropdown.Divider />\r\n                                                                    <Dropdown.Item\r\n                                                                        onClick={() => {\r\n                                                                            logout();\r\n                                                                            resetCurrentUserToDefault();\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        Log uit\r\n                                                                    </Dropdown.Item>\r\n                                                                </Dropdown.Menu>\r\n                                                            </Dropdown>\r\n                                                        );\r\n                                                    }}\r\n                                                </PortalUserConsumer>\r\n                                            );\r\n                                        }}\r\n                                    </AuthConsumer>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        {location.pathname !== '/' && location.pathname !== '/dashboard' ? (\r\n                            <div className=\"header-dashboard-button\">\r\n                                <Button className={'w-button btn-sm'} onClick={() => history.push('/dashboard')}>\r\n                                    <FaHome />\r\n                                    &nbsp;Dashboard\r\n                                </Button>\r\n                            </div>\r\n                        ) : null}\r\n                    </Container>\r\n                </div>\r\n                {/* Sidebar menu */}\r\n                <Menu\r\n                    right\r\n                    width={'300px'}\r\n                    // noOverlay\r\n                    isOpen={menuOpen}\r\n                    onStateChange={state => handleStateChange(state)}\r\n                    customBurgerIcon={false}\r\n                >\r\n                    <div className={'sidebar-menu'}>\r\n                        <React.Fragment>\r\n                            <h6 className=\"heading in-menu\">MENU</h6>\r\n                            <Link\r\n                                to={'/inschrijvingen-projecten'}\r\n                                className={`nav-link w-nav-link w--nav-link-open ${\r\n                                    location.pathname === '/inschrijvingen-projecten' ? 'w--current' : ''\r\n                                }`}\r\n                                onClick={closeMenu}\r\n                            >\r\n                                Huidige deelnames\r\n                            </Link>\r\n                            <Link\r\n                                to={'/gegevens'}\r\n                                className={`nav-link w-nav-link w--nav-link-open ${\r\n                                    location.pathname === '/gegevens' ? 'w--current' : ''\r\n                                }`}\r\n                                onClick={closeMenu}\r\n                            >\r\n                                Gegevens\r\n                            </Link>\r\n                            <Link\r\n                                to={'/inschrijven-projecten'}\r\n                                className={`nav-link w-nav-link w--nav-link-open ${\r\n                                    location.pathname === '/inschrijven-projecten' ? 'w--current' : ''\r\n                                }`}\r\n                                onClick={closeMenu}\r\n                            >\r\n                                Inschrijven projecten\r\n                            </Link>\r\n                            <PortalUserConsumer>\r\n                                {({\r\n                                    user,\r\n                                    currentSelectedContact,\r\n                                    switchCurrentContact,\r\n                                    resetCurrentUserToDefault,\r\n                                }) => {\r\n                                    if (currentSelectedContact && currentSelectedContact.hasFinancialOverviews) {\r\n                                        return (\r\n                                            <Link\r\n                                                to={'/waardestaat-documenten'}\r\n                                                className={`nav-link w-nav-link w--nav-link-open ${\r\n                                                    location.pathname === '/waardestaat-documenten' ? 'w--current' : ''\r\n                                                }`}\r\n                                                onClick={closeMenu}\r\n                                            >\r\n                                                Waardestaat\r\n                                            </Link>\r\n                                        );\r\n                                    }\r\n                                }}\r\n                            </PortalUserConsumer>\r\n                            <Link\r\n                                to={'/over-ons'}\r\n                                className={`nav-link w-nav-link w--nav-link-open ${\r\n                                    location.pathname === '/over-ons' ? 'w--current' : ''\r\n                                }`}\r\n                                onClick={closeMenu}\r\n                            >\r\n                                Over ons\r\n                            </Link>\r\n                        </React.Fragment>\r\n                    </div>\r\n                </Menu>\r\n            </header>\r\n            {location.pathname !== '/' && location.pathname !== '/dashboard' ? (\r\n                <div className={'floating-action-button'}>\r\n                    <Button className={'w-button'} onClick={() => history.push('/dashboard')}>\r\n                        <FaHome />\r\n                        &nbsp;Dashboard\r\n                    </Button>\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst BASE_URL = window.__SERVER_DATA__.base_url;\r\nconst localStorageToken = '__customer-portal-econobis-token__';\r\nconst localStorageLastActivity = '__customer-portal-econobis-last-activity__';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: `${BASE_URL}`,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n    function(config) {\r\n        // First check if token is expired or not\r\n        checkTokenExpiration();\r\n        // Do something before request is sent\r\n        const AUTH_TOKEN = 'Bearer ' + localStorage.getItem(localStorageToken);\r\n        config.headers.Authorization = AUTH_TOKEN;\r\n        return config;\r\n    },\r\n    function(error) {\r\n        // Do something with request error\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Check token expiration and redirect if token is expired\r\nfunction checkTokenExpiration() {\r\n    const lastActivity = moment(localStorage.getItem(localStorageLastActivity));\r\n\r\n    if (\r\n        !localStorage.getItem(localStorageLastActivity) ||\r\n        lastActivity.add('30', 'minutes').format() < moment().format()\r\n    ) {\r\n        if (window.location.hash !== '#/login' && window.location.hash !== '#/loguit') {\r\n            setTimeout(() => {\r\n                localStorage.removeItem(localStorageToken);\r\n                localStorage.removeItem(localStorageLastActivity);\r\n                window.location.reload();\r\n            }, 100);\r\n        }\r\n    } else {\r\n        localStorage.setItem(localStorageLastActivity, moment().format());\r\n    }\r\n}\r\n\r\nexport default axiosInstance;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    fetchPortalUserDetails: function() {\r\n        const requestUrl = `/me`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'number',\r\n                        'fullNameFnf',\r\n                        'typeId',\r\n                        'firstName',\r\n                        'lastNamePrefix',\r\n                        'lastName',\r\n                        'hasFinancialOverviews',\r\n                        'singleRelatedAdministration',\r\n                        'iban',\r\n                        'ibanAttn',\r\n                        'didAgreeAvg',\r\n                        'dateDidAgreeAvg',\r\n                        'addressLines',\r\n                        'portalSettingsLayoutAssigned',\r\n                        'isCoach',\r\n                    ],\r\n                    rlt: {\r\n                        occupations: {\r\n                            fld: ['id', 'occupationId', 'primaryContactId', 'contactId', 'primary'],\r\n                            rlt: {\r\n                                occupation: {\r\n                                    fld: ['id', 'primaryOccupation', 'secondaryOccupation', 'occupationForPortal'],\r\n                                },\r\n                                primaryContact: {\r\n                                    fld: [\r\n                                        'id',\r\n                                        'typeId',\r\n                                        'fullNameFnf',\r\n                                        'firstName',\r\n                                        'lastNamePrefix',\r\n                                        'lastName',\r\n                                        'hasFinancialOverviews',\r\n                                        'singleRelatedAdministration',\r\n                                    ],\r\n                                },\r\n                                contact: {\r\n                                    fld: ['id', 'typeId', 'fullNameFnf', 'firstName', 'lastNamePrefix', 'lastName'],\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    fetchPortalUserEmail: function() {\r\n        return axiosInstance.get(`/portal-user-email`);\r\n    },\r\n\r\n    changeEmail: values => {\r\n        const requestUrl = `/portal-user/change-email`;\r\n\r\n        return axiosInstance.post(requestUrl, values);\r\n    },\r\n\r\n    changePassword: values => {\r\n        const requestUrl = `/portal-user/change-password`;\r\n\r\n        return axiosInstance.post(requestUrl, values);\r\n    },\r\n};\r\n","import React, { useEffect, useContext } from 'react';\r\nimport { Route, Redirect, useLocation } from 'react-router-dom';\r\nimport { AuthConsumer } from '../context/AuthContext';\r\nimport Header from '../components/layout/Header';\r\nimport PortalUserAPI from '../api/portal-user/PortalUserAPI';\r\nimport { PortalUserConsumer } from '../context/PortalUserContext';\r\nimport { ThemeSettingsContext } from '../context/ThemeSettingsContext';\r\n\r\nconst ProtectedRoute = ({ component: Component, setInitialUserData, isAuth, ...rest }) => {\r\n    const location = useLocation();\r\n    const { setInitialThemeSettings, switchToDefaultThemeSettings } = useContext(ThemeSettingsContext);\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            (function callFetchPortalUserDetails() {\r\n                PortalUserAPI.fetchPortalUserDetails()\r\n                    .then(payload => {\r\n                        setInitialUserData(payload.data.data);\r\n                        setInitialThemeSettings(payload.data.data.portalSettingsLayoutAssigned);\r\n                    })\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                    });\r\n            })();\r\n        }\r\n    }, [isAuth]);\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            if (\r\n                !location.pathname.includes('/project/') &&\r\n                !location.pathname.includes('/project-deelname/') &&\r\n                !location.pathname.includes('/inschrijven/') &&\r\n                !location.pathname.includes('/dashboard/')\r\n            ) {\r\n                switchToDefaultThemeSettings();\r\n            }\r\n        }\r\n    }, [location.pathname]);\r\n\r\n    return (\r\n        <AuthConsumer>\r\n            {({ isAuth }) => (\r\n                <div className=\"body-2\" id=\"body-2\">\r\n                    <Header />\r\n                    <Route render={props => (isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />)} {...rest} />\r\n                </div>\r\n            )}\r\n        </AuthConsumer>\r\n    );\r\n};\r\n\r\nexport default function ProtectedRouteWithContext(props) {\r\n    return (\r\n        <AuthConsumer>\r\n            {({ isAuth }) => (\r\n                <PortalUserConsumer>\r\n                    {({ setInitialUserData }) => (\r\n                        <ProtectedRoute {...props} setInitialUserData={setInitialUserData} isAuth={isAuth} />\r\n                    )}\r\n                </PortalUserConsumer>\r\n            )}\r\n        </AuthConsumer>\r\n    );\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Route, useLocation } from 'react-router-dom';\r\nimport { ThemeSettingsContext } from '../context/ThemeSettingsContext';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n    const location = useLocation();\r\n    const { switchToDefaultThemeSettings } = useContext(ThemeSettingsContext);\r\n\r\n    useEffect(() => {\r\n        switchToDefaultThemeSettings();\r\n    }, [location.pathname]);\r\n\r\n    return <Route render={props => <Component {...props} />} {...rest} />;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get } from 'lodash';\r\n\r\nconst InputText = ({\r\n    field,\r\n    type,\r\n    className,\r\n    id,\r\n    readOnly,\r\n    placeholder,\r\n    showErrorMessage,\r\n    errors,\r\n    touched,\r\n    classNameErrorMessage,\r\n    disabled,\r\n    customOnChange = null,\r\n}) => {\r\n    if (customOnChange) {\r\n        field.onChange = customOnChange;\r\n    }\r\n    return (\r\n        <>\r\n            {get(errors, field.name, '') && get(touched, field.name, '') && showErrorMessage ? (\r\n                <small className={`${classNameErrorMessage}`}>{get(errors, field.name, '')}</small>\r\n            ) : null}\r\n            <input\r\n                type={type}\r\n                className={`text-input w-input ${className} ${\r\n                    Boolean(get(errors, field.name, '') && get(touched, field.name, '')) ? 'has-error mb-0' : ''\r\n                } `}\r\n                id={id}\r\n                {...field}\r\n                readOnly={readOnly}\r\n                placeholder={placeholder}\r\n                disabled={disabled}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nInputText.defaultProps = {\r\n    type: 'text',\r\n    className: 'content',\r\n    readOnly: false,\r\n    placeholder: '',\r\n    showErrorMessage: true,\r\n    classNameErrorMessage: 'text-danger',\r\n    errors: {},\r\n    touched: {},\r\n};\r\n\r\nInputText.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    type: PropTypes.string,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    readOnly: PropTypes.bool,\r\n    showErrorMessage: PropTypes.bool,\r\n    classNameErrorMessage: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    errors: PropTypes.object,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default InputText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ButtonText = ({\r\n    buttonClassName,\r\n    buttonText,\r\n    onClickAction,\r\n    type,\r\n    loading,\r\n    title,\r\n    loadingSpinnerColor,\r\n    disabled,\r\n}) => (\r\n    <Button\r\n        type={type}\r\n        className={`${buttonClassName}`}\r\n        onClick={onClickAction}\r\n        disabled={loading || disabled}\r\n        title={title}\r\n        size=\"sm\"\r\n    >\r\n        {loading ? <ClipLoader color={loadingSpinnerColor} size={17} /> : <span>{buttonText}</span>}\r\n    </Button>\r\n);\r\n\r\nButtonText.defaultProps = {\r\n    buttonClassName: '',\r\n    type: 'button',\r\n    title: '',\r\n    loading: false,\r\n    loadingSpinnerColor: 'white',\r\n    disabled: false,\r\n};\r\n\r\nButtonText.propTypes = {\r\n    buttonClassName: PropTypes.string,\r\n    buttonText: PropTypes.string.isRequired,\r\n    onClickAction: PropTypes.func,\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    loadingSpinnerColor: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n};\r\n\r\nexport default ButtonText;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n    password: Yup.string().required('Verplicht'),\r\n});\r\n\r\nconst LoginForm = function({ handleSubmit, login }) {\r\n    return (\r\n        <Formik\r\n            initialValues={{ username: '', password: '' }}\r\n            enableReinitialize={true}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, actions) => {\r\n                actions.setSubmitting(true);\r\n                handleSubmit(values, actions, login);\r\n            }}\r\n            render={({ isSubmitting, errors, touched }) => {\r\n                return (\r\n                    <Form>\r\n                        <Field\r\n                            name=\"username\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"username\"\r\n                                    className={''}\r\n                                    placeholder={'E-mailadres'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    // showErrorMessage={false}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Field\r\n                            name=\"password\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"password\"\r\n                                    className={''}\r\n                                    placeholder={'Wachtwoord'}\r\n                                    type={'password'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    // showErrorMessage={false}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <ButtonText\r\n                            buttonText={'Log in'}\r\n                            buttonClassName={'authorization-button'}\r\n                            type={'submit'}\r\n                            loading={isSubmitting}\r\n                            loadingSpinnerColor={'#034b8c'}\r\n                        />\r\n                    </Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import axios from 'axios';\r\n\r\nconst AUTH_KEY = {\r\n    client_id: window.__SERVER_DATA__.client_id,\r\n    client_secret: window.__SERVER_DATA__.client_key,\r\n    grant_type: 'password',\r\n};\r\n\r\nconst BASE_URL = window.__SERVER_DATA__.base_url;\r\n\r\nexport default {\r\n    newAccount: payload => {\r\n        const requestUrl = `${BASE_URL}/new-account`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n    newAccountSuccess: payload => {\r\n        const requestUrl = `${BASE_URL}/new-account-success`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n\r\n    login: loginCredentials => {\r\n        const requestUrl = `${BASE_URL}/oauth/token`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, { ...AUTH_KEY, ...loginCredentials });\r\n    },\r\n\r\n    register: payload => {\r\n        const requestUrl = `${BASE_URL}/register`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n\r\n    forgot: email => {\r\n        const requestUrl = `${BASE_URL}/password/email`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, email);\r\n    },\r\n\r\n    reset: payload => {\r\n        const requestUrl = `${BASE_URL}/password/reset`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n};\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nconst URL_PORTAL_SETTINGS = `setting`;\r\n\r\nexport default {\r\n    fetchPortalSettings: keys => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/multiple${keys}`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n    fetchPortalActive: () => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/portal-active`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n    fetchCooperativeName: () => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/cooperative-name`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n    fetchShowNewAtCooperativeLink: () => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/show-new-at-cooperative-link`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n    fetchNewAtCooperativeLinkText: () => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/new-at-cooperative-link-text`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { AuthConsumer } from '../../../context/AuthContext';\r\nimport LoginForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PortalSettingsAPI from '../../../api/portal-settings/PortalSettingsAPI';\r\n\r\nexport default props => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [showError, toggleError] = useState(false);\r\n\r\n    const [redirectToReferrer, toggleRedirect] = useState(false);\r\n    let { from } = props.location.state || { from: { pathname: '/dashboard' } };\r\n\r\n    const [portalActive, setPortalActive] = useState(false);\r\n    const [showNewAtCooperativeLink, setShowNewAtCooperativeLink] = useState(false);\r\n    const [newAtCooperativeLinkText, setNewAtCooperativeLinkText] = useState('');\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    useEffect(() => {\r\n        (function callFetchPortalActive() {\r\n            PortalSettingsAPI.fetchPortalActive()\r\n                .then(payload => {\r\n                    setPortalActive(payload.data);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    // alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                    setIsLoading(false);\r\n                });\r\n        })();\r\n\r\n        (function callFetchShowNewAtCooperativeLink() {\r\n            PortalSettingsAPI.fetchShowNewAtCooperativeLink()\r\n                .then(payload => {\r\n                    setShowNewAtCooperativeLink(payload.data);\r\n                })\r\n                .catch(error => {\r\n                    // alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                });\r\n        })();\r\n\r\n        (function callFetchNewAtCooperativeLinkText() {\r\n            PortalSettingsAPI.fetchNewAtCooperativeLinkText()\r\n                .then(payload => {\r\n                    setNewAtCooperativeLinkText(payload.data);\r\n                })\r\n                .catch(error => {\r\n                    // alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                });\r\n        })();\r\n    }, []);\r\n\r\n    function handleSubmit(values, actions, login) {\r\n        AuthAPI.login(values)\r\n            .then(payload => {\r\n                toggleError(false);\r\n                login(payload.data, () => toggleRedirect(true));\r\n            })\r\n            .catch(error => {\r\n                // If login fails show error and then set submitting back to false\r\n                toggleError(true);\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect() {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {redirectToReferrer ? (\r\n                redirect()\r\n            ) : (\r\n                <AuthConsumer>\r\n                    {({ isAuth, login }) => (\r\n                        <Container fluid className=\"authorization-container\">\r\n                            <Row className=\"justify-content-center align-content-center full-height\">\r\n                                <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" xl=\"2\">\r\n                                    <img src={`images/logo.png?${imageHash}`} alt=\"\" className=\"image logo-container\" />\r\n                                    {isLoading ? (\r\n                                        <React.Fragment>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                                    Applicatie wordt geladen...\r\n                                                </Alert>\r\n                                            </Row>\r\n                                        </React.Fragment>\r\n                                    ) : !portalActive ? (\r\n                                        <React.Fragment>\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                                    Deze applicatie kan op dit moment niet gebruikt worden.\r\n                                                </Alert>\r\n                                            </Row>\r\n                                        </React.Fragment>\r\n                                    ) : !isLoading ? (\r\n                                        <React.Fragment>\r\n                                            <LoginForm handleSubmit={handleSubmit} login={login} />\r\n                                            {showError ? (\r\n                                                <Row className=\"justify-content-center\">\r\n                                                    <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                                        Gebruikte logingegevens zijn onjuist!\r\n                                                    </Alert>\r\n                                                </Row>\r\n                                            ) : null}\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <Link to={'/wachtwoord-vergeten'} className=\"authorization-link\">\r\n                                                    Wachtwoord vergeten?\r\n                                                </Link>\r\n                                            </Row>\r\n                                            {showNewAtCooperativeLink ? (\r\n                                                <Row className=\"justify-content-center\">\r\n                                                    <a\r\n                                                        href={'/#/nieuw-account'}\r\n                                                        className=\"authorization-link\"\r\n                                                        target=\"_blank\"\r\n                                                    >\r\n                                                        {newAtCooperativeLinkText}\r\n                                                    </a>\r\n                                                </Row>\r\n                                            ) : null}\r\n                                        </React.Fragment>\r\n                                    ) : null}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    )}\r\n                </AuthConsumer>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { GoogleReCaptchaProvider, GoogleReCaptcha } from 'react-google-recaptcha-v3';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(10, 'Minimum van ${min} verplicht')\r\n        .matches(/([0-9])/, 'Minimaal 1 cijfer is verplicht')\r\n        .matches(/([A-Z])/, 'Minimaal 1 hoofdletter is verplicht')\r\n        .required('Verplicht'),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Wachtwoorden moeten gelijk zijn')\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst RegisterForm = ({ handleSubmit, email }) => (\r\n    <Formik\r\n        initialValues={{ password: '', passwordConfirmation: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <div className=\"mb-3\">\r\n                    <p className={'authorization-text'}>\r\n                        Stel je wachtwoord in voor <strong>{email}</strong>. Daarna ben je direct ingelogd.\r\n                    </p>\r\n                </div>\r\n                <Row>\r\n                    <Col>\r\n                        <Field\r\n                            name=\"password\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"password\"\r\n                                    className={field.value ? 'numeric-password' : ''}\r\n                                    placeholder={'Nieuw wachtwoord'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    classNameErrorMessage={'authorization-text'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"mt-2\">\r\n                        <Field\r\n                            name=\"passwordConfirmation\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"passwordConfirmation\"\r\n                                    className={field.value ? 'numeric-password' : ''}\r\n                                    placeholder={'Herhaal nieuw wachtwoord'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    classNameErrorMessage={'authorization-text mb-3'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"my-3\">\r\n                        <small className={'authorization-text'}>\r\n                            Het wachtwoord moet minimaal 10 karakters lang zijn en moet minimaal 1 cijfer en 1\r\n                            hoofdletter bevatten.\r\n                        </small>\r\n                    </Col>\r\n                </Row>\r\n                <ButtonText\r\n                    buttonText={'Verzenden'}\r\n                    buttonClassName={'authorization-button'}\r\n                    size=\"sm\"\r\n                    type={'submit'}\r\n                    loading={isSubmitting}\r\n                    loadingSpinnerColor={'#034b8c'}\r\n                />\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport RegisterForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { AuthConsumer } from '../../../context/AuthContext';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst Register = ({ location, match, login }) => {\r\n    const [showError, toggleError] = useState(false);\r\n    const [showLoginLink, setLoginLink] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const registrationCode = decodeURIComponent(match.params.registrationCode);\r\n    const email = decodeURIComponent(match.params.email);\r\n\r\n    const [redirectToReferrer, toggleRedirect] = useState(false);\r\n    let { from } = location.state || { from: { pathname: '/dashboard' } };\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    function handleSubmit(values, actions) {\r\n        AuthAPI.register({\r\n            registrationCode,\r\n            email,\r\n            password: values.password,\r\n            password_confirmation: values.passwordConfirmation,\r\n        })\r\n            .then(payload => {\r\n                toggleSuccessMessage(true);\r\n                AuthAPI.login({ username: email, password: values.password })\r\n                    .then(payload => {\r\n                        toggleError(false);\r\n                        setLoginLink(false);\r\n                        setErrorMessage('');\r\n                        login(payload.data, () => {});\r\n\r\n                        setTimeout(() => {\r\n                            toggleRedirect(true);\r\n                        }, 15000);\r\n                    })\r\n                    .catch(error => {\r\n                        // If login fails show error and then set submitting back to false\r\n                        toggleError(true);\r\n                        setLoginLink(true);\r\n                        setErrorMessage('Er is iets fout gegaan bij automatisch inloggen na activeren.');\r\n                        actions.setSubmitting(false);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // console.log(error.response.status);\r\n                // console.log(error.response.data.message);\r\n                toggleError(true);\r\n                if (\r\n                    error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message &&\r\n                    error.response.status === 423\r\n                ) {\r\n                    setLoginLink(true);\r\n                    setErrorMessage(error.response.data.message);\r\n                } else {\r\n                    setLoginLink(false);\r\n                    setErrorMessage(\r\n                        'Er is iets fout gegaan bij activeren. Controleer of de activatie link juist en volledig is.'\r\n                    );\r\n                }\r\n                // If login fails show error and then set submitting back to false\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect() {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {redirectToReferrer ? (\r\n                redirect()\r\n            ) : (\r\n                <Container fluid className=\"authorization-container\">\r\n                    <Row className=\"justify-content-center align-content-center full-height\">\r\n                        <Col xs=\"12\" sm=\"8\" md=\"6\" lg=\"4\" xl=\"2\">\r\n                            <img src={`images/logo.png?${imageHash}`} alt=\"\" className=\"image logo-container\" />\r\n                            {showSuccessMessage ? (\r\n                                <>\r\n                                    <h3 className={'authorization-text'}>Je account is geactiveerd</h3>\r\n                                    <p className={'authorization-text'}>Je bent nu ingelogd</p>\r\n                                    <ButtonText\r\n                                        buttonText={'Ga verder'}\r\n                                        onClickAction={toggleRedirect}\r\n                                        buttonClassName={'authorization-button'}\r\n                                        size=\"sm\"\r\n                                    />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <h3 className={'authorization-text'}>Account activeren</h3>\r\n                                    {!showLoginLink ? <RegisterForm handleSubmit={handleSubmit} email={email} /> : null}\r\n                                    {showError ? (\r\n                                        <Row className={'justify-content-center align-content-center '}>\r\n                                            <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                                {errorMessage}\r\n                                            </Alert>\r\n                                        </Row>\r\n                                    ) : null}\r\n                                </>\r\n                            )}\r\n                            {showLoginLink ? (\r\n                                <ButtonText\r\n                                    buttonText={'Ga naar loginscherm'}\r\n                                    onClickAction={toggleRedirect}\r\n                                    buttonClassName={'authorization-button'}\r\n                                    size=\"sm\"\r\n                                />\r\n                            ) : null}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default function RegisterWithContext(props) {\r\n    return <AuthConsumer>{({ login }) => <Register {...props} login={login} />}</AuthConsumer>;\r\n}\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst ForgotForm = ({ handleSubmit, showSuccessMessage }) => (\r\n    <Formik\r\n        initialValues={{ email: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <Field\r\n                    name=\"email\"\r\n                    render={({ field }) => (\r\n                        <InputText\r\n                            field={field}\r\n                            id=\"email\"\r\n                            className={''}\r\n                            placeholder={'E-mailadres'}\r\n                            errors={errors}\r\n                            touched={touched}\r\n                            // todo check waarom dit erin stond ?!\r\n                            // showErrorMessage={false}\r\n                        />\r\n                    )}\r\n                />\r\n                <ButtonText\r\n                    buttonText={showSuccessMessage ? 'E-mail is verstuurd!' : 'Verstuur wachtwoord reset link'}\r\n                    buttonClassName={'authorization-button'}\r\n                    size=\"sm\"\r\n                    type={'submit'}\r\n                    loading={isSubmitting}\r\n                    loadingSpinnerColor={'#034b8c'}\r\n                    disabled={showSuccessMessage}\r\n                />\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default ForgotForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport ForgotForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Forgot = props => {\r\n    const [showError, toggleError] = useState(false);\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    function handleSubmit(values, actions) {\r\n        AuthAPI.forgot(values)\r\n            .then(payload => {\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                // If forgot API fails show error and then set submitting back to false\r\n                // toggleError(true);\r\n                // If forgot API fails show succesmessage anyway\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"authorization-container\">\r\n            <Row className=\"justify-content-center align-content-center full-height\">\r\n                <Col xs=\"12\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"4\">\r\n                    <img src={`images/logo.png?${imageHash}`} alt=\"\" className=\"image logo-container\" />\r\n                    {showSuccessMessage ? (\r\n                        <div>\r\n                            <Row className={'justify-content-center '}>\r\n                                <h3 className={'authorization-text'}>Een E-mail is onderweg!</h3>\r\n                            </Row>\r\n                            <Row className={'justify-content-center '}>\r\n                                <p className={'authorization-text'}>\r\n                                    Als het e-mailadres bij ons bekend is, dan ontvang je binnen enkele minuten een\r\n                                    e-mail met een persoonlijke link. Via deze link kun je een nieuw wachtwoord\r\n                                    instellen.\r\n                                    <br />\r\n                                    Het kan zijn dat de mail door een spamfilter is geblokkeerd. Spamfilters van\r\n                                    bijvoorbeeld Gmail en Hotmail staan erg \"scherp\". Kijk even bij de Spam/Reclame of\r\n                                    je onze mail daar terug vindt.\r\n                                </p>\r\n                            </Row>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Row className={'justify-content-center '}>\r\n                                <h3 className={'authorization-text'}>Wachtwoord vergeten</h3>\r\n                            </Row>\r\n                            <Row className={'justify-content-center '}>\r\n                                <p className={'authorization-text'}>\r\n                                    Vul het e-mailadres in waarmee je inlogt en dat bij ons bekend is. Je ontvangt van\r\n                                    ons een e-mail waarmee je een nieuw wachtwoord kunt instellen.\r\n                                </p>\r\n                            </Row>\r\n                            <Row className={'justify-content-center '}>\r\n                                <Col xs={12} md={6}>\r\n                                    <ForgotForm handleSubmit={handleSubmit} showSuccessMessage={showSuccessMessage} />\r\n                                    {showError ? (\r\n                                        <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                            E-mailadres is niet bekend!\r\n                                        </Alert>\r\n                                    ) : null}\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )}\r\n                    <Row className={'justify-content-center '}>\r\n                        <Link to={'/login'} className=\"authorization-link\">\r\n                            Terug naar inloggen\r\n                        </Link>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Forgot;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(10, 'Minimum van ${min} verplicht')\r\n        .matches(/([0-9])/, 'Minimaal 1 cijfer is verplicht')\r\n        .matches(/([A-Z])/, 'Minimaal 1 hoofdletter is verplicht')\r\n        .required('Verplicht'),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Wachtwoorden moeten gelijk zijn')\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst ResetForm = ({ handleSubmit, email }) => (\r\n    <Formik\r\n        initialValues={{ password: '', passwordConfirmation: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <Row className=\"justify-content-center\">\r\n                    <p className={'authorization-text'}>\r\n                        Stel een nieuw wachtwoord in voor <strong>{email}</strong>. Daarna ben je direct ingelogd.\r\n                    </p>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Field\r\n                        name=\"password\"\r\n                        render={({ field }) => (\r\n                            <InputText\r\n                                field={field}\r\n                                id=\"password\"\r\n                                className={field.value ? 'numeric-password' : ''}\r\n                                placeholder={'Nieuw wachtwoord'}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                                classNameErrorMessage={'authorization-text'}\r\n                            />\r\n                        )}\r\n                    />\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Field\r\n                        name=\"passwordConfirmation\"\r\n                        render={({ field }) => (\r\n                            <InputText\r\n                                field={field}\r\n                                id=\"passwordConfirmation\"\r\n                                className={field.value ? 'numeric-password' : ''}\r\n                                placeholder={'Herhaal nieuw wachtwoord'}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                                classNameErrorMessage={'authorization-text mb-3'}\r\n                            />\r\n                        )}\r\n                    />\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <small className={'authorization-text'}>\r\n                        Het wachtwoord moet minimaal 10 karakters lang zijn en moet minimaal 1 cijfer en 1 hoofdletter\r\n                        bevatten.\r\n                    </small>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <ButtonText\r\n                        buttonText={'Verzenden'}\r\n                        buttonClassName={'authorization-button'}\r\n                        size=\"sm\"\r\n                        type={'submit'}\r\n                        loading={isSubmitting}\r\n                        loadingSpinnerColor={'#034b8c'}\r\n                    />\r\n                </Row>\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default ResetForm;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport ResetForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { AuthConsumer } from '../../../context/AuthContext';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\n\r\nconst Reset = ({ location, match, login }) => {\r\n    const [showError, toggleError] = useState(false);\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const token = decodeURIComponent(match.params.token);\r\n    const email = decodeURIComponent(match.params.email);\r\n\r\n    const [redirectToReferrer, toggleRedirect] = useState(false);\r\n    let { from } = location.state || { from: { pathname: '/dashboard' } };\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    function handleSubmit(values, actions) {\r\n        AuthAPI.reset({ token, email, password: values.password, password_confirmation: values.passwordConfirmation })\r\n            .then(payload => {\r\n                toggleSuccessMessage(true);\r\n                AuthAPI.login({ username: email, password: values.password })\r\n                    .then(payload => {\r\n                        toggleError(false);\r\n                        login(payload.data, () => {});\r\n\r\n                        setTimeout(() => {\r\n                            toggleRedirect(true);\r\n                        }, 15000);\r\n                    })\r\n                    .catch(error => {\r\n                        // If login fails show error and then set submitting back to false\r\n                        toggleError(true);\r\n                        actions.setSubmitting(false);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // If login fails show error and then set submitting back to false\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect() {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {redirectToReferrer ? (\r\n                redirect()\r\n            ) : (\r\n                <Container fluid className=\"authorization-container\">\r\n                    <Row className=\"justify-content-center align-content-center full-height\">\r\n                        <Col xs=\"12\" sm=\"8\" md=\"6\" lg=\"4\" xl=\"2\">\r\n                            <img src={`images/logo.png?${imageHash}`} alt=\"\" className=\"image logo-container\" />\r\n                            {showSuccessMessage ? (\r\n                                <>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <h3 className={'authorization-text'}>Je wachtwoord is ingesteld</h3>\r\n                                    </Row>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <p className={'authorization-text'}>Je bent nu ingelogd</p>\r\n                                    </Row>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <ButtonText\r\n                                            buttonText={'Ga verder'}\r\n                                            onClickAction={toggleRedirect}\r\n                                            buttonClassName={'authorization-button'}\r\n                                            size=\"sm\"\r\n                                        />\r\n                                    </Row>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <h3 className={'authorization-text'}>Wachtwoord wijzigen</h3>\r\n                                    </Row>\r\n                                    <ResetForm handleSubmit={handleSubmit} email={email} />\r\n                                </>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default function ResetWithContext(props) {\r\n    return <AuthConsumer>{({ login }) => <Reset {...props} login={login} />}</AuthConsumer>;\r\n}\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nfunction Loading() {\r\n    return (\r\n        <Row className=\"justify-content-center align-content-center flex-wrap\" style={{ height: '40vh' }}>\r\n            <ClipLoader color={'#3898EC'} size={48} />\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    fetchContact: function(id) {\r\n        const requestUrl = `/jory/contact/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'typeId',\r\n                        'number',\r\n                        'fullNameFnf',\r\n                        'firstName',\r\n                        'lastNamePrefix',\r\n                        'lastName',\r\n                        'hasFinancialOverviews',\r\n                        'iban',\r\n                        'ibanAttn',\r\n                        'didAgreeAvg',\r\n                        'dateDidAgreeAvg',\r\n                        'addressLines',\r\n                        'isParticipant',\r\n                        'disableChangeContactNameOnPortal',\r\n                        'noAddressesFound',\r\n                        'isParticipantPcrProject',\r\n                        'isParticipantSceProject',\r\n                        'blockChangeAddress',\r\n                        'blockChangeAddressNumber',\r\n                    ],\r\n                    rlt: {\r\n                        person: {\r\n                            fld: [\r\n                                'id',\r\n                                'firstName',\r\n                                'lastName',\r\n                                'initials',\r\n                                'titleId',\r\n                                'lastNamePrefix',\r\n                                'lastNamePrefixId',\r\n                                'dateOfBirth',\r\n                            ],\r\n                            rlt: {\r\n                                title: { fld: ['id', 'name'] },\r\n                            },\r\n                        },\r\n                        organisation: {\r\n                            fld: ['id', 'name', 'website', 'chamberOfCommerceNumber', 'vatNumber'],\r\n                        },\r\n                        emailAddresses: { fld: ['id', 'email', 'primary', 'typeId'] },\r\n                        phoneNumbers: { fld: ['id', 'number', 'primary', 'typeId'] },\r\n                        addresses: {\r\n                            fld: [\r\n                                'id',\r\n                                'street',\r\n                                'number',\r\n                                'addition',\r\n                                'postalCode',\r\n                                'city',\r\n                                'countryId',\r\n                                'primary',\r\n                                'typeId',\r\n                                'eanElectricity',\r\n                                'eanGas',\r\n                            ],\r\n                            rlt: {\r\n                                country: { fld: ['id', 'name'] },\r\n                                primaryAddressEnergySupplierElectricity: {\r\n                                    fld: [\r\n                                        'id',\r\n                                        'energySupplierId',\r\n                                        'esNumber',\r\n                                        'memberSince',\r\n                                        'isCurrentSupplier',\r\n                                        'endDatePrevious',\r\n                                        'memberSinceNext',\r\n                                    ],\r\n                                    rlt: { energySupplier: [] },\r\n                                    flt: {\r\n                                        f: 'isCurrentSupplier',\r\n                                        d: true,\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                        occupations: {\r\n                            fld: ['id', 'occupationId', 'primaryContactId', 'contactId', 'primary'],\r\n                            rlt: {\r\n                                occupation: {\r\n                                    fld: ['id', 'primaryOccupation', 'secondaryOccupation', 'occupationForPortal'],\r\n                                },\r\n                                primaryContact: {\r\n                                    fld: ['id', 'fullNameFnf'],\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    fetchContactWithParticipants: function(id) {\r\n        const requestUrl = `/jory/contact/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'typeId',\r\n                        'number',\r\n                        'fullNameFnf',\r\n                        'typeId',\r\n                        'firstName',\r\n                        'lastNamePrefix',\r\n                        'lastName',\r\n                        'iban',\r\n                        'ibanAttn',\r\n                        'didAgreeAvg',\r\n                        'dateDidAgreeAvg',\r\n                        'addressLines',\r\n                    ],\r\n                    rlt: {\r\n                        participations: {\r\n                            fld: [\r\n                                'id',\r\n                                'dateRegister',\r\n                                'didAcceptAgreement',\r\n                                'dateDidAcceptAgreement',\r\n                                'didUnderstandInfo',\r\n                                'dateDidUnderstandInfo',\r\n                                'participationsDefinitive',\r\n                                'participationsGranted',\r\n                                'participationsOptioned',\r\n                                'participationsInteressed',\r\n                                'amountDefinitive',\r\n                                'amountGranted',\r\n                                'amountOptioned',\r\n                                'amountInteressed',\r\n                                'powerKwhConsumption',\r\n                            ],\r\n                            rlt: {\r\n                                project: {\r\n                                    fld: [\r\n                                        'id',\r\n                                        'name',\r\n                                        'dateEnd',\r\n                                        'linkProjectInfo',\r\n                                        'linkUnderstandInfo',\r\n                                        'showQuestionAboutMembership',\r\n                                        'usesMollie',\r\n                                    ],\r\n                                    rlt: {\r\n                                        projectType: { fld: ['id', 'codeRef'] },\r\n                                        administration: { fld: ['name'] },\r\n                                    },\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    updateContact: contact => {\r\n        const requestUrl = `/contact/${contact.id}`;\r\n\r\n        return axiosInstance.post(requestUrl, contact);\r\n    },\r\n\r\n    previewDocument: registerValues => {\r\n        const requestUrl = `/contact/${registerValues.contactId}/${registerValues.projectId}/preview-document`;\r\n\r\n        return axiosInstance.post(requestUrl, registerValues);\r\n    },\r\n\r\n    fetchContactProjects: function(contactId, projectId) {\r\n        const requestUrl = `/contact/${contactId}/contact-projects`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n\r\n    fetchContactProjectData: function(contactId, projectId) {\r\n        const requestUrl = `/contact/${contactId}/${projectId}/contact-project-data`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n\r\n    fetchContactFinancialOverviewDocuments: function(contactId) {\r\n        const requestUrl = `/contact/${contactId}/financial-overview-documents`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n\r\n    financialOverviewContactDownload: function(id) {\r\n        const requestUrl = `/financial-overview-contact/${id}/download`;\r\n\r\n        return axiosInstance(requestUrl, { responseType: 'blob' });\r\n    },\r\n\r\n    fetchContactRelatedAdministrations: function(contactId) {\r\n        const requestUrl = `/contact/${contactId}/related-administrations`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n};\r\n","export default function(contactData) {\r\n    const typeContact = contactData.typeId ? contactData.typeId : null;\r\n\r\n    let emptyPrimaryAddressEnergySupplierElectricity = {\r\n        energySupplierId: null,\r\n        esNumber: '',\r\n        memberSince: '',\r\n    };\r\n    let emptyAddress = {\r\n        street: '',\r\n        number: '',\r\n        addition: '',\r\n        postalCode: '',\r\n        city: '',\r\n        countryId: null,\r\n        eanElectricity: '',\r\n        eanGas: '',\r\n        primaryAddressEnergySupplierElectricity: emptyPrimaryAddressEnergySupplierElectricity,\r\n    };\r\n    let primaryAddress = null;\r\n    let visitAddress = null;\r\n    let postalAddress = null;\r\n    let invoiceAddress = null;\r\n    switch (typeContact) {\r\n        case 'person':\r\n            // Set primary address\r\n            primaryAddress = contactData.addresses.find(address => address.primary);\r\n            contactData.primaryAddress = primaryAddress ? { ...emptyAddress, ...primaryAddress } : emptyAddress;\r\n            if (!contactData.primaryAddress.primaryAddressEnergySupplierElectricity) {\r\n                contactData.primaryAddress.primaryAddressEnergySupplierElectricity = {\r\n                    ...contactData.primaryAddress,\r\n                    emptyPrimaryAddressEnergySupplierElectricity,\r\n                };\r\n            }\r\n            break;\r\n        case 'organisation':\r\n            // Set visit, postal, invoice addresses\r\n            visitAddress = contactData.addresses.find(address => address.typeId === 'visit');\r\n            contactData.visitAddress = visitAddress ? { ...emptyAddress, ...visitAddress } : emptyAddress;\r\n            if (!contactData.visitAddress.primaryAddressEnergySupplierElectricity) {\r\n                contactData.visitAddress.primaryAddressEnergySupplierElectricity = {\r\n                    ...contactData.visitAddress,\r\n                    emptyPrimaryAddressEnergySupplierElectricity,\r\n                };\r\n            }\r\n            postalAddress = contactData.addresses.find(address => address.typeId === 'postal');\r\n            contactData.postalAddress = postalAddress ? { ...emptyAddress, ...postalAddress } : emptyAddress;\r\n            invoiceAddress = contactData.addresses.find(address => address.typeId === 'invoice');\r\n            contactData.invoiceAddress = invoiceAddress ? { ...emptyAddress, ...invoiceAddress } : emptyAddress;\r\n            break;\r\n    }\r\n\r\n    // Set correspondence email address\r\n    let emptyEmail = { email: '' };\r\n    const emailCorrespondence = contactData.emailAddresses.find(emailAddress => emailAddress.primary);\r\n    contactData.emailCorrespondence = emailCorrespondence ? { ...emptyEmail, ...emailCorrespondence } : emptyEmail;\r\n\r\n    // Set invoice email address\r\n    const emailInvoice = contactData.emailAddresses.find(\r\n        emailAddress => emailAddress.typeId === 'invoice' && !emailAddress.primary\r\n    );\r\n    contactData.emailInvoice = emailInvoice ? { ...emptyEmail, ...emailInvoice } : emptyEmail;\r\n\r\n    // Set primary phone number\r\n    let emptyPhoneNumber = { number: '' };\r\n    const phoneNumberPrimary = contactData.phoneNumbers.find(phoneNumber => phoneNumber.primary);\r\n    contactData.phoneNumberPrimary = phoneNumberPrimary\r\n        ? { ...emptyPhoneNumber, ...phoneNumberPrimary }\r\n        : emptyPhoneNumber;\r\n\r\n    // Set first phone number which is not primary\r\n    const phoneNumberTwo = contactData.phoneNumbers.filter(phoneNumber => !phoneNumber.primary)[0];\r\n    contactData.phoneNumberTwo = phoneNumberTwo ? { ...emptyPhoneNumber, ...phoneNumberTwo } : emptyPhoneNumber;\r\n\r\n    return contactData;\r\n}\r\n","import { Card, CardImg } from 'react-bootstrap';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst DashboardWidget = function({\r\n    id,\r\n    title,\r\n    text,\r\n    image,\r\n    buttonText,\r\n    buttonLink,\r\n    backgroundColorUsed,\r\n    textColorUsed,\r\n}) {\r\n    const history = useHistory();\r\n    const key = 'widget-' + id;\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    let externalLink = null;\r\n    if (buttonLink.toLowerCase().startsWith('www')) {\r\n        externalLink = 'https://' + buttonLink;\r\n    } else if (buttonLink.toLowerCase().startsWith('http') || buttonLink.toLowerCase().startsWith('https')) {\r\n        externalLink = buttonLink;\r\n    }\r\n\r\n    return (\r\n        <Card\r\n            key={key}\r\n            id={key}\r\n            style={{ marginTop: '30px', backgroundColor: backgroundColorUsed, color: textColorUsed }}\r\n        >\r\n            <CardImg\r\n                src={image && image.includes('images/') ? image + '?' + imageHash : 'images/' + image + '?' + imageHash}\r\n                variant={'top'}\r\n            />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{title}</h5>\r\n                <p className=\"card-text\" style={{ whiteSpace: 'break-spaces' }}>\r\n                    {text}\r\n                </p>\r\n                {externalLink === null ? (\r\n                    <button className=\"w-button btn btn-primary btn-sm\" onClick={() => history.push(buttonLink)}>\r\n                        {buttonText}\r\n                    </button>\r\n                ) : (\r\n                    <a href={externalLink} target=\"_blank\">\r\n                        <button className=\"w-button btn btn-primary btn-sm\">{buttonText}</button>\r\n                    </a>\r\n                )}\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default DashboardWidget;\r\n","import { Button, Card } from 'react-bootstrap';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { isEmpty } from 'lodash';\r\n\r\nexport const ContactDetailsDashboardWidget = function({ contact, backgroundColorUsed, textColorUsed }) {\r\n    const history = useHistory();\r\n    const key = 'widget-' + 'contact-details';\r\n\r\n    const typeContact = contact.typeId ? contact.typeId : null;\r\n\r\n    return (\r\n        <Card\r\n            key={key}\r\n            id={key}\r\n            style={{ marginTop: '30px', backgroundColor: backgroundColorUsed, color: textColorUsed }}\r\n        >\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{contact.fullNameFnf}</h5>\r\n                <div className=\"card-text\">\r\n                    {typeContact === 'person' ? (\r\n                        <>\r\n                            {contact.primaryAddress !== undefined ? (\r\n                                <div>\r\n                                    <b>Adres</b>\r\n                                    <br />\r\n                                    {contact.primaryAddress.street} {contact.primaryAddress.number}\r\n                                    <br />\r\n                                    {contact.primaryAddress.postalCode} {contact.primaryAddress.city},{' '}\r\n                                    {contact.primaryAddress.country ? contact.primaryAddress.country.name : ''}\r\n                                </div>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                        </>\r\n                    ) : null}\r\n                    {typeContact === 'organisation' ? (\r\n                        <>\r\n                            {contact.visitAddress !== undefined ? (\r\n                                <div>\r\n                                    <b>Bezoekadres</b>\r\n                                    <br />\r\n                                    {contact.visitAddress.street} {contact.visitAddress.number}\r\n                                    <br />\r\n                                    {contact.visitAddress.postalCode} {contact.visitAddress.city},{' '}\r\n                                    {contact.visitAddress.country ? contact.visitAddress.country.name : ''}\r\n                                </div>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                            {contact.postalAddress !== undefined &&\r\n                            contact.postalAddress &&\r\n                            !isEmpty(contact.postalAddress.postalCode) ? (\r\n                                <div>\r\n                                    <b>Postadres</b>\r\n                                    <br />\r\n                                    {contact.postalAddress.street} {contact.postalAddress.number}\r\n                                    <br />\r\n                                    {contact.postalAddress.postalCode} {contact.postalAddress.city},{' '}\r\n                                    {contact.postalAddress.country ? contact.postalAddress.country.name : ''}\r\n                                </div>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                            {contact.invoiceAddress !== undefined &&\r\n                            contact.invoiceAddress &&\r\n                            !isEmpty(contact.invoiceAddress.postalCode) ? (\r\n                                <div>\r\n                                    <b>Nota adres</b>\r\n                                    <br />\r\n                                    {contact.invoiceAddress.street} {contact.invoiceAddress.number}\r\n                                    <br />\r\n                                    {contact.invoiceAddress.postalCode} {contact.invoiceAddress.city},{' '}\r\n                                    {contact.invoiceAddress.country ? contact.invoiceAddress.country.name : ''}\r\n                                </div>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                        </>\r\n                    ) : null}\r\n\r\n                    <div>\r\n                        <br />\r\n                        <b>Telefoon</b>\r\n                        <br />\r\n                        {contact.phoneNumberPrimary.number}\r\n                    </div>\r\n                    <div>\r\n                        <br />\r\n                        <b>E-mail</b>\r\n                        <br />\r\n                        {contact.emailCorrespondence.email}\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <button className=\"w-button btn btn-primary btn-sm\" onClick={() => history.push('/gegevens')}>\r\n                    Gegevens beheren\r\n                </button>\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport const SwitchContactDashboardWidget = function({\r\n    user,\r\n    currentSelectedContact,\r\n    switchCurrentContact,\r\n    backgroundColorUsed,\r\n    textColorUsed,\r\n}) {\r\n    const history = useHistory();\r\n    const key = 'widget-' + 'switch-contact';\r\n\r\n    return (\r\n        <Card\r\n            key={key}\r\n            id={key}\r\n            style={{ marginTop: '30px', backgroundColor: backgroundColorUsed, color: textColorUsed }}\r\n        >\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Wissel van contact</h5>\r\n                <div\r\n                    className=\"card-text\"\r\n                    style={{ display: 'flex', justifyContent: 'space-between', overflowX: 'auto' }}\r\n                >\r\n                    {user.occupations && user.occupations.length > 0 ? (\r\n                        <>\r\n                            <Button\r\n                                className=\"w-button btn btn-primary btn-sm\"\r\n                                key={'user-' + user.id}\r\n                                id={'user-' + user.id}\r\n                                onClick={() => {\r\n                                    switchCurrentContact(user);\r\n                                }}\r\n                                disabled={currentSelectedContact.id === user.id}\r\n                                style={{ margin: '5px' }}\r\n                            >\r\n                                {user.fullNameFnf}\r\n                            </Button>\r\n                            {user.occupations.map(occupationContact =>\r\n                                (occupationContact.primaryContact.typeId === 'organisation' &&\r\n                                    occupationContact.primary) ||\r\n                                (occupationContact.primaryContact.typeId === 'person' &&\r\n                                    occupationContact.occupation.occupationForPortal) ? (\r\n                                    <Button\r\n                                        className=\"w-button btn btn-primary btn-sm\"\r\n                                        key={'user-' + occupationContact.primaryContact.id}\r\n                                        id={'user-' + occupationContact.primaryContact.id}\r\n                                        onClick={() => {\r\n                                            switchCurrentContact(occupationContact.primaryContact);\r\n                                        }}\r\n                                        disabled={currentSelectedContact.id === occupationContact.primaryContact.id}\r\n                                        style={{ margin: '5px' }}\r\n                                    >\r\n                                        {occupationContact.primaryContact.fullNameFnf}\r\n                                    </Button>\r\n                                ) : null\r\n                            )}\r\n                        </>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nconst URL_PORTAL_SETTINGS_DASHBOARD = `/portal-settings-dashboard`;\r\n\r\nexport default {\r\n    fetchDashboardSettings: (id, contactId) => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS_DASHBOARD}/${id}/${contactId}`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n};\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {PortalUserConsumer} from '../../context/PortalUserContext';\r\nimport LoadingView from '../../components/general/LoadingView';\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport ContactAPI from '../../api/contact/ContactAPI';\r\nimport rebaseContact from '../../helpers/RebaseContact';\r\nimport DashboardWidget from './widget';\r\nimport {ContactDetailsDashboardWidget, SwitchContactDashboardWidget} from './widget/default';\r\nimport DashboardSettingsAPI from '../../api/dashboard/DashboardSettingsAPI';\r\nimport {isEmpty} from 'lodash';\r\n\r\nconst Dashboard = function (props) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [contact, setContact] = useState({});\r\n    const [dashboardSettings, setDashboardSettings] = useState({});\r\n    const prevCurrentSelectedContact = usePrevious(props.currentSelectedContact);\r\n\r\n    useEffect(() => {\r\n        // Call Api if current selected contact id is filled\r\n        if (props.currentSelectedContact.id) {\r\n            // If there is no previous selected contact OR previous selected contact is not the same as current selected contact\r\n            if (!prevCurrentSelectedContact || prevCurrentSelectedContact.id != props.currentSelectedContact.id) {\r\n                callFetchContact();\r\n            }\r\n        }\r\n    }, [props.currentSelectedContact]);\r\n\r\n    function callFetchContact() {\r\n        setLoading(true);\r\n        ContactAPI.fetchContact(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                const contactData = rebaseContact(payload.data.data);\r\n\r\n                setContact(contactData);\r\n                props.updateNameSelectedContact(\r\n                    contactData.fullNameFnf,\r\n                    contactData.typeId,\r\n                    contactData.firstName,\r\n                    contactData.lastNamePrefix,\r\n                    contactData.lastName\r\n                );\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            })\r\n            .finally(() => callFetchDashboardSettings());\r\n    }\r\n\r\n    function callFetchDashboardSettings() {\r\n        setLoading(true);\r\n        // todo WM: check anders\r\n        //\r\n        const id = 1;\r\n        DashboardSettingsAPI.fetchDashboardSettings(id, props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                setDashboardSettings(payload.data.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function usePrevious(value) {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-section\">\r\n            {isLoading ? (\r\n                <LoadingView/>\r\n            ) : (\r\n                <div className=\"content-container w-container\">\r\n                    <Row>\r\n                        <Col>\r\n                            {!isEmpty(dashboardSettings.welcomeTitle) ? (\r\n                                <h1 className=\"content-heading mt-0 text-center\">{dashboardSettings.welcomeTitle}</h1>\r\n                            ) : null}\r\n                            {!isEmpty(dashboardSettings.welcomeMessage) ? (\r\n                                <p className={'text-center'} style={{whiteSpace: 'break-spaces'}}>\r\n                                    {dashboardSettings.welcomeMessage}\r\n                                </p>\r\n                            ) : null}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        {dashboardSettings.widgets\r\n                            .filter(w => w.active)\r\n                            .sort((a, b) => (a.order > b.order ? 1 : -1))\r\n                            .map(widget => (\r\n                                <Col md={6}>\r\n                                    <DashboardWidget\r\n                                        id={widget.codeRef}\r\n                                        image={widget.widgetImageFileName}\r\n                                        title={widget.title}\r\n                                        text={widget.text}\r\n                                        buttonText={widget.buttonText}\r\n                                        buttonLink={widget.buttonLink}\r\n                                        backgroundColorUsed={widget.backgroundColorUsed}\r\n                                        textColorUsed={widget.textColorUsed}\r\n                                    />\r\n                                </Col>\r\n                            ))}\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <ContactDetailsDashboardWidget\r\n                                contact={contact}\r\n                                backgroundColorUsed={dashboardSettings.defaultWidgetBackgroundColor}\r\n                                textColorUsed={dashboardSettings.defaultWidgetTextColor}\r\n                            />\r\n                        </Col>\r\n                        <PortalUserConsumer>\r\n                            {({user, currentSelectedContact, switchCurrentContact}) => {\r\n                                if (user.occupations && user.occupations.length > 0) {\r\n                                    return (\r\n                                        <Col md={6}>\r\n                                            <SwitchContactDashboardWidget\r\n                                                user={user}\r\n                                                currentSelectedContact={currentSelectedContact}\r\n                                                switchCurrentContact={switchCurrentContact}\r\n                                                backgroundColorUsed={dashboardSettings.defaultWidgetBackgroundColor}\r\n                                                textColorUsed={dashboardSettings.defaultWidgetTextColor}\r\n                                            />\r\n                                        </Col>\r\n                                    );\r\n                                }\r\n                            }}\r\n                        </PortalUserConsumer>\r\n                    </Row>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst CoachDashboard = function (props) {\r\n    return (\r\n        <div className=\"content-section\">\r\n            <div className=\"content-container w-container\">\r\n                <Row>\r\n                    <Col>\r\n                        <h1 className=\"content-heading mt-0 text-center\">Coach dashboard</h1>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <DashboardWidget\r\n                            id=\"coach-dashboard-widget-1\"\r\n                            image={props.user.portalSettingsLayoutAssigned.portal_image_bg_file_name_header}\r\n                            title=\"Schouwen\"\r\n                            text=\"Bekijk de te schouwen woningen\"\r\n                            buttonText=\"Schouwen\"\r\n                            buttonLink=\"/schouwen\"\r\n                            backgroundColorUsed=\"#ffffff\"\r\n                            textColorUsed=\"#000000\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function DashboardWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({user, currentSelectedContact, updateNameSelectedContact}) => (\r\n                <>\r\n                    {user.id > 0 && (\r\n                        <>\r\n                            {user.isCoach ? (\r\n                                <CoachDashboard\r\n                                    {...props}\r\n                                    user={user}\r\n                                    currentSelectedContact={currentSelectedContact}\r\n                                    updateNameSelectedContact={updateNameSelectedContact}\r\n                                />\r\n                            ) : (\r\n                                <Dashboard\r\n                                    {...props}\r\n                                    user={user}\r\n                                    currentSelectedContact={currentSelectedContact}\r\n                                    updateNameSelectedContact={updateNameSelectedContact}\r\n                                />\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextBlock = ({ children, className, id, placeholder }) => {\r\n    const showPlaceholder = children === '' || children === null || children === undefined;\r\n\r\n    return (\r\n        <div className={`text-block ${className} ${showPlaceholder ? 'placeholder' : ''}`} id={id}>\r\n            {showPlaceholder ? <div className={'placeholder-message'}>{placeholder}</div> : children}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextBlock.defaultProps = {\r\n    className: 'text-block',\r\n    id: '',\r\n    children: '',\r\n    placeholder: '',\r\n};\r\n\r\nTextBlock.propTypes = {\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    placeholder: PropTypes.string,\r\n};\r\n\r\nexport default TextBlock;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Row from 'react-bootstrap/Row';\r\nimport moment from 'moment';\r\n\r\nfunction DefaultContactPersonalView({ portalSettings, initialContact }) {\r\n    const {\r\n        person = {},\r\n        emailCorrespondence,\r\n        emailInvoice,\r\n        phoneNumberPrimary,\r\n        phoneNumberTwo,\r\n        primaryAddress,\r\n        iban,\r\n        ibanAttn,\r\n        didAgreeAvg,\r\n        dateDidAgreeAvg,\r\n        number,\r\n    } = initialContact;\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>Naam</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Aanhef'}>\r\n                        {person.title ? person.title.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Initialen'}>\r\n                        {person.initials}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Voornaam'}>\r\n                        {person.firstName}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Tussenvoegsel'}>\r\n                        {person.lastNamePrefix}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Achternaam'}>\r\n                        {person.lastName}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>Geboortedatum</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Geboortedatum (dd-mm-jjjj)'}>\r\n                        {person.dateOfBirth ? moment(person.dateOfBirth).format('L') : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres correspondentie</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailCorrespondence.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres nota</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailInvoice.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 1</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberPrimary.number}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 2</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberTwo.number}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Adres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {primaryAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {primaryAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {primaryAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {primaryAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {primaryAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {primaryAddress.country ? primaryAddress.country.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>EAN nummer electriciteit</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer electriciteit'}>\r\n                        {primaryAddress.eanElectricity}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>EAN nummer gas</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer gas'}>\r\n                        {primaryAddress.eanGas}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{number}</TextBlock>\r\n                </Row>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>IBAN gegevens</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Rekeningnummer (IBAN)'}>\r\n                        {iban}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'IBAN te name van'}>\r\n                        {ibanAttn}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Akkoord privacybeleid</FormLabel>\r\n                <Row>\r\n                    <div className={'col-12 col-sm-8'}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"did_agree_avg\"\r\n                            checked={didAgreeAvg}\r\n                            className=\"w-checkbox-input checkbox\"\r\n                            disabled={true}\r\n                        />\r\n                        <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                            Ik ga akkoord met{' '}\r\n                            <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                privacybeleid\r\n                            </a>{' '}\r\n                            {didAgreeAvg ? (\r\n                                <em>({dateDidAgreeAvg ? ' ' + moment(dateDidAgreeAvg).format('L') : ''})</em>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                        </span>\r\n                    </div>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Huidige energie leverancier</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Energieleverancier'}>\r\n                        {primaryAddress.primaryAddressEnergySupplierElectricity.energySupplier\r\n                            ? primaryAddress.primaryAddressEnergySupplierElectricity.energySupplier.name\r\n                            : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                {primaryAddress.primaryAddressEnergySupplierElectricity &&\r\n                primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId ? (\r\n                    <>\r\n                        <FormLabel className={'field-label'}>Klant nummer bij leverancier</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant nummer'}>\r\n                                {primaryAddress.primaryAddressEnergySupplierElectricity.esNumber}\r\n                            </TextBlock>\r\n                        </Row>\r\n\r\n                        <FormLabel className={'field-label'}>Klant bij leverancier sinds</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant sinds'}>\r\n                                {primaryAddress.primaryAddressEnergySupplierElectricity.memberSince\r\n                                    ? moment(primaryAddress.primaryAddressEnergySupplierElectricity.memberSince).format(\r\n                                          'L'\r\n                                      )\r\n                                    : ''}\r\n                            </TextBlock>\r\n                        </Row>\r\n                    </>\r\n                ) : (\r\n                    ''\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default DefaultContactPersonalView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get } from 'lodash';\r\n\r\nconst Select = ({\r\n    field,\r\n    className,\r\n    id,\r\n    options,\r\n    optionLabel,\r\n    emptyOption,\r\n    placeholder,\r\n    showErrorMessage,\r\n    errors,\r\n    touched,\r\n    classNameErrorMessage,\r\n    disabled,\r\n    customOnChange = null,\r\n}) => {\r\n    if (customOnChange) {\r\n        field.onChange = customOnChange;\r\n    }\r\n    return (\r\n        <>\r\n            {get(errors, field.name, '') && get(touched, field.name, '') && showErrorMessage ? (\r\n                <small className={`${classNameErrorMessage}`}>{get(errors, field.name, '')}</small>\r\n            ) : null}\r\n            <select\r\n                className={`select-field w-select content ${className} ${\r\n                    Boolean(get(errors, field.name, '') && get(touched, field.name, '')) ? 'has-error mb-0' : ''\r\n                } `}\r\n                id={id}\r\n                {...field}\r\n                disabled={disabled}\r\n            >\r\n                {emptyOption ? <option value=\"\">{placeholder ? `-- ${placeholder} --` : ''}</option> : null}\r\n                {options.map(option => {\r\n                    return (\r\n                        <option key={option.id} value={option.id}>\r\n                            {option[optionLabel]}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </select>\r\n        </>\r\n    );\r\n};\r\n\r\nSelect.defaultProps = {\r\n    className: '',\r\n    readOnly: false,\r\n    required: '',\r\n    optionLabel: 'name',\r\n    emptyOption: true,\r\n    placeholder: '',\r\n    showErrorMessage: true,\r\n    classNameErrorMessage: 'text-danger',\r\n    errors: {},\r\n    touched: {},\r\n};\r\n\r\nSelect.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    options: PropTypes.array.isRequired,\r\n    optionLabel: PropTypes.string,\r\n    emptyOption: PropTypes.bool,\r\n    placeholder: PropTypes.string,\r\n    showErrorMessage: PropTypes.bool,\r\n    classNameErrorMessage: PropTypes.string,\r\n    errors: PropTypes.object,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default Select;\r\n","export default [\r\n    { id: 'AU', name: 'Australië' },\r\n    { id: 'BE', name: 'België' },\r\n    { id: 'CA', name: 'Canade' },\r\n    { id: 'DK', name: 'Denemarken' },\r\n    { id: 'DE', name: 'Duitsland' },\r\n    { id: 'FI', name: 'Finland' },\r\n    { id: 'FR', name: 'Frankrijk' },\r\n    { id: 'IE', name: 'Ierland' },\r\n    { id: 'IT', name: 'Italië' },\r\n    { id: 'LU', name: 'Luxemburg' },\r\n    { id: 'NL', name: 'Nederland' },\r\n    { id: 'NZ', name: 'Nieuw-Zeeland' },\r\n    { id: 'NO', name: 'Noorwegen' },\r\n    { id: 'AT', name: 'Oostenrijk' },\r\n    { id: 'PL', name: 'Polen' },\r\n    { id: 'PT', name: 'Portugal' },\r\n    { id: 'ES', name: 'Spanje' },\r\n    { id: 'CZ', name: 'Tsjechië' },\r\n    { id: 'GB', name: 'Verenigd Koninkrijk' },\r\n    { id: 'VS', name: 'Verenigde Staten' },\r\n    { id: 'SE', name: 'Zweden' },\r\n    { id: 'CH', name: 'Zwitserland' },\r\n];\r\n","export default [\r\n    { id: 26, name: 'Agem' },\r\n    { id: 27, name: 'Anode Energie' },\r\n    { id: 66, name: 'ANWB Energie' },\r\n    { id: 24, name: 'Betuwe stroom' },\r\n    { id: 2, name: 'Budget Energie' },\r\n    { id: 58, name: 'CEN / WoonEnergie' },\r\n    { id: 54, name: 'Clean Energy' },\r\n    { id: 68, name: 'Coolblue Energie' },\r\n    { id: 28, name: 'De Groene Stroomfabriek' },\r\n    { id: 59, name: 'De Vrije Energie Producent' },\r\n    { id: 25, name: 'Delta Energie' },\r\n    { id: 50, name: 'DGB Energie' },\r\n    { id: 51, name: 'Discount Energie' },\r\n    { id: 46, name: 'Dorpstroom' },\r\n    { id: 53, name: 'DVEP Energie' },\r\n    { id: 3, name: 'E.on' },\r\n    { id: 45, name: 'Easyenergy' },\r\n    { id: 4, name: 'Eneco' },\r\n    { id: 19, name: 'Energie VanOns' },\r\n    { id: 42, name: 'Energiebesteding' },\r\n    { id: 5, name: 'Energiedirect' },\r\n    { id: 21, name: 'Energieflex' },\r\n    { id: 37, name: 'Energyhouse' },\r\n    { id: 49, name: 'EnergyZero' },\r\n    { id: 52, name: 'EnerZie' },\r\n    { id: 6, name: 'Engie' },\r\n    { id: 7, name: 'Essent' },\r\n    { id: 35, name: 'Fenor energie' },\r\n    { id: 60, name: 'Gazprom' },\r\n    { id: 56, name: 'Gezinsenergie' },\r\n    { id: 8, name: 'Greenchoice' },\r\n    { id: 43, name: 'GreenNL' },\r\n    { id: 40, name: 'Groenpand' },\r\n    { id: 44, name: 'Hezelaer' },\r\n    { id: 69, name: 'HollandsStroom' },\r\n    { id: 9, name: 'Holland Wind' },\r\n    { id: 20, name: 'Huismerk Energie' },\r\n    { id: 30, name: 'HVC Kringloop Energie' },\r\n    { id: 23, name: 'Innova Energie' },\r\n    { id: 10, name: 'Main energie' },\r\n    { id: 65, name: 'Mijn Domein Energie' },\r\n    { id: 61, name: 'Nieuw Hollands Energiebedrijf' },\r\n    { id: 38, name: 'NieuweStroom' },\r\n    { id: 12, name: 'NL Energie' },\r\n    { id: 1, name: 'OM' },\r\n    { id: 18, name: 'Overig' },\r\n    { id: 14, name: 'Oxxio' },\r\n    { id: 39, name: 'ParkStroom' },\r\n    { id: 62, name: 'PostcodeStroom' },\r\n    { id: 36, name: 'Power peers' },\r\n    { id: 15, name: 'Pure energie' },\r\n    { id: 63, name: 'PZEM' },\r\n    { id: 16, name: 'Qurrent' },\r\n    { id: 48, name: 'Qwint' },\r\n    { id: 55, name: 'Samsam' },\r\n    { id: 31, name: 'Sepa Green' },\r\n    { id: 32, name: 'Servicehouse' },\r\n    { id: 67, name: 'Shell Energie' },\r\n    { id: 34, name: 'Total' },\r\n    { id: 22, name: 'United Consumers' },\r\n    { id: 17, name: 'VanDeBron' },\r\n    { id: 13, name: 'Vattenfall' },\r\n    { id: 64, name: 'Vrij Op Naam' },\r\n    { id: 47, name: 'Welkom Energie' },\r\n    { id: 41, name: 'Windcentrale' },\r\n    { id: 57, name: 'Onbekend' },\r\n];\r\n","export default [\r\n    { id: 0, name: '' },\r\n    { id: 1, name: 'Dhr' },\r\n    { id: 2, name: 'Mevr' },\r\n    { id: 3, name: 'De heer, Mevrouw' },\r\n    { id: 4, name: 'Familie' },\r\n    { id: 5, name: 'De heer of mevrouw' },\r\n    { id: 6, name: 'De heren' },\r\n    { id: 7, name: 'De dames' },\r\n    { id: 8, name: 'Erven' },\r\n];\r\n","export default [\r\n    { id: 0, name: '' },\r\n    { id: 1, name: 'van' },\r\n    { id: 2, name: 'de' },\r\n    { id: 3, name: 'van der' },\r\n    { id: 4, name: 'van de' },\r\n    { id: 5, name: 'van den' },\r\n    { id: 6, name: 'den' },\r\n    { id: 7, name: 'ten' },\r\n    { id: 8, name: 'ter' },\r\n    { id: 9, name: 'te' },\r\n    { id: 10, name: \"van 't\" },\r\n    { id: 11, name: 'el' },\r\n    { id: 12, name: 'le' },\r\n    { id: 13, name: 'van het' },\r\n    { id: 14, name: \"in 't\" },\r\n    { id: 15, name: \"'t\" },\r\n    { id: 16, name: 'von' },\r\n    { id: 17, name: 'du' },\r\n    { id: 18, name: 'da' },\r\n    { id: 19, name: 'de la' },\r\n    { id: 20, name: 'la' },\r\n    { id: 21, name: 'der' },\r\n    { id: 22, name: 'van ter' },\r\n    { id: 23, name: \"op 't\" },\r\n    { id: 24, name: 'op den' },\r\n    { id: 25, name: 'op ten' },\r\n    { id: 26, name: 'op de' },\r\n    { id: 27, name: 'uit den' },\r\n];\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get } from 'lodash';\r\n\r\nconst InputTextDate = ({\r\n    field,\r\n    type,\r\n    min,\r\n    max,\r\n    className,\r\n    id,\r\n    readOnly,\r\n    placeholder,\r\n    showErrorMessage,\r\n    errors,\r\n    touched,\r\n    classNameErrorMessage,\r\n    disabled,\r\n    customOnChange = null,\r\n}) => {\r\n    if (customOnChange) {\r\n        field.onChange = customOnChange;\r\n    }\r\n    return (\r\n        <>\r\n            {get(errors, field.name, '') && get(touched, field.name, '') && showErrorMessage ? (\r\n                <small className={`${classNameErrorMessage}`}>{get(errors, field.name, '')}</small>\r\n            ) : null}\r\n            <input\r\n                type={type}\r\n                className={`text-input w-input ${className} ${\r\n                    Boolean(get(errors, field.name, '') && get(touched, field.name, '')) ? 'has-error mb-0' : ''\r\n                } `}\r\n                id={id}\r\n                {...field}\r\n                readOnly={readOnly}\r\n                placeholder={placeholder}\r\n                disabled={disabled}\r\n                min={min}\r\n                max={max}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nInputTextDate.defaultProps = {\r\n    type: 'date',\r\n    className: 'content',\r\n    readOnly: false,\r\n    placeholder: '',\r\n    showErrorMessage: true,\r\n    classNameErrorMessage: 'text-danger',\r\n    min: '1900-01-01',\r\n    max: '2099-12-31',\r\n    errors: {},\r\n    touched: {},\r\n};\r\n\r\nInputTextDate.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    type: PropTypes.string,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    readOnly: PropTypes.bool,\r\n    showErrorMessage: PropTypes.bool,\r\n    classNameErrorMessage: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    min: PropTypes.string,\r\n    max: PropTypes.string,\r\n    errors: PropTypes.object,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default InputTextDate;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field } from 'formik';\r\nimport Select from '../../../components/form/Select';\r\nimport Countries from '../../../data/Countries';\r\nimport EnergySuppliers from '../../../data/EnergySuppliers';\r\nimport Titles from '../../../data/Titles';\r\nimport LastNamePrefixes from '../../../data/LastNamePrefixes';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport Row from 'react-bootstrap/Row';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport moment from 'moment';\r\nimport { FaInfoCircle } from 'react-icons/fa';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport InputTextDate from '../../../components/form/InputTextDate';\r\n\r\nconst DefaultContactPersonalEdit = function({\r\n    portalSettings,\r\n    initialContact,\r\n    projectTypeCodeRef,\r\n    errors,\r\n    touched,\r\n    values,\r\n    setFieldValue,\r\n}) {\r\n    // determine memberSince disabledBefore and after\r\n    let memberSinceDisabledBefore = '';\r\n    let memberSinceDisabledAfter = '';\r\n    if (initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId) {\r\n        if (\r\n            initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n            initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId !==\r\n                values.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId\r\n        ) {\r\n            memberSinceDisabledBefore = moment(\r\n                initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince\r\n            )\r\n                .add(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        } else if (initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.endDatePrevious) {\r\n            memberSinceDisabledBefore = moment(\r\n                initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.endDatePrevious\r\n            )\r\n                .add(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        }\r\n        if (initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.memberSinceNext) {\r\n            memberSinceDisabledAfter = moment(\r\n                initialContact.primaryAddress.primaryAddressEnergySupplierElectricity.memberSinceNext\r\n            )\r\n                .subtract(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        }\r\n    }\r\n\r\n    // Handy to know: Edit person/organisation is done directly or in step 2 of register steps.\r\n    // When Edit person/organisation directly (not in step 2 of register steps) then projectTypeCodeRef = undefined\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label required'}>Naam</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={6}>\r\n                        <Field\r\n                            name=\"person.titleId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"title_id\"\r\n                                    placeholder={'Aanhef'}\r\n                                    options={Titles}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={6}>\r\n                        {initialContact.disableChangeContactNameOnPortal ? (\r\n                            <>\r\n                                <FaInfoCircle\r\n                                    color={'blue'}\r\n                                    size={'15px'}\r\n                                    data-tip={\r\n                                        'Je neemt deel aan een project waarvan de deelnemingen op naam zijn uitgegeven.<br />' +\r\n                                        'Daarom kun je jouw naam niet zelf wijzigen.<br />' +\r\n                                        'Overige contactgegevens kun je wel zelf aanpassen.<br />' +\r\n                                        'Een wijziging van rekeningnummer wordt door ons gecontroleerd.<br />' +\r\n                                        'Heb je vragen of wil je jouw gegevens door de beheerder laten wijzigen?<br />' +\r\n                                        'Kijk in het menu onder \"Over ons\" voor contact gegevens.'\r\n                                    }\r\n                                    data-for={`contact-${initialContact.id}`}\r\n                                />\r\n                                <ReactTooltip\r\n                                    id={`contact-${initialContact.id}`}\r\n                                    effect=\"float\"\r\n                                    place=\"right\"\r\n                                    multiline={true}\r\n                                    aria-haspopup=\"true\"\r\n                                />\r\n                            </>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"person.initials\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"initials\"\r\n                                    placeholder={'Initialen'}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"person.firstName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"first_name\"\r\n                                    placeholder={'Voornaam'}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"person.lastNamePrefixId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name_prefix_id\"\r\n                                    options={LastNamePrefixes}\r\n                                    placeholder={'Tussenvoegsel'}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"person.lastName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name\"\r\n                                    placeholder={'Achternaam'}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel\r\n                    htmlFor=\"date_of_birth\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Geboortedatum\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"person.dateOfBirth\"\r\n                            render={({ field }) => (\r\n                                <InputTextDate\r\n                                    field={field}\r\n                                    type=\"date\"\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    onChangeAction={setFieldValue}\r\n                                    id=\"date_of_birth\"\r\n                                    placeholder={'Geboortedatum'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-correspondence\" className={'field-label required'}>\r\n                    E-mailadres correspondentie\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailCorrespondence.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-correspondence\"\r\n                                    placeholder={'E-mailadres'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-invoice\" className=\"field-label\">\r\n                    E-mailadres nota\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailInvoice.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-invoice\"\r\n                                    placeholder={'E-mailadres'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"telephone-number-1\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Telefoonnummer 1\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberPrimary.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-1\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"telephone-number-2\" className={'field-label'}>\r\n                    Telefoonnummer 2\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberTwo.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-2\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"street\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Adres\r\n                    {initialContact.blockChangeAddress ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Adres kan momenteel niet worden aangepast. Geef jouw adreswijziging per e-mail aan ons door.`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : initialContact.blockChangeAddressNumber ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Postcode en huisnummer is niet meer wijzigen vanwege deelname aan project op een specifiek postcodegebied met huisnummerreeks`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : initialContact.isParticipantSceProject || initialContact.isParticipantPcrProject ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Postcode is niet meer wijzigen vanwege deelname aan project op een specifiek postcodegebied`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </FormLabel>\r\n                {((!isNaN(values.primaryAddress.number) && values.primaryAddress.number == 0) ||\r\n                    (isNaN(values.primaryAddress.number) && values.primaryAddress.number.trim() == '') ||\r\n                    values.primaryAddress.postalCode.trim() == '') &&\r\n                (values.primaryAddress.street.trim() != '' ||\r\n                    values.primaryAddress.number.trim() != '' ||\r\n                    values.primaryAddress.addition.trim() != '' ||\r\n                    values.primaryAddress.postalCode.trim() != '' ||\r\n                    values.primaryAddress.city.trim() != '') ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                Adres wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"primaryAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"primaryAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress || initialContact.blockChangeAddressNumber\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"primaryAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress || initialContact.blockChangeAddressNumber\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"primaryAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress ||\r\n                                        initialContact.isParticipantSceProject ||\r\n                                        initialContact.isParticipantPcrProject\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"primaryAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"primaryAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel\r\n                    htmlFor=\"ean_electricity\"\r\n                    className={\r\n                        projectTypeCodeRef === 'postalcode_link_capital' ? 'field-label required' : 'field-label'\r\n                    }\r\n                >\r\n                    EAN nummer electriciteit\r\n                </FormLabel>\r\n                {((!isNaN(values.primaryAddress.number) && values.primaryAddress.number == 0) ||\r\n                    (isNaN(values.primaryAddress.number) && values.primaryAddress.number.trim() == '') ||\r\n                    values.primaryAddress.postalCode.trim() == '') &&\r\n                values.primaryAddress.eanElectricity != null &&\r\n                values.primaryAddress.eanElectricity.trim() != '' ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                EAN nummer electriciteit wordt alleen opgeslagen als minimaal nummer en postcode zijn\r\n                                ingevuld bij adres.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"primaryAddress.eanElectricity\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"eanElectricity\"\r\n                                    placeholder={'EAN nummer electriciteit'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel htmlFor=\"ean_gas\" className={'field-label'}>\r\n                    EAN nummer gas\r\n                </FormLabel>\r\n                {((!isNaN(values.primaryAddress.number) && values.primaryAddress.number == 0) ||\r\n                    (isNaN(values.primaryAddress.number) && values.primaryAddress.number.trim() == '') ||\r\n                    values.primaryAddress.postalCode.trim() == '') &&\r\n                values.primaryAddress.eanGas != null &&\r\n                values.primaryAddress.eanGas.trim() != '' ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                EAN nummer gas wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld bij\r\n                                adres.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"primaryAddress.eanGas\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"eanGas\"\r\n                                    placeholder={'EAN nummer gas'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{values.number}</TextBlock>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col xs={12} md={6}>\r\n                <FormLabel\r\n                    htmlFor=\"iban\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    IBAN gegevens\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"iban\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban\"\r\n                                    placeholder={'Rekeningnummer (IBAN)'}\r\n                                    customOnChange={e => {\r\n                                        setFieldValue('iban', ('' + e.target.value).toUpperCase());\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"ibanAttn\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban_attn\"\r\n                                    placeholder={'IBAN te name van'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel htmlFor=\"did_agree_avg\" className={'field-label required'}>\r\n                    Akkoord privacybeleid\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"didAgreeAvg\"\r\n                            render={({ field }) => (\r\n                                <label className=\"w-checkbox checkbox-fld\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        {...field}\r\n                                        id=\"did_agree_avg\"\r\n                                        checked={field.value}\r\n                                        className=\"w-checkbox-input checkbox\"\r\n                                        disabled={initialContact.didAgreeAvg}\r\n                                    />\r\n                                    <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                                        Ik ga akkoord met{' '}\r\n                                        <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                            privacybeleid\r\n                                        </a>{' '}\r\n                                        {values.didAgreeAvg ? (\r\n                                            <em>\r\n                                                (\r\n                                                {initialContact.dateDidAgreeAvg\r\n                                                    ? moment(initialContact.dateDidAgreeAvg).format('L')\r\n                                                    : moment().format('L')}\r\n                                                )\r\n                                            </em>\r\n                                        ) : (\r\n                                            ''\r\n                                        )}\r\n                                    </span>\r\n                                    {touched[field.name] && errors[field.name] ? (\r\n                                        <div className={'error-message text-danger'}>{errors[field.name]}</div>\r\n                                    ) : null}\r\n                                </label>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                {projectTypeCodeRef === 'postalcode_link_capital' || projectTypeCodeRef === undefined ? (\r\n                    <>\r\n                        <FormLabel\r\n                            htmlFor=\"energy_supplier_id\"\r\n                            className={\r\n                                initialContact.isParticipantPcrProject ||\r\n                                projectTypeCodeRef === 'postalcode_link_capital'\r\n                                    ? 'field-label required'\r\n                                    : 'field-label'\r\n                            }\r\n                        >\r\n                            Huidige energie leverancier\r\n                        </FormLabel>\r\n                        {((!isNaN(values.primaryAddress.number) && values.primaryAddress.number == 0) ||\r\n                            (isNaN(values.primaryAddress.number) && values.primaryAddress.number.trim() == '') ||\r\n                            values.primaryAddress.postalCode.trim() == '') &&\r\n                        (values.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId != null ||\r\n                            (values.primaryAddress.primaryAddressEnergySupplierElectricity.esNumber &&\r\n                                values.primaryAddress.primaryAddressEnergySupplierElectricity.esNumber.trim() != '') ||\r\n                            (values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n                                values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() !=\r\n                                    '')) ? (\r\n                            <Row>\r\n                                <Col xs={12} sm={12}>\r\n                                    <small className={'text-danger'}>\r\n                                        Huidige energie leverancier gegevens wordt alleen opgeslagen als minimaal nummer\r\n                                        en postcode zijn ingevuld bij adres.\r\n                                    </small>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                        {(!values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince ||\r\n                            values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() == '') &&\r\n                        ((values.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId != null &&\r\n                            values.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId != '') ||\r\n                            (values.primaryAddress.primaryAddressEnergySupplierElectricity.esNumber &&\r\n                                values.primaryAddress.primaryAddressEnergySupplierElectricity.esNumber.trim() != '') ||\r\n                            (values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n                                values.primaryAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() !=\r\n                                    '')) ? (\r\n                            <Row>\r\n                                <Col xs={12} sm={12}>\r\n                                    <small className={'text-danger'}>\r\n                                        Huidige energie leverancier gegevens wordt alleen opgeslagen als Klant bij\r\n                                        leverancier sinds is ingevuld.\r\n                                    </small>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId\"\r\n                                    render={({ field }) => (\r\n                                        <Select\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"energy_supplier_id\"\r\n                                            placeholder={'Selecteer uw leverancier'}\r\n                                            options={EnergySuppliers}\r\n                                            customOnChange={e => {\r\n                                                setFieldValue(\r\n                                                    'primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId',\r\n                                                    e.target.value\r\n                                                );\r\n                                                setFieldValue(\r\n                                                    'primaryAddress.primaryAddressEnergySupplierElectricity.esNumber',\r\n                                                    ''\r\n                                                );\r\n                                                setFieldValue(\r\n                                                    'primaryAddress.primaryAddressEnergySupplierElectricity.memberSince',\r\n                                                    ''\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {values.primaryAddress.primaryAddressEnergySupplierElectricity &&\r\n                        values.primaryAddress.primaryAddressEnergySupplierElectricity.energySupplierId ? (\r\n                            <>\r\n                                <FormLabel\r\n                                    htmlFor=\"es_number\"\r\n                                    className={\r\n                                        projectTypeCodeRef === 'postalcode_link_capital'\r\n                                            ? 'field-label required'\r\n                                            : 'field-label'\r\n                                    }\r\n                                >\r\n                                    Klant nummer bij leverancier\r\n                                </FormLabel>\r\n                                <Row>\r\n                                    <Col xs={12} sm={12} md={8}>\r\n                                        <Field\r\n                                            name=\"primaryAddress.primaryAddressEnergySupplierElectricity.esNumber\"\r\n                                            render={({ field }) => (\r\n                                                <InputText\r\n                                                    field={field}\r\n                                                    errors={errors}\r\n                                                    touched={touched}\r\n                                                    id=\"es_number\"\r\n                                                    placeholder={'Klant nummer bij leverancier'}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <FormLabel htmlFor=\"member_since\" className={'field-label'}>\r\n                                    Klant bij leverancier sinds\r\n                                </FormLabel>\r\n                                <Row>\r\n                                    <Col xs={12} sm={12} md={8}>\r\n                                        <Field\r\n                                            name=\"primaryAddress.primaryAddressEnergySupplierElectricity.memberSince\"\r\n                                            render={({ field }) => (\r\n                                                <InputTextDate\r\n                                                    field={field}\r\n                                                    type=\"date\"\r\n                                                    errors={errors}\r\n                                                    touched={touched}\r\n                                                    onChangeAction={setFieldValue}\r\n                                                    min={memberSinceDisabledBefore}\r\n                                                    max={memberSinceDisabledAfter}\r\n                                                    id=\"member_since\"\r\n                                                    placeholder={'Klant sinds'}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </>\r\n                ) : null}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default DefaultContactPersonalEdit;\r\n","import * as Yup from 'yup';\r\nimport * as ibantools from 'ibantools';\r\nimport { isEmpty } from 'lodash';\r\n\r\nexport default {\r\n    validationSchemaBasic: Yup.object().shape({\r\n        didAgreeAvg: Yup.bool().test(\r\n            'didAgreeAvg',\r\n            'Je dient akkoord te gaan met privacybeleid!',\r\n            value => value === true\r\n        ),\r\n        person: Yup.object().shape({\r\n            lastName: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        emailCorrespondence: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres')\r\n                .required('Verplicht'),\r\n        }),\r\n        emailInvoice: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres'),\r\n        }),\r\n        primaryAddress: Yup.object().shape({\r\n            street: Yup.string().trim(),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n            city: Yup.string().trim(),\r\n            eanElectricity: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig'),\r\n            eanGas: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig'),\r\n        }),\r\n        phoneNumberPrimary: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}|^$/, 'Minimaal 10 cijfers nodig'),\r\n        }),\r\n        phoneNumberTwo: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}|^$/, 'Minimaal 10 cijfers nodig'),\r\n        }),\r\n        iban: Yup.string()\r\n            .nullable()\r\n            .trim()\r\n            .test(\r\n                'iban',\r\n                'Ongeldige IBAN of gebruik geen spaties.',\r\n                value => ibantools.isValidIBAN(value) || isEmpty(value)\r\n            ),\r\n    }),\r\n\r\n    validationSchemaAdditional: Yup.object().shape({\r\n        person: Yup.object().shape({\r\n            firstName: Yup.string()\r\n                .trim()\r\n                // .required('Verplicht'),\r\n                .test('initials-and-first-name-check', 'Voornaam of initialen verplicht', function(value) {\r\n                    if (value.trim() != '' || this.parent.initials.trim() != '') {\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }),\r\n            dateOfBirth: Yup.date()\r\n                .typeError('Verplicht of ongeldige datum')\r\n                .required('Verplicht'),\r\n        }),\r\n        phoneNumberPrimary: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}/, 'Minimaal 10 cijfers nodig')\r\n                .required('Verplicht'),\r\n        }),\r\n        phoneNumberTwo: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}|^$/, 'Minimaal 10 cijfers nodig'),\r\n        }),\r\n        primaryAddress: Yup.object().shape({\r\n            street: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                })\r\n                .required('Verplicht'),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        this.parent.countryId !== 'NL' &&\r\n                        this.parent.countryId !== null &&\r\n                        this.parent.countryId != ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                })\r\n                .required('Verplicht'),\r\n            city: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        iban: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht')\r\n            .test('iban', 'Ongeldige IBAN of gebruik geen spaties.', value => ibantools.isValidIBAN(value)),\r\n        ibanAttn: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht'),\r\n    }),\r\n\r\n    validationSchemaPcrAdditional: Yup.object().shape({\r\n        primaryAddress: Yup.object().shape({\r\n            eanElectricity: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig')\r\n                .required('Verplicht'),\r\n            primaryAddressEnergySupplierElectricity: Yup.object().shape({\r\n                energySupplierId: Yup.string()\r\n                    .nullable()\r\n                    .required('Verplicht'),\r\n                esNumber: Yup.string()\r\n                    .nullable()\r\n                    .trim()\r\n                    .required('Verplicht'),\r\n            }),\r\n        }),\r\n    }),\r\n\r\n    validationSchemaPostalCodeAndNumber: Yup.object().shape({\r\n        primaryAddress: Yup.object().shape({\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .required('Verplicht')\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .required('Verplicht')\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n        }),\r\n    }),\r\n};\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport DefaultContactPersonalView from './default-form-personal/View';\r\nimport DefaultContactPersonalEdit from './default-form-personal/Edit';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaPersonal from './../../helpers/ValidationSchemaPersonal';\r\nimport { isEmpty } from 'lodash';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction ContactDetailsPersonal({\r\n    portalSettings,\r\n    initialContact,\r\n    handleSubmitContactValues,\r\n    editButtonGroup,\r\n    editForm,\r\n    setEditForm,\r\n}) {\r\n    const validationSchema = initialContact.isParticipantPcrProject\r\n        ? ValidationSchemaPersonal.validationSchemaBasic\r\n              .concat(ValidationSchemaPersonal.validationSchemaAdditional)\r\n              .concat(ValidationSchemaPersonal.validationSchemaPcrAdditional)\r\n        : initialContact.isParticipant\r\n        ? ValidationSchemaPersonal.validationSchemaBasic.concat(ValidationSchemaPersonal.validationSchemaAdditional)\r\n        : ValidationSchemaPersonal.validationSchemaBasic;\r\n    return (\r\n        <div>\r\n            {editForm ? (\r\n                <Formik\r\n                    initialValues={initialContact}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        actions.setSubmitting(true);\r\n                        handleSubmitContactValues(values, actions, () => setEditForm(false));\r\n                    }}\r\n                    render={({ errors, touched, setFieldValue, isSubmitting, status, values, handleSubmit }) => {\r\n                        return (\r\n                            <Form>\r\n                                <DefaultContactPersonalEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                />\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ButtonGroup aria-label=\"personal\" className=\"float-right\">\r\n                                            <Button\r\n                                                variant={'outline-dark'}\r\n                                                size=\"sm\"\r\n                                                onClick={function() {\r\n                                                    setEditForm(false);\r\n                                                }}\r\n                                            >\r\n                                                Annuleren\r\n                                            </Button>\r\n                                            <Button\r\n                                                className={'w-button'}\r\n                                                size=\"sm\"\r\n                                                onClick={handleSubmit}\r\n                                                disabled={isSubmitting}\r\n                                            >\r\n                                                {isSubmitting ? (\r\n                                                    <span>\r\n                                                        <ClipLoader color={'white'} size={14} />\r\n                                                        Bezig met opslaan\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    'Opslaan'\r\n                                                )}\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!isEmpty(errors) ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                    Niet alle verplichte velden zijn (juist) ingevuld!\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                                {status && status.message ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                    {status.message}\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </Form>\r\n                        );\r\n                    }}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <DefaultContactPersonalView portalSettings={portalSettings} initialContact={initialContact} />\r\n                    <Row>\r\n                        <Col>{editButtonGroup}</Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactDetailsPersonal;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Row from 'react-bootstrap/Row';\r\nimport moment from 'moment';\r\n\r\nfunction DefaultContactOrganisationView({ portalSettings, initialContact }) {\r\n    const {\r\n        organisation = {},\r\n        emailCorrespondence,\r\n        emailInvoice,\r\n        phoneNumberPrimary,\r\n        phoneNumberTwo,\r\n        visitAddress,\r\n        postalAddress,\r\n        invoiceAddress,\r\n        iban,\r\n        ibanAttn,\r\n        didAgreeAvg,\r\n        dateDidAgreeAvg,\r\n        number,\r\n        primaryOccupations,\r\n    } = initialContact;\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>Bedrijfsnaam</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Bedrijfsnaam'}>\r\n                        {organisation.name}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>KvK</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'KvK'}>\r\n                        {organisation.chamberOfCommerceNumber}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>BTW nummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'BTW nummer'}>\r\n                        {organisation.vatNumber}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>IBAN gegevens</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Rekeningnummer (IBAN)'}>\r\n                        {iban}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'IBAN te name van'}>\r\n                        {ibanAttn}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Website</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Website'}>\r\n                        {organisation.website}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Akkoord privacybeleid</FormLabel>\r\n                <Row>\r\n                    <div className={'col-12 col-sm-8'}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"did_agree_avg\"\r\n                            checked={didAgreeAvg}\r\n                            className=\"w-checkbox-input checkbox\"\r\n                            disabled={true}\r\n                        />\r\n                        <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                            Ik ga akkoord met{' '}\r\n                            <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                privacybeleid\r\n                            </a>{' '}\r\n                            {didAgreeAvg ? <em>({dateDidAgreeAvg ? moment(dateDidAgreeAvg).format('L') : ''})</em> : ''}\r\n                        </span>\r\n                    </div>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres correspondentie</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailCorrespondence.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres nota</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailInvoice.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 1</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberPrimary.number}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 2</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberTwo.number}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{number}</TextBlock>\r\n                </Row>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>Bezoekadres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {visitAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {visitAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {visitAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {visitAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {visitAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {visitAddress.country ? visitAddress.country.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>EAN nummer electriciteit</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer electriciteit'}>\r\n                        {visitAddress.eanElectricity}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>EAN nummer gas</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer gas'}>\r\n                        {visitAddress.eanGas}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>Huidige energie leverancier</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Energieleverancier'}>\r\n                        {visitAddress.primaryAddressEnergySupplierElectricity.energySupplier\r\n                            ? visitAddress.primaryAddressEnergySupplierElectricity.energySupplier.name\r\n                            : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n                {visitAddress.primaryAddressEnergySupplierElectricity &&\r\n                visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId ? (\r\n                    <>\r\n                        <FormLabel className={'field-label'}>Klant nummer bij leverancier</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant nummer'}>\r\n                                {visitAddress.primaryAddressEnergySupplierElectricity.esNumber}\r\n                            </TextBlock>\r\n                        </Row>\r\n\r\n                        <FormLabel className={'field-label'}>Klant bij leverancier sinds</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant sinds'}>\r\n                                {visitAddress.primaryAddressEnergySupplierElectricity.memberSince\r\n                                    ? moment(visitAddress.primaryAddressEnergySupplierElectricity.memberSince).format(\r\n                                          'L'\r\n                                      )\r\n                                    : ''}\r\n                            </TextBlock>\r\n                        </Row>\r\n                    </>\r\n                ) : (\r\n                    ''\r\n                )}\r\n\r\n                <FormLabel className={'field-label'}>Postadres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {postalAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {postalAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {postalAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {postalAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {postalAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {postalAddress.country ? postalAddress.country.name : ''}\r\n                    </TextBlock>{' '}\r\n                </Row>\r\n                <FormLabel className={'field-label'}>Nota adres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {invoiceAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {invoiceAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {invoiceAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {invoiceAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {invoiceAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {invoiceAddress.country ? invoiceAddress.country.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default DefaultContactOrganisationView;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field } from 'formik';\r\nimport Select from '../../../components/form/Select';\r\nimport Countries from '../../../data/Countries';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport Row from 'react-bootstrap/Row';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport moment from 'moment';\r\nimport EnergySuppliers from '../../../data/EnergySuppliers';\r\nimport { FaInfoCircle } from 'react-icons/fa';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport InputTextDate from '../../../components/form/InputTextDate';\r\n\r\nconst DefaultContactOrganisationEdit = function({\r\n    portalSettings,\r\n    initialContact,\r\n    projectTypeCodeRef,\r\n    errors,\r\n    touched,\r\n    values,\r\n    setFieldValue,\r\n}) {\r\n    // determine memberSince disabledBefore and after\r\n    let memberSinceDisabledBefore = '';\r\n    let memberSinceDisabledAfter = '';\r\n    if (initialContact.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId) {\r\n        if (\r\n            initialContact.visitAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n            initialContact.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId !==\r\n                values.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId\r\n        ) {\r\n            memberSinceDisabledBefore = moment(\r\n                initialContact.visitAddress.primaryAddressEnergySupplierElectricity.memberSince\r\n            )\r\n                .add(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        } else if (initialContact.visitAddress.primaryAddressEnergySupplierElectricity.endDatePrevious) {\r\n            memberSinceDisabledBefore = moment(\r\n                initialContact.visitAddress.primaryAddressEnergySupplierElectricity.endDatePrevious\r\n            )\r\n                .add(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        }\r\n        if (initialContact.visitAddress.primaryAddressEnergySupplierElectricity.memberSinceNext) {\r\n            memberSinceDisabledAfter = moment(\r\n                initialContact.visitAddress.primaryAddressEnergySupplierElectricity.memberSinceNext\r\n            )\r\n                .subtract(1, 'day')\r\n                .format('YYYY-MM-DD');\r\n        }\r\n    }\r\n\r\n    // Handy to know: Edit person/organisation is done directly or in step 2 of register steps.\r\n    // When Edit person/organisation directly (not in step 2 of register steps) then projectTypeCodeRef = undefined\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label required'}>Naam</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.name\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"name\"\r\n                                    placeholder={'Naam'}\r\n                                    disabled={initialContact.disableChangeContactNameOnPortal}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        {initialContact.disableChangeContactNameOnPortal ? (\r\n                            <>\r\n                                <FaInfoCircle\r\n                                    color={'blue'}\r\n                                    size={'15px'}\r\n                                    data-tip={\r\n                                        'Je neemt deel aan een project waarvan de deelnemingen op naam zijn uitgegeven.<br />' +\r\n                                        'Daarom kun je jouw naam niet zelf wijzigen.<br />' +\r\n                                        'Overige contactgegevens kun je wel zelf aanpassen.<br />' +\r\n                                        'Een wijziging van rekeningnummer wordt door ons gecontroleerd.<br />' +\r\n                                        'Heb je vragen of wil je jouw gegevens door de beheerder laten wijzigen?<br />' +\r\n                                        'Kijk in het menu onder \"Over ons\" voor contact gegevens.'\r\n                                    }\r\n                                    data-for={`contact-${initialContact.id}`}\r\n                                />\r\n                                <ReactTooltip\r\n                                    id={`contact-${initialContact.id}`}\r\n                                    effect=\"float\"\r\n                                    place=\"right\"\r\n                                    multiline={true}\r\n                                    aria-haspopup=\"true\"\r\n                                />\r\n                            </>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>KvK</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.chamberOfCommerceNumber\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"chamber_of_commerce_number\"\r\n                                    placeholder={'KvK'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>BTW nummer</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.vatNumber\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"vat_number\"\r\n                                    placeholder={'BTW nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"iban\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    IBAN gegevens\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"iban\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban\"\r\n                                    placeholder={'Rekeningnummer (IBAN)'}\r\n                                    customOnChange={e => {\r\n                                        setFieldValue('iban', ('' + e.target.value).toUpperCase());\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"ibanAttn\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban_attn\"\r\n                                    placeholder={'IBAN te name van'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Website</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.website\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"website\"\r\n                                    placeholder={'Website'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"did_agree_avg\" className={'field-label required'}>\r\n                    Akkoord privacybeleid\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"didAgreeAvg\"\r\n                            render={({ field }) => (\r\n                                <label className=\"w-checkbox checkbox-fld\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        {...field}\r\n                                        id=\"did_agree_avg\"\r\n                                        checked={field.value}\r\n                                        className=\"w-checkbox-input checkbox\"\r\n                                        disabled={initialContact.didAgreeAvg}\r\n                                    />\r\n                                    <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                                        Ik ga akkoord met{' '}\r\n                                        <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                            privacybeleid\r\n                                        </a>{' '}\r\n                                        {values.didAgreeAvg ? (\r\n                                            <em>\r\n                                                (\r\n                                                {initialContact.dateDidAgreeAvg\r\n                                                    ? moment(initialContact.dateDidAgreeAvg).format('L')\r\n                                                    : moment().format('L')}\r\n                                                )\r\n                                            </em>\r\n                                        ) : (\r\n                                            ''\r\n                                        )}\r\n                                    </span>\r\n                                    {touched[field.name] && errors[field.name] ? (\r\n                                        <div className={'error-message text-danger'}>{errors[field.name]}</div>\r\n                                    ) : null}\r\n                                </label>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-correspondence\" className={'field-label required'}>\r\n                    E-mailadres correspondentie\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailCorrespondence.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-correspondence\"\r\n                                    placeholder={'E-mailadres'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-invoice\" className=\"field-label\">\r\n                    E-mailadres nota\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailInvoice.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-invoice\"\r\n                                    placeholder={'E-mailadres'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"telephone-number-1\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Telefoonnummer 1\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberPrimary.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-1\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"telephone-number-2\" className={'field-label'}>\r\n                    Telefoonnummer 2\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberTwo.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-2\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{values.number}</TextBlock>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col xs={12} md={6}>\r\n                <FormLabel\r\n                    htmlFor=\"street\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Bezoekadres\r\n                    {initialContact.blockChangeAddress ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Adres kan momenteel niet worden aangepast. Geef jouw adreswijziging per e-mail aan ons door.`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : initialContact.blockChangeAddressNumber ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Postcode en huisnummer is niet meer wijzigen vanwege deelname aan project op een specifiek postcodegebied met huisnummerreeks`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : initialContact.isParticipantSceProject || initialContact.isParticipantPcrProject ? (\r\n                        <>\r\n                            {' '}\r\n                            <FaInfoCircle\r\n                                color={'blue'}\r\n                                size={'15px'}\r\n                                data-tip={`Postcode is niet meer wijzigen vanwege deelname aan project op een specifiek postcodegebied`}\r\n                                data-for={`participant-${initialContact.id}`}\r\n                            />\r\n                            <ReactTooltip\r\n                                id={`participant-${initialContact.id}`}\r\n                                effect=\"float\"\r\n                                place=\"bottom\"\r\n                                multiline={true}\r\n                                aria-haspopup=\"true\"\r\n                            />\r\n                        </>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </FormLabel>\r\n                {((!isNaN(values.visitAddress.number) && values.visitAddress.number == 0) ||\r\n                    (isNaN(values.visitAddress.number) && values.visitAddress.number.trim() == '') ||\r\n                    values.visitAddress.postalCode.trim() == '') &&\r\n                (values.visitAddress.street.trim() != '' ||\r\n                    values.visitAddress.number.trim() != '' ||\r\n                    values.visitAddress.addition.trim() != '' ||\r\n                    values.visitAddress.postalCode.trim() != '' ||\r\n                    values.visitAddress.city.trim() != '') ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                Adres wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"visitAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"visitAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress || initialContact.blockChangeAddressNumber\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"visitAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress || initialContact.blockChangeAddressNumber\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"visitAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                    disabled={\r\n                                        initialContact.blockChangeAddress ||\r\n                                        initialContact.isParticipantSceProject ||\r\n                                        initialContact.isParticipantPcrProject\r\n                                    }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"visitAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"visitAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                    disabled={initialContact.blockChangeAddress}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel\r\n                    htmlFor=\"ean_electricity\"\r\n                    className={\r\n                        projectTypeCodeRef === 'postalcode_link_capital' ? 'field-label required' : 'field-label'\r\n                    }\r\n                >\r\n                    EAN nummer electriciteit\r\n                </FormLabel>\r\n                {((!isNaN(values.visitAddress.number) && values.visitAddress.number == 0) ||\r\n                    (isNaN(values.visitAddress.number) && values.visitAddress.number.trim() == '') ||\r\n                    values.visitAddress.postalCode.trim() == '') &&\r\n                values.visitAddress.eanElectricity != null &&\r\n                values.visitAddress.eanElectricity.trim() != '' ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                EAN nummer electriciteit wordt alleen opgeslagen als minimaal nummer en postcode zijn\r\n                                ingevuld bij bezoekadres.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"visitAddress.eanElectricity\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"ean_electricity\"\r\n                                    placeholder={'EAN nummer electriciteit'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"ean_gas\" className={'field-label'}>\r\n                    EAN nummer gas\r\n                </FormLabel>\r\n                {((!isNaN(values.visitAddress.number) && values.visitAddress.number == 0) ||\r\n                    (isNaN(values.visitAddress.number) && values.visitAddress.number.trim() == '') ||\r\n                    values.visitAddress.postalCode.trim() == '') &&\r\n                values.visitAddress.eanGas != null &&\r\n                values.visitAddress.eanGas.trim() != '' ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                EAN nummer gas wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld bij\r\n                                bezoekadres.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"visitAddress.eanGas\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"ean_gas\"\r\n                                    placeholder={'EAN nummer gas'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {projectTypeCodeRef === 'postalcode_link_capital' || projectTypeCodeRef === undefined ? (\r\n                    <>\r\n                        <FormLabel\r\n                            htmlFor=\"energy_supplier_id\"\r\n                            className={\r\n                                initialContact.isParticipantPcrProject ||\r\n                                projectTypeCodeRef === 'postalcode_link_capital'\r\n                                    ? 'field-label required'\r\n                                    : 'field-label'\r\n                            }\r\n                        >\r\n                            Huidige energie leverancier\r\n                        </FormLabel>\r\n                        {((!isNaN(values.visitAddress.number) && values.visitAddress.number == 0) ||\r\n                            (isNaN(values.visitAddress.number) && values.visitAddress.number.trim() == '') ||\r\n                            values.visitAddress.postalCode.trim() == '') &&\r\n                        (values.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId != null ||\r\n                            (values.visitAddress.primaryAddressEnergySupplierElectricity.esNumber &&\r\n                                values.visitAddress.primaryAddressEnergySupplierElectricity.esNumber.trim() != '') ||\r\n                            (values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n                                values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() !=\r\n                                    '')) ? (\r\n                            <Row>\r\n                                <Col xs={12} sm={12}>\r\n                                    <small className={'text-danger'}>\r\n                                        Huidige energie leverancier gegevens wordt alleen opgeslagen als minimaal nummer\r\n                                        en postcode zijn ingevuld bij bezoekadres.\r\n                                    </small>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                        {(!values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince ||\r\n                            values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() == '') &&\r\n                        ((values.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId != null &&\r\n                            values.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId != '') ||\r\n                            (values.visitAddress.primaryAddressEnergySupplierElectricity.esNumber &&\r\n                                values.visitAddress.primaryAddressEnergySupplierElectricity.esNumber.trim() != '') ||\r\n                            (values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince &&\r\n                                values.visitAddress.primaryAddressEnergySupplierElectricity.memberSince.trim() !=\r\n                                    '')) ? (\r\n                            <Row>\r\n                                <Col xs={12} sm={12}>\r\n                                    <small className={'text-danger'}>\r\n                                        Huidige energie leverancier gegevens wordt alleen opgeslagen als Klant bij\r\n                                        leverancier sinds is ingevuld.\r\n                                    </small>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId\"\r\n                                    render={({ field }) => (\r\n                                        <Select\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"energy_supplier_id\"\r\n                                            placeholder={'Selecteer uw leverancier'}\r\n                                            options={EnergySuppliers}\r\n                                            customOnChange={e => {\r\n                                                setFieldValue(\r\n                                                    'visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId',\r\n                                                    e.target.value\r\n                                                );\r\n                                                setFieldValue(\r\n                                                    'visitAddress.primaryAddressEnergySupplierElectricity.esNumber',\r\n                                                    ''\r\n                                                );\r\n                                                setFieldValue(\r\n                                                    'visitAddress.primaryAddressEnergySupplierElectricity.memberSince',\r\n                                                    ''\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {values.visitAddress.primaryAddressEnergySupplierElectricity &&\r\n                        values.visitAddress.primaryAddressEnergySupplierElectricity.energySupplierId ? (\r\n                            <>\r\n                                <FormLabel\r\n                                    htmlFor=\"es_number\"\r\n                                    className={\r\n                                        projectTypeCodeRef === 'postalcode_link_capital'\r\n                                            ? 'field-label required'\r\n                                            : 'field-label'\r\n                                    }\r\n                                >\r\n                                    Klant nummer bij leverancier\r\n                                </FormLabel>\r\n                                <Row>\r\n                                    <Col xs={12} sm={12} md={8}>\r\n                                        <Field\r\n                                            name=\"visitAddress.primaryAddressEnergySupplierElectricity.esNumber\"\r\n                                            render={({ field }) => (\r\n                                                <InputText\r\n                                                    field={field}\r\n                                                    errors={errors}\r\n                                                    touched={touched}\r\n                                                    id=\"es_number\"\r\n                                                    placeholder={'Klant nummer bij leverancier'}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <FormLabel htmlFor=\"member_since\" className={'field-label'}>\r\n                                    Klant bij leverancier sinds\r\n                                </FormLabel>\r\n                                <Row>\r\n                                    <Col xs={12} sm={12} md={8}>\r\n                                        <Field\r\n                                            name=\"visitAddress.primaryAddressEnergySupplierElectricity.memberSince\"\r\n                                            render={({ field }) => (\r\n                                                <InputTextDate\r\n                                                    field={field}\r\n                                                    type=\"date\"\r\n                                                    errors={errors}\r\n                                                    touched={touched}\r\n                                                    onChangeAction={setFieldValue}\r\n                                                    min={memberSinceDisabledBefore}\r\n                                                    max={memberSinceDisabledAfter}\r\n                                                    id=\"member_since\"\r\n                                                    placeholder={'Klant sinds'}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : (\r\n                            ''\r\n                        )}\r\n                    </>\r\n                ) : null}\r\n\r\n                <FormLabel htmlFor=\"street\" className=\"field-label\">\r\n                    Postadres\r\n                </FormLabel>\r\n                {((!isNaN(values.postalAddress.number) && values.postalAddress.number == 0) ||\r\n                    (isNaN(values.postalAddress.number) && values.postalAddress.number.trim() == '') ||\r\n                    values.postalAddress.postalCode.trim() == '') &&\r\n                (values.postalAddress.street.trim() != '' ||\r\n                    values.postalAddress.number.trim() != '' ||\r\n                    values.postalAddress.addition.trim() != '' ||\r\n                    values.postalAddress.postalCode.trim() != '' ||\r\n                    values.postalAddress.city.trim() != '') ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                Adres wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"postalAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"postalAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"postalAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"postalAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"postalAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"postalAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel htmlFor=\"street\" className=\"field-label\">\r\n                    Nota adres\r\n                </FormLabel>\r\n                {((!isNaN(values.invoiceAddress.number) && values.invoiceAddress.number == 0) ||\r\n                    (isNaN(values.invoiceAddress.number) && values.invoiceAddress.number.trim() == '') ||\r\n                    values.invoiceAddress.postalCode.trim() == '') &&\r\n                (values.invoiceAddress.street.trim() != '' ||\r\n                    values.invoiceAddress.number.trim() != '' ||\r\n                    values.invoiceAddress.addition.trim() != '' ||\r\n                    values.invoiceAddress.postalCode.trim() != '' ||\r\n                    values.invoiceAddress.city.trim() != '') ? (\r\n                    <Row>\r\n                        <Col xs={12} sm={12}>\r\n                            <small className={'text-danger'}>\r\n                                Adres wordt alleen opgeslagen als minimaal nummer en postcode zijn ingevuld.\r\n                            </small>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (\r\n                    ''\r\n                )}\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"invoiceAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"invoiceAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"invoiceAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"invoiceAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"invoiceAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"invoiceAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default DefaultContactOrganisationEdit;\r\n","import * as Yup from 'yup';\r\nimport * as ibantools from 'ibantools';\r\nimport { isEmpty } from 'lodash';\r\n\r\nexport default {\r\n    validationSchemaBasic: Yup.object().shape({\r\n        didAgreeAvg: Yup.bool().test(\r\n            'didAgreeAvg',\r\n            'Je dient akkoord te gaan met privacybeleid!',\r\n            value => value === true\r\n        ),\r\n        organisation: Yup.object().shape({\r\n            name: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        emailCorrespondence: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres')\r\n                .required('Verplicht'),\r\n        }),\r\n        emailInvoice: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres'),\r\n        }),\r\n        postalAddress: Yup.object().shape({\r\n            street: Yup.string().trim(),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n            city: Yup.string().trim(),\r\n        }),\r\n        visitAddress: Yup.object().shape({\r\n            street: Yup.string().trim(),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n            city: Yup.string().trim(),\r\n            eanElectricity: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig'),\r\n            eanGas: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig'),\r\n        }),\r\n        invoiceAddress: Yup.object().shape({\r\n            street: Yup.string().trim(),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n            city: Yup.string().trim(),\r\n        }),\r\n        phoneNumberPrimary: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}|^$/, 'Minimaal 10 cijfers nodig'),\r\n        }),\r\n        phoneNumberTwo: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}|^$/, 'Minimaal 10 cijfers nodig'),\r\n        }),\r\n        iban: Yup.string()\r\n            .nullable()\r\n            .trim()\r\n            .test(\r\n                'iban',\r\n                'Ongeldige IBAN of gebruik geen spaties.',\r\n                value => ibantools.isValidIBAN(value) || isEmpty(value)\r\n            ),\r\n    }),\r\n\r\n    validationSchemaAdditional: Yup.object().shape({\r\n        phoneNumberPrimary: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .matches(/(\\d.*){10}/, 'Minimaal 10 cijfers nodig')\r\n                .required('Verplicht'),\r\n        }),\r\n        visitAddress: Yup.object().shape({\r\n            street: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                })\r\n                .required('Verplicht'),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        this.parent.countryId !== 'NL' &&\r\n                        this.parent.countryId !== null &&\r\n                        this.parent.countryId != ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                })\r\n                .required('Verplicht'),\r\n            city: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        iban: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht')\r\n            .test('iban', 'Ongeldige IBAN of gebruik geen spaties.', value => ibantools.isValidIBAN(value)),\r\n        ibanAttn: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht'),\r\n        organisation: Yup.object().shape({\r\n            chamberOfCommerceNumber: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n    }),\r\n\r\n    validationSchemaPcrAdditional: Yup.object().shape({\r\n        visitAddress: Yup.object().shape({\r\n            eanElectricity: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .matches(/(\\d.*){18}|^$/, 'Minimaal 18 cijfers nodig')\r\n                .required('Verplicht'),\r\n            primaryAddressEnergySupplierElectricity: Yup.object().shape({\r\n                energySupplierId: Yup.string()\r\n                    .nullable()\r\n                    .required('Verplicht'),\r\n                esNumber: Yup.string()\r\n                    .nullable()\r\n                    .trim()\r\n                    .required('Verplicht'),\r\n            }),\r\n        }),\r\n    }),\r\n\r\n    validationSchemaPostalCodeAndNumber: Yup.object().shape({\r\n        visitAddress: Yup.object().shape({\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .required('Verplicht')\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .required('Verplicht')\r\n                .test('postal-code-nl-check', 'Formaat Nederlandse postcode is 1234 AB', function(value) {\r\n                    if (\r\n                        (this.parent.countryId !== 'NL' &&\r\n                            this.parent.countryId !== null &&\r\n                            this.parent.countryId != '') ||\r\n                        value.trim() == ''\r\n                    ) {\r\n                        return true;\r\n                    } else {\r\n                        return !value.search(/^[1-9][0-9]{3}[ ]?([A-RT-Za-rt-z][A-Za-z]|[sS][BCbcE-Re-rT-Zt-z])$/);\r\n                    }\r\n                }),\r\n        }),\r\n    }),\r\n};\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport DefaultContactOrganisationView from './default-form-organisation/View';\r\nimport DefaultContactOrganisationEdit from './default-form-organisation/Edit';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaOrganisation from './../../helpers/ValidationSchemaOrganisation';\r\nimport { isEmpty } from 'lodash';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction ContactDetailsOrganisation({\r\n    portalSettings,\r\n    initialContact,\r\n    handleSubmitContactValues,\r\n    editButtonGroup,\r\n    editForm,\r\n    setEditForm,\r\n}) {\r\n    const validationSchema = initialContact.isParticipantPcrProject\r\n        ? ValidationSchemaOrganisation.validationSchemaBasic\r\n              .concat(ValidationSchemaOrganisation.validationSchemaAdditional)\r\n              .concat(ValidationSchemaOrganisation.validationSchemaPcrAdditional)\r\n        : initialContact.isParticipant\r\n        ? ValidationSchemaOrganisation.validationSchemaBasic.concat(\r\n              ValidationSchemaOrganisation.validationSchemaAdditional\r\n          )\r\n        : ValidationSchemaOrganisation.validationSchemaBasic;\r\n\r\n    return (\r\n        <div>\r\n            {editForm ? (\r\n                <Formik\r\n                    initialValues={initialContact}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        actions.setSubmitting(true);\r\n                        handleSubmitContactValues(values, actions, () => setEditForm(false));\r\n                    }}\r\n                    render={({ errors, touched, setFieldValue, isSubmitting, status, values, handleSubmit }) => {\r\n                        return (\r\n                            <Form>\r\n                                <DefaultContactOrganisationEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                />\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ButtonGroup aria-label=\"organisation\" className=\"float-right\">\r\n                                            <Button\r\n                                                variant={'outline-dark'}\r\n                                                size=\"sm\"\r\n                                                onClick={function() {\r\n                                                    setEditForm(false);\r\n                                                }}\r\n                                            >\r\n                                                Annuleren\r\n                                            </Button>\r\n                                            <Button\r\n                                                className={'w-button'}\r\n                                                size=\"sm\"\r\n                                                onClick={handleSubmit}\r\n                                                disabled={isSubmitting}\r\n                                            >\r\n                                                {isSubmitting ? (\r\n                                                    <span>\r\n                                                        <ClipLoader color={'white'} size={14} />\r\n                                                        Bezig met opslaan\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    'Opslaan'\r\n                                                )}\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!isEmpty(errors) ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                    Niet alle verplichte velden zijn (juist) ingevuld!\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                                {status && status.message ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                    {status.message}\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </Form>\r\n                        );\r\n                    }}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <DefaultContactOrganisationView portalSettings={portalSettings} initialContact={initialContact} />\r\n                    <Row>\r\n                        <Col>{editButtonGroup}</Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactDetailsOrganisation;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { PortalUserConsumer } from '../../context/PortalUserContext';\r\nimport ContactAPI from '../../api/contact/ContactAPI';\r\nimport rebaseContact from '../../helpers/RebaseContact';\r\nimport LoadingView from '../../components/general/LoadingView';\r\nimport ContactDetailsPersonal from './Personal';\r\nimport ContactDetailsOrganisation from './Organisation';\r\nimport PortalSettingsAPI from '../../api/portal-settings/PortalSettingsAPI';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nconst ContactDetails = function(props) {\r\n    const [contact, setContact] = useState({});\r\n    const [portalSettings, setPortalSettings] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n    const prevCurrentSelectedContact = usePrevious(props.currentSelectedContact);\r\n    const [editForm, setEditForm] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const keys =\r\n            '?keys[]=portalName' +\r\n            '&keys[]=portalWebsite' +\r\n            '&keys[]=portalUrl' +\r\n            '&keys[]=responsibleUserId' +\r\n            '&keys[]=checkContactTaskResponsibleUserId' +\r\n            '&keys[]=linkPrivacyPolicy' +\r\n            '&keys[]=pcrPowerKwhConsumptionPercentage' +\r\n            '&keys[]=pcrGeneratingCapacityOneSolorPanel';\r\n        PortalSettingsAPI.fetchPortalSettings(keys)\r\n            .then(payload => {\r\n                setPortalSettings({ ...payload.data });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ isLoading: false, hasError: true });\r\n            });\r\n\r\n        // Call Api if current selected contact id is filled\r\n        if (props.currentSelectedContact.id) {\r\n            // If there is no previous selected contact OR previous selected contact is not the same as current selected contact\r\n            if (!prevCurrentSelectedContact || prevCurrentSelectedContact.id != props.currentSelectedContact.id) {\r\n                callFetchContact();\r\n            }\r\n        }\r\n    }, [props.currentSelectedContact]);\r\n\r\n    function callFetchContact() {\r\n        setLoading(true);\r\n        ContactAPI.fetchContact(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                const contactData = rebaseContact(payload.data.data);\r\n\r\n                setContact(contactData);\r\n                props.updateNameSelectedContact(\r\n                    contactData.fullNameFnf,\r\n                    contactData.typeId,\r\n                    contactData.firstName,\r\n                    contactData.lastNamePrefix,\r\n                    contactData.lastName\r\n                );\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function usePrevious(value) {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    function handleSubmitContactValues(values, actions, switchToView) {\r\n        const updatedContact = { ...contact, ...values, projectId: null };\r\n        ContactAPI.updateContact(updatedContact)\r\n            .then(payload => {\r\n                callFetchContact();\r\n                actions.setSubmitting(false);\r\n                switchToView();\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                actions.setStatus({\r\n                    message: error.response.data.message,\r\n                });\r\n                // alert('Er is iets misgegaan met opslaan! Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    const editButtonGroup = (\r\n        <ButtonGroup aria-label=\"contact-details\" className={'float-right'}>\r\n            <Button\r\n                className={'w-button'}\r\n                size=\"sm\"\r\n                onClick={function() {\r\n                    setEditForm(true);\r\n                }}\r\n            >\r\n                Wijzig\r\n            </Button>\r\n        </ButtonGroup>\r\n    );\r\n\r\n    return (\r\n        <div className=\"content-section\">\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <div className=\"content-container w-container\">\r\n                    {editForm ? (\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"content-heading mt-0\">Contactgegevens</h1>\r\n                            </Col>\r\n                        </Row>\r\n                    ) : (\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 className=\"content-heading mt-0\">Contactgegevens</h1>\r\n                            </Col>\r\n                            <Col>{editButtonGroup}</Col>\r\n                        </Row>\r\n                    )}\r\n                    <div className=\"w-form\" />\r\n                    {/* If contact is person */}\r\n                    {contact.typeId === 'person' ? (\r\n                        <ContactDetailsPersonal\r\n                            portalSettings={portalSettings}\r\n                            initialContact={contact}\r\n                            handleSubmitContactValues={handleSubmitContactValues}\r\n                            editButtonGroup={editButtonGroup}\r\n                            editForm={editForm}\r\n                            setEditForm={setEditForm}\r\n                        />\r\n                    ) : null}\r\n                    {/* If contact is organisation */}\r\n                    {contact.typeId === 'organisation' ? (\r\n                        <ContactDetailsOrganisation\r\n                            portalSettings={portalSettings}\r\n                            initialContact={contact}\r\n                            handleSubmitContactValues={handleSubmitContactValues}\r\n                            editButtonGroup={editButtonGroup}\r\n                            editForm={editForm}\r\n                            setEditForm={setEditForm}\r\n                        />\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function ContactDetailsWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact, updateNameSelectedContact }) => (\r\n                <ContactDetails\r\n                    {...props}\r\n                    currentSelectedContact={currentSelectedContact}\r\n                    updateNameSelectedContact={updateNameSelectedContact}\r\n                />\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Field, FieldArray, Form, Formik } from 'formik';\r\nimport ButtonText from '../../components/button/ButtonText';\r\n\r\nconst MyAreasOfInterestForm = function({ handleSubmit, initialValues }) {\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            enableReinitialize={true}\r\n            onSubmit={(values, actions) => {\r\n                actions.setSubmitting(true);\r\n                console.log(values);\r\n            }}\r\n            render={({ errors, touched, setFieldValue, isSubmitting, values }) => {\r\n                return (\r\n                    <Form id=\"email-form\" name=\"email-form\">\r\n                        <div className=\"w-row\">\r\n                            <div className=\"w-col w-col-6\">\r\n                                <h6 className=\"heading-content\">Mijn interessegebieden</h6>\r\n                                <FieldArray\r\n                                    name=\"myAreasOfInterest\"\r\n                                    render={arrayHelpers => (\r\n                                        <div>\r\n                                            {values.myAreasOfInterest &&\r\n                                                values.myAreasOfInterest.map((myAreaOfInterest, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Field\r\n                                                            name={`myAreasOfInterest[${index}]['value']`}\r\n                                                            render={({ field }) => (\r\n                                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        {...field}\r\n                                                                        id={myAreaOfInterest.name}\r\n                                                                        checked={myAreaOfInterest.value}\r\n                                                                        className=\"w-checkbox-input checkbox\"\r\n                                                                    />\r\n                                                                    <span\r\n                                                                        htmlFor={myAreaOfInterest.name}\r\n                                                                        className=\"checkbox-label w-form-label\"\r\n                                                                    >\r\n                                                                        {myAreaOfInterest.name}\r\n                                                                    </span>\r\n                                                                </label>\r\n                                                            )}\r\n                                                        />\r\n                                                    </div>\r\n                                                ))}\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n\r\n                                <h6 className=\"heading-content\">Deelname</h6>\r\n                                <FieldArray\r\n                                    name=\"participations\"\r\n                                    render={arrayHelpers => (\r\n                                        <div>\r\n                                            {values.participations &&\r\n                                                values.participations.map((participation, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Field\r\n                                                            name={`participations[${index}]['value']`}\r\n                                                            render={({ field }) => (\r\n                                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        {...field}\r\n                                                                        id={participation.name}\r\n                                                                        checked={participation.value}\r\n                                                                        className=\"w-checkbox-input checkbox\"\r\n                                                                    />\r\n                                                                    <span\r\n                                                                        htmlFor={participation.name}\r\n                                                                        className=\"checkbox-label w-form-label\"\r\n                                                                    >\r\n                                                                        {participation.name}\r\n                                                                    </span>\r\n                                                                </label>\r\n                                                            )}\r\n                                                        />\r\n                                                    </div>\r\n                                                ))}\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n\r\n                                <h6 className=\"heading-content\">Algemeen</h6>\r\n                                <FieldArray\r\n                                    name=\"generalOptions\"\r\n                                    render={arrayHelpers => (\r\n                                        <div>\r\n                                            {values.generalOptions &&\r\n                                                values.generalOptions.map((generalOption, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Field\r\n                                                            name={`generalOptions[${index}]['value']`}\r\n                                                            render={({ field }) => (\r\n                                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        {...field}\r\n                                                                        id={generalOption.name}\r\n                                                                        checked={generalOption.value}\r\n                                                                        className=\"w-checkbox-input checkbox\"\r\n                                                                    />\r\n                                                                    <span\r\n                                                                        htmlFor={generalOption.name}\r\n                                                                        className=\"checkbox-label w-form-label\"\r\n                                                                    >\r\n                                                                        {generalOption.name}\r\n                                                                    </span>\r\n                                                                </label>\r\n                                                            )}\r\n                                                        />\r\n                                                    </div>\r\n                                                ))}\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"w-row\">\r\n                            <div className=\"w-col w-col-6\">\r\n                                <ButtonText\r\n                                    buttonText={'Opslaan'}\r\n                                    buttonClassName={'save-btn w-button'}\r\n                                    type={'submit'}\r\n                                    loading={isSubmitting}\r\n                                />\r\n                            </div>\r\n                            <div className=\"w-col w-col-6\" />\r\n                        </div>\r\n                    </Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MyAreasOfInterestForm;\r\n","import React from 'react';\r\nimport MyAreasOfInterestForm from './Form';\r\n\r\nconst MyAreasOfInterest = function() {\r\n    // TODO Fetch values from API\r\n    const initialValues = {\r\n        myAreasOfInterest: [\r\n            { id: 4, name: 'Gevel isolatie', value: true },\r\n            { id: 5, name: 'Zonnepanelen', value: false },\r\n            { id: 6, name: 'Dak isolatie', value: false },\r\n            { id: 7, name: 'Zonneboiler', value: true },\r\n        ],\r\n        participations: [{ id: 2, name: 'Test groep', value: true }, { id: 3, name: 'De leuke mensen', value: false }],\r\n        generalOptions: [{ id: 1, name: 'Test algemeen groep', value: false }],\r\n    };\r\n\r\n    return (\r\n        <div className=\"content-section\">\r\n            <div className=\"content-container w-container\">\r\n                <h1 className=\"content-heading\">Instellingen</h1>\r\n                <div className=\"w-form\" />\r\n                <MyAreasOfInterestForm initialValues={initialValues} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyAreasOfInterest;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n    fetchProjects: function() {\r\n        const requestUrl = `/jory/project`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: ['id', 'name', 'dateStartRegistrations', 'dateEndRegistrations'],\r\n                    flt: {\r\n                        and: [\r\n                            { f: 'dateStartRegistrations', o: '<=', d: moment().format('YYYY-MM-DD') },\r\n                            { f: 'dateEndRegistrations', o: '>=', d: moment().format('YYYY-MM-DD') },\r\n                        ],\r\n                    },\r\n                    rlt: {\r\n                        administration: { fld: ['id', 'name'] },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    fetchProject: function(id) {\r\n        const requestUrl = `/jory/project/${id}`;\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'name',\r\n                        'description',\r\n                        'dateStartRegistrations',\r\n                        'dateEndRegistrations',\r\n                        'dateEndRegistrations',\r\n                        'minParticipations',\r\n                        'maxParticipations',\r\n                        'totalParticipations',\r\n                        'participationWorth',\r\n                        'currentBookWorth',\r\n                        'amountOfLoanNeeded',\r\n                        'minAmountLoan',\r\n                        'maxAmountLoan',\r\n                        'isSceProject',\r\n                        'checkPostalcodeLink',\r\n                        'postalcodeLink',\r\n                        'linkAgreeTerms',\r\n                        'linkProjectInfo',\r\n                        'linkUnderstandInfo',\r\n                        'showQuestionAboutMembership',\r\n                        'useTransactionCostsWithMembership',\r\n                        'usesMollie',\r\n                        'textTransactionCosts',\r\n                        'transactionCostsCodeRef',\r\n                        'transactionCostsAmountMin',\r\n                        'transactionCostsAmountMax',\r\n                        'transactionCostsAmount',\r\n                        'transactionCostsPercentage',\r\n                        'transactionCostsAmount2',\r\n                        'transactionCostsPercentage2',\r\n                        'transactionCostsAmount3',\r\n                        'transactionCostsPercentage3',\r\n                    ],\r\n                    flt: {\r\n                        and: [\r\n                            { f: 'dateStartRegistrations', o: '<=', d: moment().format('YYYY-MM-DD') },\r\n                            { f: 'dateEndRegistrations', o: '>=', d: moment().format('YYYY-MM-DD') },\r\n                        ],\r\n                    },\r\n                    rlt: {\r\n                        projectType: { fld: ['id', 'codeRef'] },\r\n                        administration: { fld: ['id', 'name', 'portalSettingsLayoutAssigned'] },\r\n                        documentAgreeTerms: { fld: ['id', 'filename'] },\r\n                        documentUnderstandInfo: { fld: ['id', 'filename'] },\r\n                        documentProjectInfo: { fld: ['id', 'filename'] },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    documentDownload: function(projectId, id) {\r\n        const requestUrl = `/project/${projectId}/document/${id}/download`;\r\n\r\n        return axiosInstance.get(requestUrl, { responseType: 'blob' });\r\n    },\r\n};\r\n","export default amount => {\r\n    if (!amount) amount = 0;\r\n    // if (isNaN(amount)) {\r\n    //     amount = amount.replace(',', '.');\r\n    // }\r\n    amount = parseFloat(amount * 100) / 100;\r\n\r\n    if (isNaN(amount)) return 'Ongeldig bedrag';\r\n\r\n    return `€ ${amount.toLocaleString('nl', {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n    })}`;\r\n};\r\n","export default function(project, amountOptioned, participationsOptioned) {\r\n    let transactionCosts = 0;\r\n    let varAmountOptioned = amountOptioned ? parseFloat(amountOptioned.toString().replace(',', '.')) : 0;\r\n    let varParticipationsOptioned = participationsOptioned ? parseFloat(participationsOptioned).toFixed(0) : 0;\r\n    switch (project.transactionCostsCodeRef) {\r\n        case 'amount-once':\r\n            transactionCosts = project.transactionCostsAmount;\r\n            break;\r\n        case 'amount':\r\n            if (project.projectType.codeRef === 'loan') {\r\n                transactionCosts = project.transactionCostsAmount;\r\n            } else {\r\n                transactionCosts = project.transactionCostsAmount * varParticipationsOptioned;\r\n            }\r\n            break;\r\n        case 'percentage':\r\n            let amount = 0;\r\n            if (project.projectType.codeRef === 'loan') {\r\n                amount = varAmountOptioned;\r\n            } else {\r\n                amount = varParticipationsOptioned * project.currentBookWorth;\r\n            }\r\n            if (amount != 0) {\r\n                if (project.transactionCostsAmount3 !== null && amount >= project.transactionCostsAmount3) {\r\n                    transactionCosts = parseFloat(((amount * project.transactionCostsPercentage3) / 100).toFixed(2));\r\n                } else if (project.transactionCostsAmount2 !== null && amount >= project.transactionCostsAmount2) {\r\n                    transactionCosts = parseFloat(((amount * project.transactionCostsPercentage2) / 100).toFixed(2));\r\n                } else if (project.transactionCostsAmount !== null && amount >= project.transactionCostsAmount) {\r\n                    transactionCosts = parseFloat(((amount * project.transactionCostsPercentage) / 100).toFixed(2));\r\n                } else {\r\n                    transactionCosts = 0;\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            transactionCosts = 0;\r\n    }\r\n    if (project.transactionCostsCodeRef !== 'none') {\r\n        if (project.transactionCostsAmountMin !== null && transactionCosts < project.transactionCostsAmountMin) {\r\n            transactionCosts = project.transactionCostsAmountMin;\r\n        }\r\n        if (project.transactionCostsAmountMax !== null && transactionCosts > project.transactionCostsAmountMax) {\r\n            transactionCosts = project.transactionCostsAmountMax;\r\n        }\r\n    }\r\n\r\n    return transactionCosts;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get } from 'lodash';\r\n\r\nconst InputTextCurrency = ({\r\n    field,\r\n    type,\r\n    className,\r\n    id,\r\n    readOnly,\r\n    placeholder,\r\n    showErrorMessage,\r\n    errors,\r\n    touched,\r\n    classNameErrorMessage,\r\n    disabled,\r\n    customOnChange = null,\r\n}) => {\r\n    if (customOnChange) {\r\n        field.onChange = customOnChange;\r\n    }\r\n    return (\r\n        <>\r\n            {get(errors, field.name, '') && get(touched, field.name, '') && showErrorMessage ? (\r\n                <small className={`${classNameErrorMessage}`}>{get(errors, field.name, '')}</small>\r\n            ) : null}\r\n            <input\r\n                type={type}\r\n                className={`text-input w-input ${className} ${\r\n                    Boolean(get(errors, field.name, '') && get(touched, field.name, '')) ? 'has-error mb-0' : ''\r\n                } `}\r\n                id={id}\r\n                {...field}\r\n                value={field.value.toString().replace('.', ',')}\r\n                readOnly={readOnly}\r\n                placeholder={placeholder}\r\n                disabled={disabled}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nInputTextCurrency.defaultProps = {\r\n    type: 'text',\r\n    className: 'content',\r\n    readOnly: false,\r\n    placeholder: '',\r\n    showErrorMessage: true,\r\n    classNameErrorMessage: 'text-danger',\r\n    errors: {},\r\n    touched: {},\r\n};\r\n\r\nInputTextCurrency.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    type: PropTypes.string,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    readOnly: PropTypes.bool,\r\n    showErrorMessage: PropTypes.bool,\r\n    classNameErrorMessage: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    errors: PropTypes.object,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default InputTextCurrency;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { get, isEmpty } from 'lodash';\r\nimport calculateTransactionCosts from '../../../helpers/CalculateTransactionCosts';\r\nimport InputTextCurrency from '../../../components/form/InputTextCurrency';\r\n\r\nfunction StepOneLoan({ next, project, contactProjectData, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        amountOptioned: Yup.string()\r\n            .required('Verplicht')\r\n            .transform(function(value, originalvalue) {\r\n                return value ? value.replace(',', '.') : 0;\r\n            })\r\n            .test(\r\n                'amountOptioned',\r\n                'Minimum van ' + project.minAmountLoan + ' nodig',\r\n                value => value >= project.minAmountLoan\r\n            )\r\n            .test(\r\n                'amountOptioned',\r\n                'Maximum van ' + project.maxAmountLoan + ' bereikt',\r\n                value => value <= project.maxAmountLoan\r\n            )\r\n            .matches(/^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$/, 'Fout bedrag'),\r\n        choiceMembership: Yup.number().test(\r\n            'choiceMembership',\r\n            'Verplicht',\r\n            value => !project.showQuestionAboutMembership || contactProjectData.belongsToMembershipGroup || value != 0\r\n        ),\r\n    });\r\n\r\n    function setAmountOptioned(amountOptioned) {\r\n        return amountOptioned ? amountOptioned.toString().replace(',', '.') : '';\r\n    }\r\n    function calculateAmount(amountOptioned) {\r\n        return amountOptioned ? parseFloat(amountOptioned.toString().replace(',', '.')) : 0;\r\n    }\r\n    function calculateTransactionCostsAmount(amountOptioned, choiceMembership) {\r\n        if (!project.useTransactionCostsWithMembership) {\r\n            if (project.showQuestionAboutMembership && contactProjectData.belongsToMembershipGroup) {\r\n                return 0;\r\n            }\r\n            if (project.showQuestionAboutMembership && choiceMembership === 1) {\r\n                return 0;\r\n            }\r\n        }\r\n        return calculateTransactionCosts(project, amountOptioned, null);\r\n    }\r\n    function calculateTotalAmount(amountOptioned, choiceMembership) {\r\n        return (\r\n            calculateAmount(amountOptioned) + calculateTransactionCostsAmount(amountOptioned, choiceMembership)\r\n        ).toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues({\r\n                    ...values,\r\n                    amountOptioned: setAmountOptioned(values.amountOptioned),\r\n                    amount: calculateAmount(values.amountOptioned),\r\n                    transactionCostsAmount: calculateTransactionCostsAmount(\r\n                        values.amountOptioned,\r\n                        values.choiceMembership\r\n                    ),\r\n                    totalAmount: calculateTotalAmount(values.amountOptioned, values.choiceMembership),\r\n                });\r\n                next();\r\n            }}\r\n            initialValues={initialRegisterValues}\r\n            enableReinitialize={true}\r\n        >\r\n            {({ handleSubmit, values, touched, errors, setFieldValue }) => (\r\n                <>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Minimaal bedrag</FormLabel>\r\n                                <TextBlock>{project.minAmountLoan}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Maximaal bedrag</FormLabel>\r\n                                <TextBlock>{project.maxAmountLoan}</TextBlock>\r\n                            </Col>\r\n\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Label className={'field-label'}>In te leggen bedrag</Form.Label>\r\n                                <Field\r\n                                    name=\"amountOptioned\"\r\n                                    render={({ field }) => (\r\n                                        <InputTextCurrency\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"amount_optioned\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>\r\n                                    {project.transactionCostsCodeRef === 'none' ? 'Te betalen bedrag' : 'Bedrag'}\r\n                                </FormLabel>\r\n                                <TextBlock>{MoneyPresenter(calculateAmount(values.amountOptioned))}</TextBlock>\r\n                            </Col>\r\n                        </Row>\r\n                        {project.showQuestionAboutMembership ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <p>\r\n                                            {contactProjectData.belongsToMembershipGroup\r\n                                                ? contactProjectData.textIsMemberMerged\r\n                                                : contactProjectData.textIsNoMemberMerged}\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!contactProjectData.belongsToMembershipGroup ? (\r\n                                    <Row>\r\n                                        <Col xs={12} md={10}>\r\n                                            <Field\r\n                                                name=\"choiceMembership\"\r\n                                                render={({ field }) => (\r\n                                                    <>\r\n                                                        {get(errors, field.name, '') &&\r\n                                                            get(touched, field.name, '') && (\r\n                                                                <small className=\"text-danger\">\r\n                                                                    {get(errors, field.name, '')}\r\n                                                                </small>\r\n                                                            )}\r\n                                                        <div className=\"form-check\">\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_yes\"\r\n                                                                    checked={field.value === 1}\r\n                                                                    value={1}\r\n                                                                    onChange={() =>\r\n                                                                        setFieldValue('choiceMembership', 1)\r\n                                                                    }\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeMemberMerged}\r\n                                                            </label>\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_no\"\r\n                                                                    checked={field.value === 2}\r\n                                                                    value={2}\r\n                                                                    onChange={() => {\r\n                                                                        setFieldValue('choiceMembership', 2);\r\n                                                                    }}\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeNoMemberMerged}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </>\r\n                        ) : null}\r\n\r\n                        {project.transactionCostsCodeRef !== 'none' ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>{project.textTransactionCosts}</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTransactionCostsAmount(\r\n                                                    values.amountOptioned,\r\n                                                    values.choiceMembership\r\n                                                )\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>Totaal te betalen</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTotalAmount(values.amountOptioned, values.choiceMembership)\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : null}\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                    <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                        Ga naar gegevens\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        {!isEmpty(errors) ? (\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            Niet alle verplichte velden zijn ingevuld om verder te gaan naar de volgende\r\n                                            stap!\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : null}\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOneLoan;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { get, isEmpty } from 'lodash';\r\nimport calculateTransactionCosts from '../../../helpers/CalculateTransactionCosts';\r\n\r\nfunction StepOneObligation({ next, project, contactProjectData, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        participationsOptioned: Yup.number()\r\n            .integer('Alleen gehele aantallen')\r\n            .typeError('Alleen nummers')\r\n            .test(\r\n                'participationsOptioned',\r\n                'Minimum van ' + project.minParticipations + ' nodig',\r\n                value => value >= project.minParticipations\r\n            )\r\n            .max(project.maxParticipations, 'Maximum van ${max} bereikt')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n        choiceMembership: Yup.number().test(\r\n            'choiceMembership',\r\n            'Verplicht',\r\n            value => !project.showQuestionAboutMembership || contactProjectData.belongsToMembershipGroup || value != 0\r\n        ),\r\n    });\r\n\r\n    function calculateAmount(participationsOptioned) {\r\n        return participationsOptioned ? participationsOptioned * project.currentBookWorth : 0;\r\n    }\r\n    function calculateTransactionCostsAmount(participationsOptioned, choiceMembership) {\r\n        if (!project.useTransactionCostsWithMembership) {\r\n            if (project.showQuestionAboutMembership && contactProjectData.belongsToMembershipGroup) {\r\n                return 0;\r\n            }\r\n            if (project.showQuestionAboutMembership && choiceMembership === 1) {\r\n                return 0;\r\n            }\r\n        }\r\n        return calculateTransactionCosts(project, null, participationsOptioned);\r\n    }\r\n    function calculateTotalAmount(participationsOptioned, choiceMembership) {\r\n        return (\r\n            calculateAmount(participationsOptioned) +\r\n            calculateTransactionCostsAmount(participationsOptioned, choiceMembership)\r\n        ).toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues({\r\n                    ...values,\r\n                    amount: calculateAmount(values.participationsOptioned),\r\n                    transactionCostsAmount: calculateTransactionCostsAmount(\r\n                        values.participationsOptioned,\r\n                        values.choiceMembership\r\n                    ),\r\n                    totalAmount: calculateTotalAmount(values.participationsOptioned, values.choiceMembership),\r\n                });\r\n                next();\r\n            }}\r\n            initialValues={initialRegisterValues}\r\n            enableReinitialize={true}\r\n        >\r\n            {({ handleSubmit, values, touched, errors, setFieldValue }) => (\r\n                <>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Minimale aantal obligaties</FormLabel>\r\n                                <TextBlock>{project.minParticipations}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Maximale aantal obligaties</FormLabel>\r\n                                <TextBlock>{project.maxParticipations}</TextBlock>\r\n                            </Col>\r\n\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Huidige hoofdsom per obligatie</FormLabel>\r\n                                <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Label className={'field-label'}>Gewenst aantal obligaties</Form.Label>\r\n                                <Field\r\n                                    name=\"participationsOptioned\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"participations_optioned\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>\r\n                                    {project.transactionCostsCodeRef === 'none' ? 'Te betalen bedrag' : 'Bedrag'}\r\n                                </FormLabel>\r\n                                <TextBlock>{MoneyPresenter(calculateAmount(values.participationsOptioned))}</TextBlock>\r\n                            </Col>\r\n                        </Row>\r\n                        {project.showQuestionAboutMembership ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <p>\r\n                                            {contactProjectData.belongsToMembershipGroup\r\n                                                ? contactProjectData.textIsMemberMerged\r\n                                                : contactProjectData.textIsNoMemberMerged}\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!contactProjectData.belongsToMembershipGroup ? (\r\n                                    <Row>\r\n                                        <Col xs={12} md={10}>\r\n                                            <Field\r\n                                                name=\"choiceMembership\"\r\n                                                render={({ field }) => (\r\n                                                    <>\r\n                                                        {get(errors, field.name, '') &&\r\n                                                            get(touched, field.name, '') && (\r\n                                                                <small className=\"text-danger\">\r\n                                                                    {get(errors, field.name, '')}\r\n                                                                </small>\r\n                                                            )}\r\n                                                        <div className=\"form-check\">\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_yes\"\r\n                                                                    checked={field.value === 1}\r\n                                                                    value={1}\r\n                                                                    onChange={() =>\r\n                                                                        setFieldValue('choiceMembership', 1)\r\n                                                                    }\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeMemberMerged}\r\n                                                            </label>\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_no\"\r\n                                                                    checked={field.value === 2}\r\n                                                                    value={2}\r\n                                                                    onChange={() => {\r\n                                                                        setFieldValue('choiceMembership', 2);\r\n                                                                    }}\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeNoMemberMerged}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </>\r\n                        ) : null}\r\n\r\n                        {project.transactionCostsCodeRef !== 'none' ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>{project.textTransactionCosts}</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTransactionCostsAmount(\r\n                                                    values.participationsOptioned,\r\n                                                    values.choiceMembership\r\n                                                )\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>Totaal te betalen</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTotalAmount(\r\n                                                    values.participationsOptioned,\r\n                                                    values.choiceMembership\r\n                                                )\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : null}\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                    <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                        Ga naar gegevens\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        {!isEmpty(errors) ? (\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            Niet alle verplichte velden zijn ingevuld om verder te gaan naar de volgende\r\n                                            stap!\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : null}\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOneObligation;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { get, isEmpty } from 'lodash';\r\nimport calculateTransactionCosts from '../../../helpers/CalculateTransactionCosts';\r\n\r\nfunction StepOneCapital({ next, project, contactProjectData, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        participationsOptioned: Yup.number()\r\n            .integer('Alleen gehele aantallen')\r\n            .typeError('Alleen nummers')\r\n            .test(\r\n                'participationsOptioned',\r\n                'Minimum van ' + project.minParticipations + ' nodig',\r\n                value => value >= project.minParticipations\r\n            )\r\n            .max(project.maxParticipations, 'Maximum van ${max} bereikt')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n        choiceMembership: Yup.number().test(\r\n            'choiceMembership',\r\n            'Verplicht',\r\n            value => !project.showQuestionAboutMembership || contactProjectData.belongsToMembershipGroup || value != 0\r\n        ),\r\n    });\r\n\r\n    function calculateAmount(participationsOptioned) {\r\n        return participationsOptioned ? participationsOptioned * project.currentBookWorth : 0;\r\n    }\r\n    function calculateTransactionCostsAmount(participationsOptioned, choiceMembership) {\r\n        if (!project.useTransactionCostsWithMembership) {\r\n            if (project.showQuestionAboutMembership && contactProjectData.belongsToMembershipGroup) {\r\n                return 0;\r\n            }\r\n            if (project.showQuestionAboutMembership && choiceMembership === 1) {\r\n                return 0;\r\n            }\r\n        }\r\n        return calculateTransactionCosts(project, null, participationsOptioned);\r\n    }\r\n    function calculateTotalAmount(participationsOptioned, choiceMembership) {\r\n        return (\r\n            calculateAmount(participationsOptioned) +\r\n            calculateTransactionCostsAmount(participationsOptioned, choiceMembership)\r\n        ).toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues({\r\n                    ...values,\r\n                    amount: calculateAmount(values.participationsOptioned),\r\n                    transactionCostsAmount: calculateTransactionCostsAmount(\r\n                        values.participationsOptioned,\r\n                        values.choiceMembership\r\n                    ),\r\n                    totalAmount: calculateTotalAmount(values.participationsOptioned, values.choiceMembership),\r\n                });\r\n                next();\r\n            }}\r\n            initialValues={initialRegisterValues}\r\n            enableReinitialize={true}\r\n        >\r\n            {({ handleSubmit, values, touched, errors, setFieldValue }) => (\r\n                <>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Minimale aantal participaties</FormLabel>\r\n                                <TextBlock>{project.minParticipations}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Maximale aantal participaties</FormLabel>\r\n                                <TextBlock>{project.maxParticipations}</TextBlock>\r\n                            </Col>\r\n\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Huidige boekwaarde per participatie</FormLabel>\r\n                                <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Label className={'field-label'}>Gewenst aantal participaties</Form.Label>\r\n                                <Field\r\n                                    name=\"participationsOptioned\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"participations_optioned\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>\r\n                                    {project.transactionCostsCodeRef === 'none' ? 'Te betalen bedrag' : 'Bedrag'}\r\n                                </FormLabel>\r\n                                <TextBlock>{MoneyPresenter(calculateAmount(values.participationsOptioned))}</TextBlock>\r\n                            </Col>\r\n                        </Row>\r\n                        {project.showQuestionAboutMembership ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <p>\r\n                                            {contactProjectData.belongsToMembershipGroup\r\n                                                ? contactProjectData.textIsMemberMerged\r\n                                                : contactProjectData.textIsNoMemberMerged}\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!contactProjectData.belongsToMembershipGroup ? (\r\n                                    <Row>\r\n                                        <Col xs={12} md={10}>\r\n                                            <Field\r\n                                                name=\"choiceMembership\"\r\n                                                render={({ field }) => (\r\n                                                    <>\r\n                                                        {get(errors, field.name, '') &&\r\n                                                            get(touched, field.name, '') && (\r\n                                                                <small className=\"text-danger\">\r\n                                                                    {get(errors, field.name, '')}\r\n                                                                </small>\r\n                                                            )}\r\n                                                        <div className=\"form-check\">\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_yes\"\r\n                                                                    checked={field.value === 1}\r\n                                                                    value={1}\r\n                                                                    onChange={() =>\r\n                                                                        setFieldValue('choiceMembership', 1)\r\n                                                                    }\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeMemberMerged}\r\n                                                            </label>\r\n                                                            <label className=\"radio-inline\">\r\n                                                                <input\r\n                                                                    type=\"radio\"\r\n                                                                    {...field}\r\n                                                                    id=\"choice_membership_no\"\r\n                                                                    checked={field.value === 2}\r\n                                                                    value={2}\r\n                                                                    onChange={() => {\r\n                                                                        setFieldValue('choiceMembership', 2);\r\n                                                                    }}\r\n                                                                />\r\n                                                                &nbsp;{contactProjectData.textBecomeNoMemberMerged}\r\n                                                            </label>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </>\r\n                        ) : null}\r\n\r\n                        {project.transactionCostsCodeRef !== 'none' ? (\r\n                            <>\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>{project.textTransactionCosts}</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTransactionCostsAmount(\r\n                                                    values.participationsOptioned,\r\n                                                    values.choiceMembership\r\n                                                )\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                    <Col xs={12} md={6}>\r\n                                        <FormLabel className={'field-label'}>Totaal te betalen</FormLabel>\r\n                                        <TextBlock>\r\n                                            {MoneyPresenter(\r\n                                                calculateTotalAmount(\r\n                                                    values.participationsOptioned,\r\n                                                    values.choiceMembership\r\n                                                )\r\n                                            )}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        ) : null}\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                    <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                        Ga naar gegevens\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        {!isEmpty(errors) ? (\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            Niet alle verplichte velden zijn ingevuld om verder te gaan naar de volgende\r\n                                            stap!\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        ) : null}\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOneCapital;\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { get, isEmpty } from 'lodash';\r\nimport calculateTransactionCosts from '../../../helpers/CalculateTransactionCosts';\r\n\r\nfunction StepOnePcr({\r\n    portalSettings,\r\n    next,\r\n    project,\r\n    contactProjectData,\r\n    initialContact,\r\n    initialRegisterValues,\r\n    handleSubmitRegisterValues,\r\n}) {\r\n    const validationSchema = Yup.object({\r\n        participationsOptioned: Yup.number()\r\n            .integer('Alleen gehele aantallen')\r\n            .typeError('Alleen nummers')\r\n            .test(\r\n                'participationsOptioned',\r\n                'Minimum van ' + project.minParticipations + ' nodig',\r\n                value => value >= project.minParticipations\r\n            )\r\n            .max(project.maxParticipations, 'Maximum van ${max} bereikt')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n        pcrYearlyPowerKwhConsumption: Yup.number()\r\n            .typeError('Alleen nummers')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n        pcrPostalCode: Yup.string()\r\n            .min(4, 'Minimum van ${min} postcode cijfers nodig')\r\n            .required('Verplicht')\r\n            .test(\r\n                'pcrPostalCode',\r\n                'Helaas je postcode ligt niet binnen het gebied van potentiele deelnemers',\r\n                value =>\r\n                    value &&\r\n                    (!project.checkPostalcodeLink ||\r\n                        (project.postalcodeLink && project.postalcodeLink.includes(value.substring(0, 4))))\r\n            ),\r\n        pcrNumberOfSolarPanels: Yup.number().typeError('Alleen nummers'),\r\n        pcrInputGeneratedNumberOfKwh: Yup.number().typeError('Alleen nummers'),\r\n        choiceMembership: Yup.number().test(\r\n            'choiceMembership',\r\n            'Verplicht',\r\n            value => !project.showQuestionAboutMembership || contactProjectData.belongsToMembershipGroup || value != 0\r\n        ),\r\n    });\r\n\r\n    // const PCR_POWER_KWH_CONSUMPTION_PERCENTAGE = 0.8;\r\n    const PCR_POWER_KWH_CONSUMPTION_PERCENTAGE = portalSettings['pcrPowerKwhConsumptionPercentage'];\r\n    // const PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL = 250;\r\n    const PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL = portalSettings['pcrGeneratingCapacityOneSolorPanel'];\r\n\r\n    function calculateEstimatedGeneratedNumberOfKwh(values) {\r\n        return values.pcrNumberOfSolarPanels\r\n            ? values.pcrNumberOfSolarPanels * PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL\r\n            : 0;\r\n    }\r\n    function calculateGeneratedNumberOfKwh(values) {\r\n        return values.pcrInputGeneratedNumberOfKwh && values.pcrInputGeneratedNumberOfKwh > 0\r\n            ? values.pcrInputGeneratedNumberOfKwh\r\n            : calculateEstimatedGeneratedNumberOfKwh(values)\r\n            ? calculateEstimatedGeneratedNumberOfKwh(values)\r\n            : 0;\r\n    }\r\n    function calculatePowerKwhConsumption(values) {\r\n        let extraPowerKwhConsumption =\r\n            values.pcrYearlyPowerKwhConsumption - calculateGeneratedNumberOfKwh(values) > 0\r\n                ? values.pcrYearlyPowerKwhConsumption - calculateGeneratedNumberOfKwh(values)\r\n                : 0;\r\n        return extraPowerKwhConsumption;\r\n    }\r\n    function calculateAdviseMaxNumberOfParticipations(values) {\r\n        let pcrAdviseMaxNumberOfParticipations =\r\n            calculatePowerKwhConsumption(values) > 0\r\n                ? Math.ceil(\r\n                      (calculatePowerKwhConsumption(values) * PCR_POWER_KWH_CONSUMPTION_PERCENTAGE) /\r\n                          PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL\r\n                  )\r\n                : 0;\r\n\r\n        if (pcrAdviseMaxNumberOfParticipations < project.minParticipations) {\r\n            pcrAdviseMaxNumberOfParticipations = project.minParticipations;\r\n        } else if (pcrAdviseMaxNumberOfParticipations > project.maxParticipations) {\r\n            pcrAdviseMaxNumberOfParticipations = project.maxParticipations;\r\n        }\r\n        return pcrAdviseMaxNumberOfParticipations;\r\n    }\r\n\r\n    function calculateAmount(participationsOptioned) {\r\n        return participationsOptioned ? participationsOptioned * project.currentBookWorth : 0;\r\n    }\r\n    function calculateTransactionCostsAmount(participationsOptioned, choiceMembership) {\r\n        if (!project.useTransactionCostsWithMembership) {\r\n            if (project.showQuestionAboutMembership && contactProjectData.belongsToMembershipGroup) {\r\n                return 0;\r\n            }\r\n            if (project.showQuestionAboutMembership && choiceMembership === 1) {\r\n                return 0;\r\n            }\r\n        }\r\n        return calculateTransactionCosts(project, null, participationsOptioned);\r\n    }\r\n    function calculateTotalAmount(participationsOptioned, choiceMembership) {\r\n        return (\r\n            calculateAmount(participationsOptioned) +\r\n            calculateTransactionCostsAmount(participationsOptioned, choiceMembership)\r\n        ).toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues({\r\n                    ...values,\r\n                    powerKwhConsumption: calculatePowerKwhConsumption(values),\r\n                    amount: calculateAmount(values.participationsOptioned),\r\n                    transactionCostsAmount: calculateTransactionCostsAmount(\r\n                        values.participationsOptioned,\r\n                        values.choiceMembership\r\n                    ),\r\n                    totalAmount: calculateTotalAmount(values.participationsOptioned, values.choiceMembership),\r\n                });\r\n                next();\r\n            }}\r\n            initialValues={{\r\n                ...initialRegisterValues,\r\n            }}\r\n            enableReinitialize={true}\r\n        >\r\n            {({ handleSubmit, values, touched, errors, setFieldValue }) => {\r\n                let pcrEstimatedGeneratedNumberOfKwh = calculateEstimatedGeneratedNumberOfKwh(values);\r\n                let powerKwhConsumption = Math.ceil(\r\n                    calculatePowerKwhConsumption(values) * PCR_POWER_KWH_CONSUMPTION_PERCENTAGE\r\n                );\r\n                let pcrAdviseMaxNumberOfParticipations = calculateAdviseMaxNumberOfParticipations(values);\r\n                return (\r\n                    <>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>Minimale aantal participaties</FormLabel>\r\n                                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>Maximale aantal participaties</FormLabel>\r\n                                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                                </Col>\r\n\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>Huidige boekwaarde per participatie</FormLabel>\r\n                                    <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label required'}>Je postcode</Form.Label>\r\n                                    <Field\r\n                                        name=\"pcrPostalCode\"\r\n                                        render={({ field }) => (\r\n                                            <InputText\r\n                                                field={field}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                id=\"pcr_postal_code\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label'}>Deelnemende postcodes</Form.Label>\r\n                                    <TextBlock>{project.postalcodeLink}</TextBlock>\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label required'}>\r\n                                        Je (geschatte) jaarlijks verbruik (in kWh)\r\n                                    </Form.Label>\r\n                                    <Field\r\n                                        name=\"pcrYearlyPowerKwhConsumption\"\r\n                                        render={({ field }) => (\r\n                                            <InputText\r\n                                                field={field}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                id=\"pcr_yearly_power_kwh_consumption\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Form.Label className={'field-label'}>\r\n                                        Heb je al zonnepanelen op je eigen dak of doe je mee in een ander project?\r\n                                    </Form.Label>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"pcrHasSolarPanels\"\r\n                                        render={({ field }) => (\r\n                                            <>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_has_solar_panels_yes\"\r\n                                                            checked={field.value === 'Y'}\r\n                                                            value={'Y'}\r\n                                                            onChange={() => setFieldValue('pcrHasSolarPanels', 'Y')}\r\n                                                        />\r\n                                                        &nbsp;Ja\r\n                                                    </label>\r\n                                                    &nbsp;&nbsp;\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_has_solar_panels_no\"\r\n                                                            checked={field.value === 'N'}\r\n                                                            value={'N'}\r\n                                                            onChange={() => {\r\n                                                                setFieldValue('pcrHasSolarPanels', 'N');\r\n                                                                setFieldValue('pcrNumberOfSolarPanels', 0);\r\n                                                            }}\r\n                                                        />\r\n                                                        &nbsp;Nee\r\n                                                    </label>\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {values.pcrHasSolarPanels === 'Y' ? (\r\n                                <Row>\r\n                                    <Col xs={12} md={6}>\r\n                                        <Form.Label className={'field-label'}>\r\n                                            Hoeveel zonnepanelen wekken al stroom voor je op\r\n                                        </Form.Label>\r\n                                        <Field\r\n                                            name=\"pcrNumberOfSolarPanels\"\r\n                                            render={({ field }) => (\r\n                                                <InputText\r\n                                                    field={field}\r\n                                                    errors={errors}\r\n                                                    touched={touched}\r\n                                                    id=\"pcr_number_of_solar_panels\"\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label'}>\r\n                                        Wij schatten in dat je panelen jaarlijks opwekken\r\n                                    </Form.Label>\r\n                                    <TextBlock id=\"pcr_input_estimated_generated_number_of_kwh\">\r\n                                        {pcrEstimatedGeneratedNumberOfKwh} kWh\r\n                                    </TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Form.Label className={'field-label'}>Klopt het geschatte opbrengst?</Form.Label>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"pcrEstimatedRevenueOk\"\r\n                                        render={({ field }) => (\r\n                                            <>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_estimated_revenue_ok_yes\"\r\n                                                            checked={field.value === 'Y'}\r\n                                                            value={'Y'}\r\n                                                            onChange={() => {\r\n                                                                setFieldValue('pcrEstimatedRevenueOk', 'Y');\r\n                                                                setFieldValue('pcrInputGeneratedNumberOfKwh', 0);\r\n                                                            }}\r\n                                                        />\r\n                                                        &nbsp;Ja\r\n                                                    </label>\r\n                                                    &nbsp;&nbsp;\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_estimated_revenue_ok_no\"\r\n                                                            checked={field.value === 'N'}\r\n                                                            value={'N'}\r\n                                                            onChange={() => setFieldValue('pcrEstimatedRevenueOk', 'N')}\r\n                                                        />\r\n                                                        &nbsp;Nee\r\n                                                    </label>\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {values.pcrEstimatedRevenueOk === 'N' ? (\r\n                                <>\r\n                                    <Row>\r\n                                        <Col xs={12} md={6}>\r\n                                            <Form.Label className={'field-label'}>\r\n                                                Wat is de jaarlijkse opbrengst van jouw panelen (in kWh)\r\n                                            </Form.Label>\r\n                                            <Field\r\n                                                name=\"pcrInputGeneratedNumberOfKwh\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"pcr_input_generated_number_of_kwh\"\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <p>\r\n                                        We adviseren tot {PCR_POWER_KWH_CONSUMPTION_PERCENTAGE * 100}% van je jaarlijks\r\n                                        verbruik minus de jaarlijkse opbrengsten (in jouw geval {powerKwhConsumption}{' '}\r\n                                        kWh) te dekken met participaties. In het veld hier direct onder is voor je\r\n                                        uitgerekend hoeveel participaties dat zijn. Het is een advies, je mag er ook\r\n                                        meer kopen. Dit kan echter slecht zijn voor je rendement.\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label'}>\r\n                                        Advies maximaal aantal participaties\r\n                                    </Form.Label>\r\n                                    <TextBlock>{pcrAdviseMaxNumberOfParticipations}</TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label required'}>\r\n                                        Gewenst aantal participaties\r\n                                    </Form.Label>\r\n                                    <Field\r\n                                        name=\"participationsOptioned\"\r\n                                        render={({ field }) => (\r\n                                            <InputText\r\n                                                field={field}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                id=\"participations_optioned\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>\r\n                                        {project.transactionCostsCodeRef === 'none' ? 'Te betalen bedrag' : 'Bedrag'}\r\n                                    </FormLabel>\r\n                                    <TextBlock>\r\n                                        {MoneyPresenter(calculateAmount(values.participationsOptioned))}\r\n                                    </TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n                            {project.showQuestionAboutMembership ? (\r\n                                <>\r\n                                    <hr />\r\n                                    <Row>\r\n                                        <Col xs={12} md={10}>\r\n                                            <p>\r\n                                                {contactProjectData.belongsToMembershipGroup\r\n                                                    ? contactProjectData.textIsMemberMerged\r\n                                                    : contactProjectData.textIsNoMemberMerged}\r\n                                            </p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {!contactProjectData.belongsToMembershipGroup ? (\r\n                                        <Row>\r\n                                            <Col xs={12} md={10}>\r\n                                                <Field\r\n                                                    name=\"choiceMembership\"\r\n                                                    render={({ field }) => (\r\n                                                        <>\r\n                                                            {get(errors, field.name, '') &&\r\n                                                                get(touched, field.name, '') && (\r\n                                                                    <small className=\"text-danger\">\r\n                                                                        {get(errors, field.name, '')}\r\n                                                                    </small>\r\n                                                                )}\r\n                                                            <div className=\"form-check\">\r\n                                                                <label className=\"radio-inline\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        {...field}\r\n                                                                        id=\"choice_membership_yes\"\r\n                                                                        checked={field.value === 1}\r\n                                                                        value={1}\r\n                                                                        onChange={() =>\r\n                                                                            setFieldValue('choiceMembership', 1)\r\n                                                                        }\r\n                                                                    />\r\n                                                                    &nbsp;{contactProjectData.textBecomeMemberMerged}\r\n                                                                </label>\r\n                                                                <label className=\"radio-inline\">\r\n                                                                    <input\r\n                                                                        type=\"radio\"\r\n                                                                        {...field}\r\n                                                                        id=\"choice_membership_no\"\r\n                                                                        checked={field.value === 2}\r\n                                                                        value={2}\r\n                                                                        onChange={() => {\r\n                                                                            setFieldValue('choiceMembership', 2);\r\n                                                                        }}\r\n                                                                    />\r\n                                                                    &nbsp;{contactProjectData.textBecomeNoMemberMerged}\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        </>\r\n                                                    )}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    ) : null}\r\n                                </>\r\n                            ) : null}\r\n\r\n                            {project.transactionCostsCodeRef !== 'none' ? (\r\n                                <>\r\n                                    <hr />\r\n                                    <Row>\r\n                                        <Col xs={12} md={6}>\r\n                                            <FormLabel className={'field-label'}>\r\n                                                {project.textTransactionCosts}\r\n                                            </FormLabel>\r\n                                            <TextBlock>\r\n                                                {MoneyPresenter(\r\n                                                    calculateTransactionCostsAmount(\r\n                                                        values.participationsOptioned,\r\n                                                        values.choiceMembership\r\n                                                    )\r\n                                                )}\r\n                                            </TextBlock>\r\n                                        </Col>\r\n                                        <Col xs={12} md={6}>\r\n                                            <FormLabel className={'field-label'}>Totaal te betalen</FormLabel>\r\n                                            <TextBlock>\r\n                                                {MoneyPresenter(\r\n                                                    calculateTotalAmount(\r\n                                                        values.participationsOptioned,\r\n                                                        values.choiceMembership\r\n                                                    )\r\n                                                )}\r\n                                            </TextBlock>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            ) : null}\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                            Ga naar gegevens\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            {!isEmpty(errors) ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                Niet alle verplichte velden zijn ingevuld om verder te gaan naar de\r\n                                                volgende stap!\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                        </Form>\r\n                    </>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOnePcr;\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DefaultContactPersonalEdit from '../../contact-details/default-form-personal/Edit';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaPersonal from '../../../helpers/ValidationSchemaPersonal';\r\nimport ValidationSchemaOrganisation from '../../../helpers/ValidationSchemaOrganisation';\r\nimport DefaultContactOrganisationEdit from '../../contact-details/default-form-organisation/Edit';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { isEmpty } from 'lodash';\r\n\r\nfunction StepTwo({ portalSettings, previous, next, project, initialContact, handleSubmitContactValues }) {\r\n    initialContact.isParticipant = true;\r\n    const typeContact = initialContact.typeId ? initialContact.typeId : null;\r\n\r\n    let validationSchema = null;\r\n    let validationSchemaBasic = null;\r\n    let validationSchemaAdditional = null;\r\n    let validationSchemaPcrAdditional = null;\r\n    switch (typeContact) {\r\n        case 'person':\r\n            validationSchemaBasic = ValidationSchemaPersonal.validationSchemaBasic;\r\n            validationSchemaAdditional = ValidationSchemaPersonal.validationSchemaAdditional;\r\n            validationSchemaPcrAdditional = ValidationSchemaPersonal.validationSchemaPcrAdditional;\r\n            validationSchema = validationSchemaBasic.concat(validationSchemaAdditional);\r\n            if (project.projectType.codeRef === 'postalcode_link_capital') {\r\n                validationSchema = validationSchema.concat(validationSchemaPcrAdditional);\r\n            }\r\n            break;\r\n        case 'organisation':\r\n            validationSchemaBasic = ValidationSchemaOrganisation.validationSchemaBasic;\r\n            validationSchemaAdditional = ValidationSchemaOrganisation.validationSchemaAdditional;\r\n            validationSchemaPcrAdditional = ValidationSchemaPersonal.validationSchemaPcrAdditional;\r\n            validationSchema = validationSchemaBasic.concat(validationSchemaAdditional);\r\n            if (project.projectType.codeRef === 'postalcode_link_capital') {\r\n                validationSchema = validationSchema.concat(validationSchemaPcrAdditional);\r\n            }\r\n            break;\r\n    }\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialContact}\r\n                enableReinitialize={true}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    actions.setSubmitting(true);\r\n                    handleSubmitContactValues(values, actions, next);\r\n                }}\r\n                render={({ errors, touched, setFieldValue, isSubmitting, status, values, handleSubmit }) => {\r\n                    return (\r\n                        <Form>\r\n                            {/* If contact is person */}\r\n                            {initialContact.typeId === 'person' ? (\r\n                                <DefaultContactPersonalEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    projectTypeCodeRef={project.projectType.codeRef}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                />\r\n                            ) : null}\r\n\r\n                            {/* If contact is organisation */}\r\n                            {initialContact.typeId === 'organisation' ? (\r\n                                <DefaultContactOrganisationEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    projectTypeCodeRef={project.projectType.codeRef}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                />\r\n                            ) : null}\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={previous}>\r\n                                            Terug\r\n                                        </Button>\r\n                                        <Button\r\n                                            className={'w-button'}\r\n                                            size=\"sm\"\r\n                                            onClick={handleSubmit}\r\n                                            disabled={isSubmitting}\r\n                                        >\r\n                                            {isSubmitting ? (\r\n                                                <span>\r\n                                                    <ClipLoader color={'white'} size={14} />\r\n                                                    Bezig met opslaan\r\n                                                </span>\r\n                                            ) : (\r\n                                                'Opslaan en doorgaan'\r\n                                            )}\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            {!isEmpty(errors) ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                Niet alle verplichte velden zijn ingevuld om verder te gaan naar de\r\n                                                volgende stap!\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                            {status && status.message ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                {status.message}\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                        </Form>\r\n                    );\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepTwo;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { isEmpty } from 'lodash';\r\nimport ProjectAPI from '../../../api/project/ProjectAPI';\r\nimport fileDownload from 'js-file-download';\r\nimport { FaFileDownload } from 'react-icons/all';\r\n\r\nfunction StepThree({ project, contactProjectData, previous, next, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        didAcceptAgreement: Yup.bool().test(\r\n            'didAcceptAgreement',\r\n            'Je dient akkoord te gaan met de voorwaarden!',\r\n            value => value === true\r\n        ),\r\n        didUnderstandInfo: Yup.bool().test(\r\n            'didUnderstandInfo',\r\n            'Je dient te bevestigen, dat de project informatie gelezen en begrepen is!',\r\n            value => value === true\r\n        ),\r\n    });\r\n\r\n    function downloadFile(e, id, filename) {\r\n        e.preventDefault();\r\n\r\n        ProjectAPI.documentDownload(project.id, id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, filename);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                onSubmit={function(values, actions) {\r\n                    handleSubmitRegisterValues(values);\r\n                    next();\r\n                }}\r\n                initialValues={initialRegisterValues}\r\n            >\r\n                {({ handleSubmit, touched, errors }) => (\r\n                    <>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <p>\r\n                                        <span\r\n                                            dangerouslySetInnerHTML={{\r\n                                                __html: contactProjectData.textAgreeTermsMerged.replace(\r\n                                                    /\\n/g,\r\n                                                    '<br />'\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"didAcceptAgreement\"\r\n                                        render={({ field }) => (\r\n                                            <label className=\"w-checkbox checkbox-fld\">\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    {...field}\r\n                                                    id=\"did_accept_agreement\"\r\n                                                    checked={field.value}\r\n                                                    className=\"w-checkbox-input checkbox\"\r\n                                                />\r\n                                                <span\r\n                                                    htmlFor=\"did_accept_agreement\"\r\n                                                    className=\"checkbox-label w-form-label\"\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: contactProjectData.textLinkAgreeTermsMerged.replace(\r\n                                                            /\\n/g,\r\n                                                            '<br />'\r\n                                                        ),\r\n                                                    }}\r\n                                                />\r\n                                                {project.documentAgreeTerms ? (\r\n                                                    <>\r\n                                                        {' '}\r\n                                                        <a\r\n                                                            href=\"#\"\r\n                                                            onClick={e =>\r\n                                                                downloadFile(\r\n                                                                    e,\r\n                                                                    project.documentAgreeTerms.id,\r\n                                                                    project.documentAgreeTerms.filename\r\n                                                                )\r\n                                                            }\r\n                                                        >\r\n                                                            <FaFileDownload /> downloaden\r\n                                                        </a>\r\n                                                    </>\r\n                                                ) : null}\r\n                                                {touched[field.name] && errors[field.name] ? (\r\n                                                    <div className={'error-message text-danger'}>\r\n                                                        {errors[field.name]}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </label>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"didUnderstandInfo\"\r\n                                        render={({ field }) => (\r\n                                            <label className=\"w-checkbox checkbox-fld\">\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    {...field}\r\n                                                    id=\"did_understand_info\"\r\n                                                    checked={field.value}\r\n                                                    className=\"w-checkbox-input checkbox\"\r\n                                                />\r\n                                                <span\r\n                                                    htmlFor=\"did_understand_info\"\r\n                                                    className=\"checkbox-label w-form-label\"\r\n                                                    dangerouslySetInnerHTML={{\r\n                                                        __html: contactProjectData.textLinkUnderstandInfoMerged.replace(\r\n                                                            /\\n/g,\r\n                                                            '<br />'\r\n                                                        ),\r\n                                                    }}\r\n                                                />\r\n                                                {project.documentUnderstandInfo ? (\r\n                                                    <>\r\n                                                        {' '}\r\n                                                        <a\r\n                                                            href=\"#\"\r\n                                                            onClick={e =>\r\n                                                                downloadFile(\r\n                                                                    e,\r\n                                                                    project.documentUnderstandInfo.id,\r\n                                                                    project.documentUnderstandInfo.filename\r\n                                                                )\r\n                                                            }\r\n                                                        >\r\n                                                            <FaFileDownload /> downloaden\r\n                                                        </a>\r\n                                                    </>\r\n                                                ) : null}{' '}\r\n                                                {touched[field.name] && errors[field.name] ? (\r\n                                                    <div className={'error-message text-danger'}>\r\n                                                        {errors[field.name]}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </label>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={previous}>\r\n                                            Terug\r\n                                        </Button>\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                            {project.usesMollie ? (\r\n                                                <>Ga naar bevestigen en betalen</>\r\n                                            ) : (\r\n                                                <>Ga naar bevestigen</>\r\n                                            )}\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            {!isEmpty(errors) ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                Niet alle verplichte velden zijn ingevuld om verder te gaan naar de\r\n                                                volgende stap!\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                        </Form>\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepThree;\r\n","import React from 'react';\r\nimport Frame from 'react-frame-component';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ViewHtmlAsText = ({ id, value }) => {\r\n    const createMarkup = () => {\r\n        return { __html: value };\r\n    };\r\n\r\n    return (\r\n        <Frame>\r\n            <div id={id} dangerouslySetInnerHTML={createMarkup()} />\r\n        </Frame>\r\n    );\r\n};\r\n\r\nViewHtmlAsText.defaultProps = {\r\n    value: '',\r\n};\r\n\r\nViewHtmlAsText.propTypes = {\r\n    id: PropTypes.string,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nexport default ViewHtmlAsText;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    createParticipantProject: registerValues => {\r\n        const requestUrl = `/project/participant/create`;\r\n\r\n        return axiosInstance.post(requestUrl, registerValues);\r\n    },\r\n\r\n    show: id => {\r\n        const requestUrl = `/project/participant/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n\r\n    participantDocumentDownload: function(participantId, id) {\r\n        const requestUrl = `/project/participant/${participantId}/document/${id}/download`;\r\n\r\n        return axiosInstance.get(requestUrl, { responseType: 'blob' });\r\n    },\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport ViewHtmlAsText from '../../../components/general/ViewHtmlAsText';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ParticipantProjectAPI from '../../../api/participant-project/ParticipantProjectAPI';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { isEmpty } from 'lodash';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction StepFour({ project, contactProjectData, previous, next, registerValues, setSucces }) {\r\n    const [contactDocument, setContactDocument] = useState('');\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        (function callFetchContact() {\r\n            setLoading(true);\r\n            ContactAPI.previewDocument(registerValues)\r\n                .then(payload => {\r\n                    setContactDocument(payload.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                    setLoading(false);\r\n                });\r\n        })();\r\n    }, [registerValues]);\r\n\r\n    function handleSubmitRegisterValues(actions, next) {\r\n        ParticipantProjectAPI.createParticipantProject(registerValues)\r\n            .then(payload => {\r\n                actions.setSubmitting(false);\r\n\r\n                /**\r\n                 * Als Mollie is ingeschakeld voor het project wordt er een betaallink gereturned.\r\n                 * In dat geval huidige scherm verlaten en door naar mollie.\r\n                 */\r\n                if (payload.data.econobisPaymentLink) {\r\n                    window.location.href = payload.data.econobisPaymentLink;\r\n                    return;\r\n                }\r\n\r\n                setSucces(true);\r\n                next();\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met opslaan! Herlaad de pagina opnieuw.');\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        didAgreeRegistration: Yup.bool().test(\r\n            'didAgreeRegistration',\r\n            'Je dient akkoord te gaan met het inschrijfformulier!',\r\n            value => value === true\r\n        ),\r\n    });\r\n\r\n    let contactDocumentOk = false;\r\n    if (!isEmpty('' + contactDocument)) {\r\n        contactDocumentOk = true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : !contactDocumentOk ? (\r\n                <>\r\n                    <Row>\r\n                        <Col>Er ging iets mis bij het maken van het bevestingsformulier voorbeeld.</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={10}>\r\n                            <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                <Button className={'w-button'} size=\"sm\" onClick={previous}>\r\n                                    Terug\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <Formik\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={function(values, actions) {\r\n                        handleSubmitRegisterValues(actions, next);\r\n                    }}\r\n                    initialValues={{ didAgreeRegistration: false }}\r\n                >\r\n                    {({ handleSubmit, touched, errors, isSubmitting, status }) => (\r\n                        <>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <FormLabel className={'field-label'}>Controleer de inschrijving</FormLabel>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <ViewHtmlAsText value={contactDocument} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12} md={3}>\r\n                                        <FormLabel className={'field-label-text'}>\r\n                                            {project.transactionCostsCodeRef === 'none'\r\n                                                ? 'Te betalen bedrag'\r\n                                                : 'Bedrag'}\r\n                                        </FormLabel>\r\n                                    </Col>\r\n                                    <Col xs={12} md={3}>\r\n                                        <TextBlock className={'float-right'}>\r\n                                            {MoneyPresenter(registerValues.amount)}\r\n                                        </TextBlock>\r\n                                    </Col>\r\n                                </Row>\r\n                                {project.transactionCostsCodeRef !== 'none' ? (\r\n                                    <>\r\n                                        <Row>\r\n                                            <Col xs={12} md={3}>\r\n                                                <FormLabel className={'field-label-text'}>\r\n                                                    {project.textTransactionCosts}\r\n                                                </FormLabel>\r\n                                            </Col>\r\n                                            <Col xs={12} md={3}>\r\n                                                <TextBlock className={'float-right'}>\r\n                                                    {MoneyPresenter(registerValues.transactionCostsAmount)}\r\n                                                </TextBlock>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={12} md={3}>\r\n                                                <FormLabel className={'field-label-text'}>Totaal te betalen</FormLabel>\r\n                                            </Col>\r\n                                            <Col xs={12} md={3}>\r\n                                                <TextBlock className={'float-right'}>\r\n                                                    {MoneyPresenter(registerValues.totalAmount)}\r\n                                                </TextBlock>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </>\r\n                                ) : null}\r\n                                <hr />\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <p\r\n                                            dangerouslySetInnerHTML={{\r\n                                                __html: contactProjectData.textAcceptAgreementMerged.replace(\r\n                                                    /\\n/g,\r\n                                                    '<br />'\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <Field\r\n                                            name=\"didAgreeRegistration\"\r\n                                            render={({ field }) => (\r\n                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                    <input\r\n                                                        type=\"checkbox\"\r\n                                                        {...field}\r\n                                                        id=\"did_agree_registration\"\r\n                                                        checked={field.value}\r\n                                                        className=\"w-checkbox-input checkbox\"\r\n                                                    />\r\n                                                    <span\r\n                                                        htmlFor=\"did_agree_registration\"\r\n                                                        className=\"checkbox-label w-form-label\"\r\n                                                    >\r\n                                                        {contactProjectData.textAcceptAgreementQuestionMerged}\r\n                                                    </span>\r\n                                                    {touched[field.name] && errors[field.name] ? (\r\n                                                        <div className={'error-message text-danger'}>\r\n                                                            {errors[field.name]}\r\n                                                        </div>\r\n                                                    ) : null}\r\n                                                </label>\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                            <Button className={'w-button'} size=\"sm\" onClick={previous}>\r\n                                                Terug\r\n                                            </Button>\r\n                                            <Button\r\n                                                className={'w-button'}\r\n                                                size=\"sm\"\r\n                                                onClick={handleSubmit}\r\n                                                disabled={isSubmitting}\r\n                                            >\r\n                                                {isSubmitting ? (\r\n                                                    <span>\r\n                                                        <ClipLoader color={'white'} size={14} />\r\n                                                        Bezig met verwerken\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    <>\r\n                                                        {project.usesMollie ? (\r\n                                                            <>Betaal en bevestig de inschrijving</>\r\n                                                        ) : (\r\n                                                            <>Bevestig inschrijving</>\r\n                                                        )}\r\n                                                    </>\r\n                                                )}\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                {!isEmpty(errors) ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                    Niet alle verplichte velden zijn ingevuld om verder te gaan naar de\r\n                                                    volgende stap!\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                                {status && status.message ? (\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"alert-wrapper\">\r\n                                                <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                    {status.message}\r\n                                                </Alert>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ) : null}\r\n                            </Form>\r\n                        </>\r\n                    )}\r\n                </Formik>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StepFour;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form } from 'formik';\r\n\r\nfunction StepFive({ contactProjectData }) {\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col xs={12} md={10}>\r\n                    {contactProjectData.textRegistrationFinishedMerged.split('\\n').map((item, key) => {\r\n                        return (\r\n                            <span key={key}>\r\n                                {item}\r\n                                <br />\r\n                            </span>\r\n                        );\r\n                    })}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} md={10}>\r\n                    <ButtonGroup className=\"float-right\">\r\n                        <Link to={`/inschrijvingen-projecten`}>\r\n                            <Button className={'w-button'} size=\"sm\">\r\n                                Naar mijn huidige deelnames\r\n                            </Button>\r\n                        </Link>\r\n                    </ButtonGroup>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepFive;\r\n","import React from 'react';\r\nimport StepOneLoan from './StepOneLoan';\r\nimport StepOneObligation from './StepOneObligation';\r\nimport StepOneCapital from './StepOneCapital';\r\nimport StepOnePcr from './StepOnePcr';\r\nimport StepTwo from './StepTwo';\r\nimport StepThree from './StepThree';\r\nimport StepFour from './StepFour';\r\nimport StepFive from './StepFive';\r\nimport { isEmpty } from 'lodash';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Steps({\r\n    portalSettings,\r\n    currentStep,\r\n    previous,\r\n    next,\r\n    project,\r\n    contactProjectData,\r\n    initialRegisterValues,\r\n    handleSubmitRegisterValues,\r\n    initialContact,\r\n    handleSubmitContactValues,\r\n    setSucces,\r\n}) {\r\n    if (isEmpty(project)) {\r\n        return (\r\n            <Container className={'content-section'}>\r\n                <Row>\r\n                    <Col>\r\n                        <p>Fout bij ophalen project. Inschrijving niet (meer) mogelijk op dit moment.</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    switch (currentStep) {\r\n        case 1:\r\n            switch (project.projectType.codeRef) {\r\n                case 'loan':\r\n                    return (\r\n                        <StepOneLoan\r\n                            next={next}\r\n                            project={project}\r\n                            contactProjectData={contactProjectData}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                case 'obligation':\r\n                    return (\r\n                        <StepOneObligation\r\n                            next={next}\r\n                            project={project}\r\n                            contactProjectData={contactProjectData}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                case 'capital':\r\n                    return (\r\n                        <StepOneCapital\r\n                            next={next}\r\n                            project={project}\r\n                            contactProjectData={contactProjectData}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                case 'postalcode_link_capital':\r\n                    return (\r\n                        <StepOnePcr\r\n                            portalSettings={portalSettings}\r\n                            next={next}\r\n                            project={project}\r\n                            contactProjectData={contactProjectData}\r\n                            initialContact={initialContact}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                default:\r\n                    return null;\r\n            }\r\n\r\n        case 2:\r\n            return (\r\n                <StepTwo\r\n                    portalSettings={portalSettings}\r\n                    previous={previous}\r\n                    next={next}\r\n                    project={project}\r\n                    initialContact={initialContact}\r\n                    handleSubmitContactValues={handleSubmitContactValues}\r\n                />\r\n            );\r\n        case 3:\r\n            return (\r\n                <StepThree\r\n                    project={project}\r\n                    contactProjectData={contactProjectData}\r\n                    previous={previous}\r\n                    next={next}\r\n                    initialRegisterValues={initialRegisterValues}\r\n                    handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                />\r\n            );\r\n        case 4:\r\n            return (\r\n                <StepFour\r\n                    project={project}\r\n                    contactProjectData={contactProjectData}\r\n                    previous={previous}\r\n                    next={next}\r\n                    registerValues={initialRegisterValues}\r\n                    setSucces={setSucces}\r\n                />\r\n            );\r\n        case 5:\r\n            return <StepFive contactProjectData={contactProjectData} />;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport default Steps;\r\n","import React from 'react';\r\nimport Steps from './steps';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction MasterForm({\r\n    portalSettings,\r\n    project,\r\n    contactProjectData,\r\n    initialRegisterValues,\r\n    handleSubmitRegisterValues,\r\n    initialContact,\r\n    handleSubmitContactValues,\r\n    setSucces,\r\n}) {\r\n    const [currentStep, setStep] = React.useState(1);\r\n\r\n    function previous() {\r\n        setStep(currentStep <= 2 ? 1 : currentStep - 1);\r\n    }\r\n\r\n    function next() {\r\n        setStep(currentStep >= 4 ? 5 : currentStep + 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {currentStep <= 4 ? (\r\n                <Row className={'mb-4'}>\r\n                    <Col>\r\n                        <div className={'arrow-steps clearfix'}>\r\n                            <div className={`step ${currentStep === 1 ? 'current' : ''}`}>1. Inschrijven</div>\r\n                            <div className={`step ${currentStep === 2 ? 'current' : ''}`}>2. Gegevens</div>\r\n                            <div className={`step ${currentStep === 3 ? 'current' : ''}`}>3. Voorwaarden</div>\r\n                            <div className={`step ${currentStep === 4 ? 'current' : ''}`}>\r\n                                {\r\n                                    project.usesMollie ? (\r\n                                        <>4. Bevestigen en betalen</>\r\n                                    ) : (\r\n                                        <>4. Bevestigen</>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            ) : null}\r\n            <Steps\r\n                portalSettings={portalSettings}\r\n                currentStep={currentStep}\r\n                previous={previous}\r\n                next={next}\r\n                project={project}\r\n                contactProjectData={contactProjectData}\r\n                initialRegisterValues={initialRegisterValues}\r\n                handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                initialContact={initialContact}\r\n                handleSubmitContactValues={handleSubmitContactValues}\r\n                setSucces={setSucces}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MasterForm;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ProjectAPI from '../../api/project/ProjectAPI';\r\nimport LoadingView from '../../components/general/LoadingView';\r\nimport ContactAPI from '../../api/contact/ContactAPI';\r\nimport rebaseContact from '../../helpers/RebaseContact';\r\nimport { PortalUserConsumer } from '../../context/PortalUserContext';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport MasterForm from './MasterForm';\r\nimport PortalSettingsAPI from '../../api/portal-settings/PortalSettingsAPI';\r\nimport axios from 'axios';\r\nimport { ThemeSettingsContext } from '../../context/ThemeSettingsContext';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction RegisterProject({ match, currentSelectedContact }) {\r\n    const { setCurrentThemeSettings } = useContext(ThemeSettingsContext);\r\n\r\n    const initialRegisterValues = {\r\n        contactId: null,\r\n        projectId: null,\r\n        participationsOptioned: 0,\r\n        powerKwhConsumption: 0,\r\n        amountOptioned: 0,\r\n        didAcceptAgreement: false,\r\n        didUnderstandInfo: false,\r\n        choiceMembership: 0,\r\n    };\r\n\r\n    const initialPcrValues = {\r\n        pcrYearlyPowerKwhConsumption: 0,\r\n        pcrPostalCode: '',\r\n        pcrHasSolarPanels: 'N',\r\n        pcrInputGeneratedNumberOfKwh: 0,\r\n        pcrEstimatedRevenueOk: 'Y',\r\n    };\r\n\r\n    const [registerValues, setRegisterValues] = useState(initialRegisterValues);\r\n\r\n    const [project, setProject] = useState({});\r\n    const [contact, setContact] = useState({});\r\n    const [portalSettings, setPortalSettings] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [isSucces, setSucces] = useState(false);\r\n    const [contactProjectData, setContactProjectData] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (currentSelectedContact.id) {\r\n            (function fetchContactAndProject() {\r\n                setLoading(true);\r\n\r\n                axios\r\n                    .all([\r\n                        ProjectAPI.fetchProject(match.params.id),\r\n                        ContactAPI.fetchContact(currentSelectedContact.id),\r\n                        ContactAPI.fetchContactProjectData(currentSelectedContact.id, match.params.id),\r\n                    ])\r\n                    .then(\r\n                        axios.spread((payloadProject, payloadContact, payloadContactProjectData) => {\r\n                            const contact = payloadContact.data.data;\r\n                            const project = payloadProject.data.data;\r\n                            setProject(project);\r\n                            setCurrentThemeSettings(project.administration.portalSettingsLayoutAssigned);\r\n                            const contactData = rebaseContact(contact);\r\n                            setContact(contactData);\r\n\r\n                            setContactProjectData(payloadContactProjectData.data);\r\n\r\n                            if (\r\n                                project &&\r\n                                project.projectType &&\r\n                                project.projectType.codeRef === 'postalcode_link_capital'\r\n                            ) {\r\n                                let pcrPostalCode = '';\r\n                                if (contactData.typeId === 'organisation') {\r\n                                    pcrPostalCode = contactData.visitAddress ? contactData.visitAddress.postalCode : '';\r\n                                } else {\r\n                                    pcrPostalCode = contactData.primaryAddress\r\n                                        ? contactData.primaryAddress.postalCode\r\n                                        : '';\r\n                                }\r\n                                setRegisterValues({\r\n                                    ...registerValues,\r\n                                    projectId: match.params.id,\r\n                                    contactId: currentSelectedContact.id,\r\n                                    // choiceMembership: payloadContactProjectData.data.belongsToMembershipGroup ? 0 : 1,\r\n                                    ...initialPcrValues,\r\n                                    pcrPostalCode,\r\n                                });\r\n                            } else {\r\n                                setRegisterValues({\r\n                                    ...registerValues,\r\n                                    projectId: match.params.id,\r\n                                    contactId: currentSelectedContact.id,\r\n                                    // choiceMembership: payloadContactProjectData.data.belongsToMembershipGroup ? 0 : 1,\r\n                                });\r\n                            }\r\n\r\n                            if (\r\n                                payloadContactProjectData.data.projectRegisterIndicators.allowChangeParticipation &&\r\n                                payloadContactProjectData.data.projectRegisterIndicators.allowPayMollie\r\n                            ) {\r\n                                /**\r\n                                 * Er is wel ingeschreven maar nog niet betaald, dan mag het formulier\r\n                                 * wel geopend worden en stellen we de eerder ingevoerde gegevens in. projectRegisterIndicators\r\n                                 */\r\n                                setRegisterValues(current => {\r\n                                    return {\r\n                                        ...current,\r\n                                        participationsOptioned:\r\n                                            payloadContactProjectData.data.projectRegisterIndicators\r\n                                                .participationsOptioned,\r\n                                        amountOptioned:\r\n                                            payloadContactProjectData.data.projectRegisterIndicators.amountOptioned,\r\n                                        pcrYearlyPowerKwhConsumption:\r\n                                            payloadContactProjectData.data.projectRegisterIndicators\r\n                                                .powerKwhConsumption,\r\n                                        didAcceptAgreement: true,\r\n                                        didUnderstandInfo: true,\r\n                                    };\r\n                                });\r\n                            }\r\n\r\n                            setLoading(false);\r\n                        })\r\n                    )\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setLoading(false);\r\n                    });\r\n            })();\r\n        }\r\n\r\n        (function callFetchPortalSettings() {\r\n            setLoading(true);\r\n            const keys =\r\n                '?keys[]=portalName' +\r\n                '&keys[]=portalWebsite' +\r\n                '&keys[]=portalUrl' +\r\n                '&keys[]=responsibleUserId' +\r\n                '&keys[]=checkContactTaskResponsibleUserId' +\r\n                '&keys[]=linkPrivacyPolicy' +\r\n                '&keys[]=pcrPowerKwhConsumptionPercentage' +\r\n                '&keys[]=pcrGeneratingCapacityOneSolorPanel';\r\n            PortalSettingsAPI.fetchPortalSettings(keys)\r\n                .then(payload => {\r\n                    setPortalSettings({ ...payload.data });\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ isLoading: false, hasError: true });\r\n                });\r\n        })();\r\n    }, [match, currentSelectedContact]);\r\n\r\n    function handleSubmitRegisterValues(values) {\r\n        setRegisterValues({ ...registerValues, ...values });\r\n    }\r\n\r\n    function handleSubmitContactValues(values, actions, nextStep) {\r\n        const updatedContact = { ...contact, ...values, projectId: project.id };\r\n        ContactAPI.updateContact(updatedContact)\r\n            .then(payload => {\r\n                ContactAPI.fetchContact(currentSelectedContact.id)\r\n                    .then(payload => {\r\n                        const contactData = rebaseContact(payload.data.data);\r\n\r\n                        setContact(contactData);\r\n                        nextStep();\r\n                    })\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setLoading(false);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                actions.setStatus({\r\n                    message: error.response.data.message,\r\n                });\r\n                // alert('Er is iets misgegaan met opslaan! Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : !contactProjectData.projectRegisterIndicators.hasParticipation &&\r\n              !contactProjectData.projectRegisterIndicators.allowRegisterToProject ? (\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">\r\n                                Inschrijving voor project <strong>{project.name}</strong>\r\n                            </h1>\r\n                            <Row className={'mb-4'}>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            {contactProjectData.projectRegisterIndicators.textNotAllowedRegisterToProject\r\n                                                .split('<br />')\r\n                                                .map((item, key) => {\r\n                                                    return (\r\n                                                        <span key={key}>\r\n                                                            {item}\r\n                                                            <br />\r\n                                                        </span>\r\n                                                    );\r\n                                                })}\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={10}>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Link to={`/inschrijvingen-projecten`}>\r\n                                    <Button className={'w-button'} size=\"sm\">\r\n                                        Naar huidige deelnames\r\n                                    </Button>\r\n                                </Link>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            ) : contactProjectData.projectRegisterIndicators.hasParticipation &&\r\n              !contactProjectData.projectRegisterIndicators.allowChangeParticipation ? (\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">\r\n                                <strong>{contact.fullNameFnf}</strong> is al ingeschreven voor project{' '}\r\n                                <strong>{project.name}</strong>\r\n                            </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={10}>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Link to={`/inschrijvingen-projecten`}>\r\n                                    <Button className={'w-button'} size=\"sm\">\r\n                                        Naar huidige deelnames\r\n                                    </Button>\r\n                                </Link>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <Row>\r\n                    <Col>\r\n                        {isSucces ? (\r\n                            <h1 className=\"content-heading\">\r\n                                Ingeschreven voor project <strong>{project.name}</strong>\r\n                            </h1>\r\n                        ) : (\r\n                            <>\r\n                                <Row>\r\n                                    <ButtonGroup aria-label=\"register\" className=\"w-button-group-left\">\r\n                                        <Link to={`/inschrijven-projecten`}>\r\n                                            <Button className={'w-button'} size=\"sm\">\r\n                                                Inschrijven projecten\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </ButtonGroup>\r\n                                </Row>\r\n                                <h1 className=\"content-heading\">\r\n                                    Schrijf <strong>{contact.fullNameFnf}</strong> in voor project{' '}\r\n                                    <strong>{project.name}</strong>\r\n                                </h1>\r\n                            </>\r\n                        )}\r\n                        <MasterForm\r\n                            portalSettings={portalSettings}\r\n                            project={project}\r\n                            contactProjectData={contactProjectData}\r\n                            initialRegisterValues={registerValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                            initialContact={contact}\r\n                            handleSubmitContactValues={handleSubmitContactValues}\r\n                            setSucces={setSucces}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function RegisterProjectWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact }) => (\r\n                <RegisterProject {...props} currentSelectedContact={currentSelectedContact} />\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaPersonal from './../../../../helpers/ValidationSchemaPersonal';\r\nimport { isEmpty } from 'lodash';\r\nimport { Alert } from 'react-bootstrap';\r\nimport InputText from '../../../../components/form/InputText';\r\nimport { Field } from 'formik';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PersonalAddressEdit({ initialContact, handleSubmitContactAddressValues }) {\r\n    const validationSchema = ValidationSchemaPersonal.validationSchemaPostalCodeAndNumber;\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialContact}\r\n                enableReinitialize={true}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    actions.setSubmitting(true);\r\n                    handleSubmitContactAddressValues(values, actions);\r\n                }}\r\n                render={({ errors, touched, setFieldValue, isSubmitting, status, values, handleSubmit }) => {\r\n                    return (\r\n                        <Form>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            Op dit moment zijn je adresgegevens nog niet bij ons bekend.\r\n                                            <br />\r\n                                            Er zijn projecten waarop je kan inschrijven die afhankelijk van je adres\r\n                                            zijn.\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={12}>\r\n                                    <FormLabel className={'field-label'}>Postcode en huisnummer</FormLabel>\r\n                                    <Row>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"primaryAddress.postalCode\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"postal_code\"\r\n                                                        placeholder={'Postcode'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"primaryAddress.number\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"street_number\"\r\n                                                        placeholder={'Nummer'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"primaryAddress.addition\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"addition\"\r\n                                                        placeholder={'Toevoeging'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup aria-label=\"address-person\" className=\"float-right\">\r\n                                        <Link to={`/`}>\r\n                                            <Button variant={'outline-dark'} size=\"sm\">\r\n                                                Annuleren\r\n                                            </Button>\r\n                                        </Link>\r\n                                        <Button\r\n                                            className={'w-button'}\r\n                                            size=\"sm\"\r\n                                            onClick={handleSubmit}\r\n                                            disabled={isSubmitting}\r\n                                        >\r\n                                            {isSubmitting ? (\r\n                                                <span>\r\n                                                    <ClipLoader color={'white'} size={14} />\r\n                                                    Bezig met opslaan\r\n                                                </span>\r\n                                            ) : (\r\n                                                'Opslaan'\r\n                                            )}\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            {!isEmpty(errors) ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                Niet alle verplichte velden zijn (juist) ingevuld!\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                            {status && status.message ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                {status.message}\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                        </Form>\r\n                    );\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonalAddressEdit;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaOrganisation from '../../../../helpers/ValidationSchemaOrganisation';\r\nimport { isEmpty } from 'lodash';\r\nimport { Alert } from 'react-bootstrap';\r\nimport InputText from '../../../../components/form/InputText';\r\nimport { Field } from 'formik';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction OrganisationAddressEdit({ initialContact, handleSubmitContactAddressValues }) {\r\n    const validationSchema = ValidationSchemaOrganisation.validationSchemaPostalCodeAndNumber;\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialContact}\r\n                enableReinitialize={true}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    actions.setSubmitting(true);\r\n                    handleSubmitContactAddressValues(values, actions);\r\n                }}\r\n                render={({ errors, touched, setFieldValue, isSubmitting, status, values, handleSubmit }) => {\r\n                    return (\r\n                        <Form>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className=\"alert-wrapper\">\r\n                                        <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                            Op dit moment zijn je adresgegevens nog niet bij ons bekend.\r\n                                            <br />\r\n                                            Er zijn projecten waarop je kan inschrijven die afhankelijk van je adres\r\n                                            zijn.\r\n                                        </Alert>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={12}>\r\n                                    <FormLabel className={'field-label'}>Postcode en huisnummer</FormLabel>\r\n                                    <Row>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"visitAddress.postalCode\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"postal_code\"\r\n                                                        placeholder={'Postcode'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"visitAddress.number\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"street_number\"\r\n                                                        placeholder={'Nummer'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col xs={12} sm={4}>\r\n                                            <Field\r\n                                                name=\"visitAddress.addition\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"addition\"\r\n                                                        placeholder={'Toevoeging'}\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup aria-label=\"address-organistation\" className=\"float-right\">\r\n                                        <Link to={`/`}>\r\n                                            <Button variant={'outline-dark'} size=\"sm\">\r\n                                                Annuleren\r\n                                            </Button>\r\n                                        </Link>\r\n                                        <Button\r\n                                            className={'w-button'}\r\n                                            size=\"sm\"\r\n                                            onClick={handleSubmit}\r\n                                            disabled={isSubmitting}\r\n                                        >\r\n                                            {isSubmitting ? (\r\n                                                <span>\r\n                                                    <ClipLoader color={'white'} size={14} />\r\n                                                    Bezig met opslaan\r\n                                                </span>\r\n                                            ) : (\r\n                                                'Opslaan'\r\n                                            )}\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            {!isEmpty(errors) ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'warning'}>\r\n                                                Niet alle verplichte velden zijn (juist) ingevuld!\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                            {status && status.message ? (\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className=\"alert-wrapper\">\r\n                                            <Alert key={'form-general-error-alert'} variant={'danger'}>\r\n                                                {status.message}\r\n                                            </Alert>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : null}\r\n                        </Form>\r\n                    );\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrganisationAddressEdit;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table';\r\nimport moment from 'moment';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport { PortalUserConsumer } from '../../../context/PortalUserContext';\r\nimport { FaInfoCircle } from 'react-icons/fa';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport rebaseContact from '../../../helpers/RebaseContact';\r\nimport PersonalAddressEdit from './address-person/Edit';\r\nimport OrganisationAddressEdit from './address-organisation/Edit';\r\n\r\nfunction ProjectList(props) {\r\n    const [contact, setContact] = useState({});\r\n    const [contactProjectsArray, setContactProjectsArray] = useState([]);\r\n    const [sceOrPcrProjectsAvailable, setSceOrPcrProjectsAvailable] = useState(false);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const prevCurrentSelectedContact = usePrevious(props.currentSelectedContact);\r\n\r\n    useEffect(() => {\r\n        (function callFetchProjects() {\r\n            setLoading(true);\r\n            // Call Api if current selected contact id is filled\r\n            if (props.currentSelectedContact.id) {\r\n                // If there is no previous selected contact OR previous selected contact is not the same as current selected contact\r\n                if (!prevCurrentSelectedContact || prevCurrentSelectedContact.id != props.currentSelectedContact.id) {\r\n                    callFetchContact();\r\n                    callFetchContactProjects();\r\n                }\r\n            }\r\n        })();\r\n    }, [props.currentSelectedContact]);\r\n\r\n    useEffect(() => {\r\n        (function determineSceOrPcrProjectsAvailable() {\r\n            if (contactProjectsArray.length > 0) {\r\n                contactProjectsArray.find(function(project) {\r\n                    return project.isSceOrPcrProject && setSceOrPcrProjectsAvailable(true);\r\n                });\r\n            }\r\n        })();\r\n    }, [contactProjectsArray.length > 0]);\r\n\r\n    function callFetchContact() {\r\n        setLoading(true);\r\n        ContactAPI.fetchContact(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                const contactData = rebaseContact(payload.data.data);\r\n\r\n                setContact(contactData);\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function callFetchContactProjects() {\r\n        ContactAPI.fetchContactProjects(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                setContactProjectsArray(payload.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function usePrevious(value) {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    function handleSubmitContactAddressValues(values, actions) {\r\n        const updatedContact = { ...contact, ...values, projectId: null };\r\n        ContactAPI.updateContact(updatedContact)\r\n            .then(payload => {\r\n                actions.setSubmitting(false);\r\n                callFetchContact();\r\n                callFetchContactProjects();\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                actions.setStatus({\r\n                    message: error.response.data.message,\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"content-heading\">\r\n                        Overzicht projecten waarop <strong>{props.currentSelectedContact.fullNameFnf}</strong> kan\r\n                        inschrijven.\r\n                    </h1>\r\n                </Col>\r\n            </Row>\r\n            {sceOrPcrProjectsAvailable && contact.noAddressesFound && contact.typeId === 'person' ? (\r\n                <PersonalAddressEdit\r\n                    initialContact={contact}\r\n                    handleSubmitContactAddressValues={handleSubmitContactAddressValues}\r\n                />\r\n            ) : sceOrPcrProjectsAvailable && contact.noAddressesFound && contact.typeId === 'organisation' ? (\r\n                <OrganisationAddressEdit\r\n                    initialContact={contact}\r\n                    handleSubmitContactAddressValues={handleSubmitContactAddressValues}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <p>Klik op het project voor meer details.</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            {isLoading ? (\r\n                                <LoadingView />\r\n                            ) : contactProjectsArray.length === 0 ? (\r\n                                'Geen projecten beschikbaar om op in te schrijven.'\r\n                            ) : (\r\n                                <Table responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Organisatie</th>\r\n                                            <th>Project</th>\r\n                                            <th>Ingeschreven</th>\r\n                                            <th>Start inschrijving</th>\r\n                                            <th>Einde inschrijving</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {contactProjectsArray.map(project => (\r\n                                            <tr key={project.id}>\r\n                                                <td>{project.administrationName}</td>\r\n                                                <td>\r\n                                                    {project.allowChangeParticipation ? (\r\n                                                        <>\r\n                                                            {project.name} (\r\n                                                            <Link to={`/project/${project.id}`}>\r\n                                                                wijzig inschrijving\r\n                                                            </Link>\r\n                                                            )\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            {!project.hasParticipation &&\r\n                                                            project.allowRegisterToProject ? (\r\n                                                                <Link to={`/project/${project.id}`}>\r\n                                                                    {project.name}\r\n                                                                </Link>\r\n                                                            ) : (\r\n                                                                <span className={'text-muted'}>{project.name}</span>\r\n                                                            )}\r\n                                                        </>\r\n                                                    )}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {project.hasParticipation ? (\r\n                                                        <>\r\n                                                            {project.allowPayMollie ? (\r\n                                                                <div className=\"text-center\">\r\n                                                                    Nog niet betaald,\r\n                                                                    <br />\r\n                                                                    <a href={project.econobisPaymentLink}>betaal nu</a>\r\n                                                                </div>\r\n                                                            ) : (\r\n                                                                <div className=\"text-success text-center\">✔</div>\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <div className=\"text-center\">\r\n                                                            {!project.allowRegisterToProject ? (\r\n                                                                <>\r\n                                                                    <FaInfoCircle\r\n                                                                        color={'blue'}\r\n                                                                        size={'15px'}\r\n                                                                        data-tip={`${project.textNotAllowedRegisterToProject}`}\r\n                                                                        data-for={`project-${project.id}`}\r\n                                                                    />\r\n                                                                    <ReactTooltip\r\n                                                                        id={`project-${project.id}`}\r\n                                                                        effect=\"float\"\r\n                                                                        place=\"bottom\"\r\n                                                                        multiline={true}\r\n                                                                        aria-haspopup=\"true\"\r\n                                                                    />\r\n                                                                </>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {project.dateStartRegistrations\r\n                                                        ? moment(project.dateStartRegistrations).format('LL')\r\n                                                        : ''}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {project.dateEndRegistrations\r\n                                                        ? moment(project.dateEndRegistrations).format('LL')\r\n                                                        : ''}\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function ProjectListWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact }) => <ProjectList {...props} currentSelectedContact={currentSelectedContact} />}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction LoanDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                    <FormLabel>Lening nodig</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.amountOfLoanNeeded)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal bedrag per contact</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.minAmountLoan)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal bedrag per contact</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.maxAmountLoan)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanDetails;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction ObligationDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Huidige hoofdsom per obligatie</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Aantal obligaties nodig</FormLabel>\r\n                    <TextBlock>{project.totalParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal aantal obligaties per contact</FormLabel>\r\n                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal aantal obligaties per contact</FormLabel>\r\n                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ObligationDetails;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction CapitalDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Huidige boekwaarde per participatie</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Aantal participaties nodig</FormLabel>\r\n                    <TextBlock>{project.totalParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CapitalDetails;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction PcrDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Huidige boekwaarde per participatie</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.currentBookWorth)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Aantal participaties nodig</FormLabel>\r\n                    <TextBlock>{project.totalParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PcrDetails;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ProjectAPI from '../../../api/project/ProjectAPI';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport LoanDetails from './LoanDetails';\r\nimport ObligationDetails from './ObligationDetails';\r\nimport CapitalDetails from './CapitalDetails';\r\nimport PcrDetails from './PcrDetails';\r\nimport { ThemeSettingsContext } from '../../../context/ThemeSettingsContext';\r\nimport { PortalUserContext } from '../../../context/PortalUserContext';\r\nimport { isEmpty } from 'lodash';\r\nimport fileDownload from 'js-file-download';\r\nimport { FaFileDownload } from 'react-icons/all';\r\n\r\nfunction ProjectDetails({ match }) {\r\n    const { setCurrentThemeSettings } = useContext(ThemeSettingsContext);\r\n    const { currentSelectedContact } = useContext(PortalUserContext);\r\n    const [project, setProject] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (currentSelectedContact.id) {\r\n            (function callFetchProject() {\r\n                setLoading(true);\r\n                ProjectAPI.fetchProject(match.params.id)\r\n                    .then(payload => {\r\n                        setProject(payload.data.data);\r\n                        setCurrentThemeSettings(payload.data.data.administration.portalSettingsLayoutAssigned);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setLoading(false);\r\n                    });\r\n            })();\r\n        }\r\n    }, [match, currentSelectedContact]);\r\n\r\n    function downloadFile(e, id, filename) {\r\n        e.preventDefault();\r\n\r\n        ProjectAPI.documentDownload(project.id, id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, filename);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    function renderDetails() {\r\n        switch (project.projectType.codeRef) {\r\n            case 'loan':\r\n                return <LoanDetails project={project} />;\r\n            case 'obligation':\r\n                return <ObligationDetails project={project} />;\r\n            case 'capital':\r\n                return <CapitalDetails project={project} />;\r\n            case 'postalcode_link_capital':\r\n                return <PcrDetails project={project} />;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n    if (isEmpty(project)) {\r\n        return (\r\n            <Container className={'content-section'}>\r\n                {isLoading ? (\r\n                    <LoadingView />\r\n                ) : (\r\n                    <Row>\r\n                        <Col>\r\n                            <p>Geen projectdetails bekend</p>\r\n                        </Col>\r\n                    </Row>\r\n                )}\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        <ButtonGroup aria-label=\"project-details\" className=\"w-button-group-left\">\r\n                            <Link to={`/inschrijven-projecten`}>\r\n                                <Button className={'w-button'} size=\"sm\">\r\n                                    Inschrijven projecten\r\n                                </Button>\r\n                            </Link>\r\n                        </ButtonGroup>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">Inschrijven project</h1>\r\n                            <div className=\"content-subheading\">Organisatie {project.administration.name}</div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {renderDetails()}\r\n\r\n                    <Row className={'mt-5'}>\r\n                        <Col>\r\n                            <p>\r\n                                {project.documentProjectInfo ? (\r\n                                    <>\r\n                                        {'Meer informatie over dit project kan je hier '}\r\n                                        <a\r\n                                            href=\"#\"\r\n                                            onClick={e =>\r\n                                                downloadFile(\r\n                                                    e,\r\n                                                    project.documentProjectInfo.id,\r\n                                                    project.documentProjectInfo.filename\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            <FaFileDownload /> downloaden\r\n                                        </a>\r\n                                    </>\r\n                                ) : project.linkProjectInfo != null ? (\r\n                                    <>\r\n                                        {'Meer informatie over dit project vind je '}\r\n                                        <a href={`${project.linkProjectInfo}`} target=\"_blank\">\r\n                                            hier\r\n                                        </a>\r\n                                    </>\r\n                                ) : null}\r\n                            </p>\r\n                            <p>Wil je inschrijven op dit project. Klik dan op \"Ga naar inschrijven\".</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Link to={`/inschrijven/${project.id}`}>\r\n                                    <Button className={'w-button'} size=\"sm\">\r\n                                        Ga naar inschrijven\r\n                                    </Button>\r\n                                </Link>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProjectDetails;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport { PortalUserConsumer } from '../../../context/PortalUserContext';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction RegistrationList(props) {\r\n    const [contact, setContact] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n    const prevCurrentSelectedContact = usePrevious(props.currentSelectedContact);\r\n\r\n    useEffect(() => {\r\n        // Call Api if current selected contact id is filled\r\n        if (props.currentSelectedContact.id) {\r\n            // If there is no previous selected contact OR previous selected contact is not the same as current selected contact\r\n            if (!prevCurrentSelectedContact || prevCurrentSelectedContact.id != props.currentSelectedContact.id) {\r\n                callFetchContact();\r\n            }\r\n        }\r\n    }, [props.currentSelectedContact]);\r\n\r\n    function callFetchContact() {\r\n        setLoading(true);\r\n        ContactAPI.fetchContactWithParticipants(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                setContact(payload.data.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function usePrevious(value) {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"content-heading\">\r\n                        De projecten waarin <strong>{contact.fullNameFnf}</strong> deelneemt.\r\n                    </h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {isLoading ? (\r\n                        <LoadingView />\r\n                    ) : contact.participations.length === 0 ? (\r\n                        'Geen huidige deelnames aanwezig.'\r\n                    ) : (\r\n                        <Table responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Organisatie</th>\r\n                                    <th>Project</th>\r\n                                    <th>Deelname</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {contact.participations.map(participation => {\r\n                                    if (\r\n                                        !participation.project.dateEnd ||\r\n                                        moment(participation.project.dateEnd).format('YYYY-MM-DD') >=\r\n                                            moment().format('YYYY-MM-DD')\r\n                                    ) {\r\n                                        return (\r\n                                            <tr key={participation.id}>\r\n                                                <td>{participation.project.administration.name}</td>\r\n                                                <td>\r\n                                                    <Link to={`/project-deelname/${participation.id}`}>\r\n                                                        {participation.project.name}\r\n                                                    </Link>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {participation.project.projectType.codeRef == 'loan' ? (\r\n                                                        <>\r\n                                                            {participation.amountInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening{' '}\r\n                                                                    {MoneyPresenter(participation.amountInteressed)}{' '}\r\n                                                                    <em>(Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.amountOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening{' '}\r\n                                                                    {MoneyPresenter(participation.amountOptioned)}{' '}\r\n                                                                    <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.amountGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening {MoneyPresenter(participation.amountGranted)}{' '}\r\n                                                                    <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.amountDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening{' '}\r\n                                                                    {MoneyPresenter(participation.amountDefinitive)}{' '}\r\n                                                                    <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n\r\n                                                    {participation.project.projectType.codeRef == 'obligation' ? (\r\n                                                        <>\r\n                                                            {participation.participationsInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsInteressed}\r\n                                                                    {' obligaties '} <em> (Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsOptioned}\r\n                                                                    {' obligaties '} <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsGranted}\r\n                                                                    {' obligaties '} <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsDefinitive}\r\n                                                                    {' obligaties '}\r\n                                                                    <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n\r\n                                                    {participation.project.projectType.codeRef == 'capital' ? (\r\n                                                        <>\r\n                                                            {participation.participationsInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsInteressed}\r\n                                                                    {' participaties '} <em>(Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsOptioned}\r\n                                                                    {' participaties '} <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsGranted}\r\n                                                                    {' participaties '} <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsDefinitive}\r\n                                                                    {' participaties '} <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n\r\n                                                    {participation.project.projectType.codeRef ==\r\n                                                    'postalcode_link_capital' ? (\r\n                                                        <>\r\n                                                            {participation.participationsInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsInteressed}\r\n                                                                    {' participaties '} <em>(Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsOptioned}\r\n                                                                    {' participaties '} <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsGranted}\r\n                                                                    {' participaties '} <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsDefinitive}\r\n                                                                    {' participaties '} <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    }\r\n                                    return null;\r\n                                })}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function RegistrationListWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact }) => (\r\n                <RegistrationList {...props} currentSelectedContact={currentSelectedContact} />\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Titles from '../../../data/Titles';\r\nimport LastNamePrefixes from '../../../data/LastNamePrefixes';\r\nimport Select from '../../../components/form/Select';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n    personFirstName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n    personLastName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst NewAccountFormPersonal = ({ handleSubmit, showSuccessMessage }) => (\r\n    <Formik\r\n        initialValues={{\r\n            email: '',\r\n            personTitleId: '',\r\n            personFirstName: '',\r\n            personLastName: '',\r\n        }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'authorization-text'}>Account aanmaken voor jezelf</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'authorization-text'}>Gegevens</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personTitleId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"title_id\"\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Aanhef'}\r\n                                    options={Titles}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personFirstName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"first_name-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'Voornaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personLastNamePrefixId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name_prefix_id\"\r\n                                    options={LastNamePrefixes}\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Tussenvoegsel'}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Field\r\n                            name=\"personLastName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'Achternaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"email-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'E-mailadres'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <ButtonGroup aria-label=\"create-account\" className=\"w-button-group\">\r\n                            <ButtonText\r\n                                buttonText={'Account aanmaken'}\r\n                                buttonClassName={'authorization-button'}\r\n                                size=\"sm\"\r\n                                type={'submit'}\r\n                                loading={isSubmitting}\r\n                                loadingSpinnerColor={'#034b8c'}\r\n                                disabled={showSuccessMessage}\r\n                            />\r\n                        </ButtonGroup>\r\n                    </Row>\r\n                </>\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default NewAccountFormPersonal;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Titles from '../../../data/Titles';\r\nimport LastNamePrefixes from '../../../data/LastNamePrefixes';\r\nimport Select from '../../../components/form/Select';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n    organisationName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n    personFirstName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n    personLastName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst NewAccountFormOrganisation = ({ handleSubmit, showSuccessMessage }) => (\r\n    <Formik\r\n        initialValues={{ email: '', organisationName: '', personTitleId: '', personFirstName: '', personLastName: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'authorization-text'}>Account aanmaken voor je organisatie</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"organisationName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"name-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'Naam Organisatie'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'authorization-text'}>Gegevens contactpersoon</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personTitleId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"title_id\"\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Aanhef'}\r\n                                    options={Titles}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personFirstName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"first_name-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'Voornaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personLastNamePrefixId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name_prefix_id\"\r\n                                    options={LastNamePrefixes}\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Tussenvoegsel'}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Field\r\n                            name=\"personLastName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'Achternaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"email-new-acount\"\r\n                                    className={''}\r\n                                    placeholder={'E-mailadres'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <ButtonText\r\n                            buttonText={'Account aanmaken'}\r\n                            buttonClassName={'authorization-button'}\r\n                            size=\"sm\"\r\n                            type={'submit'}\r\n                            loading={isSubmitting}\r\n                            loadingSpinnerColor={'#034b8c'}\r\n                            disabled={showSuccessMessage}\r\n                        />\r\n                    </Row>\r\n                </>\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default NewAccountFormOrganisation;\r\n","import React, { useState } from 'react';\r\nimport { GoogleReCaptchaProvider, useGoogleReCaptcha } from 'react-google-recaptcha-v3';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport NewAccountFormPersonal from './NewAccountFormPersonal';\r\nimport NewAccountFormOrganisation from './NewAccountFormOrganisation';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nconst NewAccount = props => {\r\n    const { executeRecaptcha } = useGoogleReCaptcha();\r\n    const [contactType, setContactType] = useState('person');\r\n    const [showError, toggleError] = useState(false);\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [redirectToReferrer, toggleRedirect] = useState(false);\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    async function handleSubmit(values, actions) {\r\n        if (!executeRecaptcha) {\r\n            return;\r\n        }\r\n        const reCaptchaToken = await executeRecaptcha('signup_page');\r\n\r\n        AuthAPI.newAccount({ ...values, contactType: contactType, reCaptchaToken })\r\n            .then(payload => {\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                // If new account fails show error and then set submitting back to false\r\n                toggleError(true);\r\n                if (error.response && error.response.status === 404) {\r\n                    setErrorMessage(\r\n                        'Er bestaat al een account met het e-mailadres dat je hebt ingevuld. Je kunt met dit e-mailadres inloggen als bestaand contact. Wil je een nieuw account aanmaken? Gebruik dan alsjeblieft een ander e-mailadres.'\r\n                    );\r\n                } else if (error.response && error.response.status === 405) {\r\n                    setErrorMessage(\r\n                        'Er bestaat al een contact met het e-mailadres, voornaam en achternaam dat je hebt ingevuld. Wil je een nieuw account aanmaken? Gebruik dan alsjeblieft een ander e-mailadres, voornaam of achternaam.'\r\n                    );\r\n                } else {\r\n                    setErrorMessage('Fout bij aanmaken nieuw account!');\r\n                }\r\n\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect(from) {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {redirectToReferrer && !showSuccessMessage ? (\r\n                redirect('/dashboard')\r\n            ) : (\r\n                <div className=\"authorization-container\">\r\n                    <Container fluid className=\"authorization-text\">\r\n                        <Row className=\"justify-content-center align-content-start align-content-lg-center full-height p-2\">\r\n                            <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\r\n                                <img\r\n                                    src={`images/logo.png?${imageHash}`}\r\n                                    alt=\"\"\r\n                                    className=\"image logo-container-small\"\r\n                                />\r\n\r\n                                {showSuccessMessage ? (\r\n                                    redirect('nieuw-account-succes')\r\n                                ) : (\r\n                                    <>\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <h3 className={'authorization-text'}>Nieuw account</h3>\r\n                                        </Row>\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <p className={'authorization-text'}>\r\n                                                Maak binnen 2 minuten een account aan.\r\n                                            </p>\r\n                                        </Row>\r\n                                        <br />\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <ButtonToolbar toggle>\r\n                                                <Col>\r\n                                                    <Button\r\n                                                        className={'authorization-button'}\r\n                                                        variant={\r\n                                                            contactType === 'person'\r\n                                                                ? 'primary fixed-height'\r\n                                                                : 'light fixed-height'\r\n                                                        }\r\n                                                        block\r\n                                                        onClick={() => setContactType('person')}\r\n                                                    >\r\n                                                        Voor jezelf\r\n                                                    </Button>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Button\r\n                                                        className={'authorization-button'}\r\n                                                        variant={contactType === 'organisation' ? 'primary' : 'light'}\r\n                                                        block\r\n                                                        onClick={() => setContactType('organisation')}\r\n                                                    >\r\n                                                        Voor je organisatie\r\n                                                    </Button>\r\n                                                </Col>\r\n                                            </ButtonToolbar>\r\n                                        </Row>\r\n                                        <br />\r\n\r\n                                        {contactType === 'person' ? (\r\n                                            <NewAccountFormPersonal\r\n                                                handleSubmit={handleSubmit}\r\n                                                showSuccessMessage={showSuccessMessage}\r\n                                            />\r\n                                        ) : (\r\n                                            <NewAccountFormOrganisation\r\n                                                handleSubmit={handleSubmit}\r\n                                                showSuccessMessage={showSuccessMessage}\r\n                                            />\r\n                                        )}\r\n                                        {showError ? (\r\n                                            <Row className=\"justify-content-center\">\r\n                                                <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                                    {errorMessage}\r\n                                                </Alert>\r\n                                            </Row>\r\n                                        ) : null}\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <ButtonGroup aria-label=\"redirect-to-login\" className=\"w-button-group\">\r\n                                                <Col>\r\n                                                    <ButtonText\r\n                                                        buttonText={'Heb je al een account ?'}\r\n                                                        onClickAction={toggleRedirect}\r\n                                                        buttonClassName={'authorization-button'}\r\n                                                        size=\"sm\"\r\n                                                    />\r\n                                                </Col>\r\n                                            </ButtonGroup>\r\n                                        </Row>\r\n                                    </>\r\n                                )}\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nfunction NewAccountWithProvider() {\r\n    const RE_CAPTCHA_KEY = process.env.REACT_APP_RE_CAPTCHA_KEY;\r\n\r\n    return (\r\n        <GoogleReCaptchaProvider reCaptchaKey={RE_CAPTCHA_KEY} language={'nl'}>\r\n            <NewAccount />\r\n        </GoogleReCaptchaProvider>\r\n    );\r\n}\r\n\r\nexport default NewAccountWithProvider;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NewAccountSuccess = () => {\r\n    const [imageHash, setImageHash] = useState(Date.now());\r\n\r\n    return (\r\n        <Container fluid className=\"authorization-container\">\r\n            <Row className=\"justify-content-center align-content-center full-height\">\r\n                <Col xs=\"12\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"4\">\r\n                    <img src={`images/logo.png?${imageHash}`} alt=\"\" className=\"image logo-container\" />\r\n                    <div>\r\n                        <h3 className={'authorization-text'}>Een E-mail is onderweg!</h3>\r\n                        <p className={'authorization-text'}>\r\n                            Binnen enkele minuten ontvang je een e-mail met een persoonlijke link. Via deze link kun je\r\n                            je account activeren.\r\n                            <br />\r\n                            <br />\r\n                            <strong>Let op:</strong> Het kan zijn dat de mail door een spamfilter is geblokkeerd.\r\n                            Spamfilters van bijvoorbeeld Gmail en Hotmail staan erg \"scherp\". Kijk even bij de\r\n                            Spam/Reclame of je onze mail daar terug vindt.\r\n                        </p>\r\n                        <a onClick={window.close} href=\"#\" className=\"authorization-link\">\r\n                            Sluit venster\r\n                        </a>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default NewAccountSuccess;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport PortalUserAPI from '../../../api/portal-user/PortalUserAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string()\r\n        .email('Geen geldig e-mailadres')\r\n        .required('Verplicht'),\r\n});\r\n\r\nfunction ChangeAccountEmail() {\r\n    const [portalUserEmail, setPortalUserEmail] = useState('');\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const [showError, toggleError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (function callFetchUserEmail() {\r\n            PortalUserAPI.fetchPortalUserEmail()\r\n                .then(payload => {\r\n                    setPortalUserEmail(payload.data);\r\n                })\r\n                .catch(error => {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                });\r\n        })();\r\n    }, []);\r\n    function handleSubmitChangeEmail(values, actions) {\r\n        PortalUserAPI.changeEmail(values)\r\n            .then(payload => {\r\n                setPortalUserEmail(values.email);\r\n                actions.resetForm();\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                toggleError(true);\r\n                toggleSuccessMessage(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', changePrimaryEmailAddress: false }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitChangeEmail(values, actions);\r\n            }}\r\n        >\r\n            {({ touched, errors, isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    {showSuccessMessage ? (\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <Alert className={'p-1 m-1 text-success'} variant={'success'}>\r\n                                    Inlog e-mail is succesvol gewijzigd!\r\n                                </Alert>\r\n                            </Col>\r\n                        </Row>\r\n                    ) : null}\r\n                    {showError ? (\r\n                        <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                            Er bestaat al een account met het e-mailadres dat je hebt ingevuld. Je kunt met dit\r\n                            e-mailadres inloggen als bestaand contact. Wil je een nieuw account aanmaken? Gebruik dan\r\n                            alsjeblieft een ander e-mailadres.\r\n                        </Alert>\r\n                    ) : null}\r\n\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <FormLabel className={'field-label'}>Huidig e-mailadres</FormLabel>\r\n                            <TextBlock>{portalUserEmail}</TextBlock>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Form.Label className={'field-label pt-1'}>Nieuw e-mailadres</Form.Label>\r\n                            <Field\r\n                                name=\"email\"\r\n                                render={({ field }) => (\r\n                                    <InputText field={field} errors={errors} touched={touched} id=\"email\" />\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Field\r\n                                name=\"changePrimaryEmailAddress\"\r\n                                render={({ field }) => (\r\n                                    <label className=\"w-checkbox checkbox-fld\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            {...field}\r\n                                            id=\"change-primary-email-address\"\r\n                                            checked={field.value}\r\n                                            className=\"w-checkbox-input checkbox\"\r\n                                        />\r\n                                        <span\r\n                                            htmlFor=\"change-primary-email-address\"\r\n                                            className=\"checkbox-label w-form-label\"\r\n                                        >\r\n                                            Wijziging ook doorvoeren op huidig correspondentie e-mailadres?\r\n                                        </span>\r\n                                    </label>\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={6}>\r\n                            <ButtonText\r\n                                buttonText={'Wijzig e-mailadres'}\r\n                                size=\"sm\"\r\n                                type={'submit'}\r\n                                loading={isSubmitting}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default ChangeAccountEmail;\r\n","import React, { useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport PortalUserAPI from '../../../api/portal-user/PortalUserAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(10, 'Minimum van ${min} verplicht')\r\n        .matches(/([0-9])/, 'Minimaal 1 cijfer is verplicht')\r\n        .matches(/([A-Z])/, 'Minimaal 1 hoofdletter is verplicht')\r\n        .required('Verplicht'),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Wachtwoorden moeten gelijk zijn')\r\n        .required('Verplicht'),\r\n});\r\n\r\nfunction ChangeAccountPassword() {\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const [showError, toggleError] = useState(false);\r\n\r\n    function handleSubmitChangePassword(values, actions) {\r\n        PortalUserAPI.changePassword(values)\r\n            .then(payload => {\r\n                actions.resetForm();\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                toggleError(true);\r\n                toggleSuccessMessage(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ password: '', passwordConfirmation: '' }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitChangePassword(values, actions);\r\n            }}\r\n        >\r\n            {({ touched, errors, isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    {showSuccessMessage ? (\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <Alert className={'p-1 m-1 text-success'} variant={'success'}>\r\n                                    Wachtwoord is succesvol gewijzigd!\r\n                                </Alert>\r\n                            </Col>\r\n                        </Row>\r\n                    ) : null}\r\n                    {showError ? (\r\n                        <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                            Fout bij wijzigen wachtwoord!\r\n                        </Alert>\r\n                    ) : null}\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Form.Label className={'field-label'}>Nieuw wachtwoord</Form.Label>\r\n                            <Field\r\n                                name=\"password\"\r\n                                render={({ field }) => (\r\n                                    <InputText\r\n                                        field={field}\r\n                                        id=\"password\"\r\n                                        className={field.value ? 'content numeric-password' : 'content'}\r\n                                        placeholder={'Nieuw wachtwoord'}\r\n                                        errors={errors}\r\n                                        touched={touched}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Form.Label className={'field-label mt-0'}>Herhaal nieuw wachtwoord</Form.Label>\r\n                            <Field\r\n                                name=\"passwordConfirmation\"\r\n                                render={({ field }) => (\r\n                                    <InputText\r\n                                        field={field}\r\n                                        id=\"passwordConfirmation\"\r\n                                        className={field.value ? 'content numeric-password' : 'content'}\r\n                                        placeholder={'Herhaal nieuw wachtwoord'}\r\n                                        errors={errors}\r\n                                        touched={touched}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={6}>\r\n                            <ButtonText\r\n                                buttonText={'Wijzig wachtwoord'}\r\n                                size=\"sm\"\r\n                                type={'submit'}\r\n                                loading={isSubmitting}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default ChangeAccountPassword;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ChangeAccountEmail from './Email';\r\nimport ChangeAccountPassword from './Password';\r\n\r\nfunction ChangeAccount() {\r\n    return (\r\n        <Container className={'content-section'}>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"content-heading\">Wijzig inloggegevens</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} md={6} className={'mb-5'}>\r\n                    <h3 className={'h3'}>Wijzig inlog e-mailadres</h3>\r\n\r\n                    <ChangeAccountEmail />\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <h3 className={'h3'}>Wijzig wachtwoord</h3>\r\n\r\n                    <ChangeAccountPassword />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChangeAccount;\r\n","import React, { useEffect, useReducer, useContext, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport { PortalUserContext } from '../../../context/PortalUserContext';\r\n\r\nconst INITIAL_STATE = {\r\n    result: [],\r\n    isLoading: true,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'updateIsLoading':\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            };\r\n        case 'updateResult':\r\n            return {\r\n                ...state,\r\n                result: action.payload,\r\n            };\r\n        default:\r\n            return INITIAL_STATE;\r\n    }\r\n};\r\n\r\nfunction AboutUs() {\r\n    const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\r\n    const { currentSelectedContact } = useContext(PortalUserContext);\r\n    const [hasSingleRelatedAdministration, setHasSingleRelatedAdministration] = useState(false);\r\n\r\n    useEffect(\r\n        function() {\r\n            if (currentSelectedContact.id) {\r\n                if (currentSelectedContact.singleRelatedAdministration) {\r\n                    setIsLoading(false);\r\n                    setHasSingleRelatedAdministration(true);\r\n                } else {\r\n                    ContactAPI.fetchContactRelatedAdministrations(currentSelectedContact.id)\r\n                        .then(payload => {\r\n                            dispatch({\r\n                                type: 'updateResult',\r\n                                payload: payload.data.data,\r\n                            });\r\n                            setIsLoading(false);\r\n                        })\r\n                        .catch(() => {\r\n                            alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                            setIsLoading(false);\r\n                        });\r\n                }\r\n            }\r\n        },\r\n        [currentSelectedContact.id]\r\n    );\r\n\r\n    function setIsLoading(isLoading) {\r\n        dispatch({\r\n            type: 'updateIsLoading',\r\n            payload: isLoading,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {hasSingleRelatedAdministration ? (\r\n                <Redirect to={`/over-ons-organisatie/${currentSelectedContact.singleRelatedAdministration}`} />\r\n            ) : (\r\n                <Container className={'content-section'}>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">\r\n                                Overzicht organisaties waar <strong>{currentSelectedContact.fullNameFnf}</strong> een\r\n                                relatie mee heeft.\r\n                            </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    {state.isLoading ? (\r\n                        <Row>\r\n                            <Col>\r\n                                <LoadingView />\r\n                            </Col>\r\n                        </Row>\r\n                    ) : state.result.length === 0 ? (\r\n                        <Row>\r\n                            <Col>Geen informatie organisaties beschikbaar waar contact een relatie mee heeft.</Col>\r\n                        </Row>\r\n                    ) : (\r\n                        <>\r\n                            <Row>\r\n                                <Col>\r\n                                    <p>Klik op de organisatie voor meer details.</p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Table responsive>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Naam</th>\r\n                                        <th>Adres</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {state.result.map(item => (\r\n                                        <tr key={item.id}>\r\n                                            <td>\r\n                                                <Link to={`/over-ons-organisatie/${item.id}`}>{item.name}</Link>\r\n                                            </td>\r\n                                            <td>\r\n                                                {item.address}, {item.city}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        </>\r\n                    )}\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AboutUs;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nfunction RegistrationDetailsTitle({ contactName, projectName, administrationName }) {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <h1 className=\"content-heading\">\r\n                    Deelname van {contactName} in de {projectName}\r\n                </h1>\r\n                <div className=\"content-subheading\">Organisatie {administrationName}</div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default RegistrationDetailsTitle;\r\n","import moneyPresenter from './MoneyPresenter';\r\nimport moment from 'moment';\r\n\r\nexport default field => {\r\n    switch (field.type) {\r\n        case 'date':\r\n            return field.value ? moment(field.value).format('L') : '';\r\n        case 'decimal':\r\n            return field.value\r\n                ? field.value.toLocaleString('nl', {\r\n                      minimumFractionDigits: 2,\r\n                      maximumFractionDigits: 2,\r\n                  })\r\n                : '';\r\n        case 'money':\r\n            return moneyPresenter(field.value);\r\n        case 'string':\r\n        case 'integer':\r\n        default:\r\n            return field.value;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport valueBasedOnTypePresenter from '../../../../helpers/ValueBasedOnTypePresenter';\r\n\r\nfunction RegistrationDetailsProjectTable({ fields }) {\r\n    if (!fields || fields.length === 0) return <p>Geen projectdetails bekend</p>;\r\n\r\n    return (\r\n        <Table>\r\n            <tbody>\r\n                {fields.map((field, index) => (\r\n                    <tr key={index}>\r\n                        <td>\r\n                            <strong>{field.label}</strong>\r\n                        </td>\r\n                        <td>{valueBasedOnTypePresenter(field)}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n}\r\n\r\nexport default RegistrationDetailsProjectTable;\r\n","export default field => {\r\n    switch (field.type) {\r\n        case 'date':\r\n        case 'string':\r\n            return 'text-left';\r\n        case 'decimal':\r\n        case 'money':\r\n        case 'integer':\r\n            return 'text-right';\r\n        default:\r\n            return 'text-left';\r\n    }\r\n};\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport valueBasedOnTypePresenter from '../../../../helpers/ValueBasedOnTypePresenter';\r\nimport classNameBasedOnTypePresenter from '../../../../helpers/classNameBasedOnTypePresenter';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction RegistrationDetailsMutationTable({ participantMutations }) {\r\n    if (!participantMutations || participantMutations.length === 0) return <p>Geen mutaties bekend</p>;\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <div className=\"content-subheading\">Mutaties</div>\r\n                </Col>\r\n            </Row>\r\n            <Table responsive={true}>\r\n                <thead>\r\n                    <tr>\r\n                        {participantMutations[0].fields.map((field, index) => (\r\n                            <th key={index}>{field.label}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {participantMutations.map((participantMutation, index) => (\r\n                        <tr key={index}>\r\n                            {participantMutation.fields.map((field, index) => (\r\n                                <td className={classNameBasedOnTypePresenter(field)} key={index}>\r\n                                    {valueBasedOnTypePresenter(field)}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RegistrationDetailsMutationTable;\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { FaFileDownload } from 'react-icons/all';\r\nimport fileDownload from 'js-file-download';\r\nimport ParticipantProjectAPI from '../../../../api/participant-project/ParticipantProjectAPI';\r\n\r\nfunction RegistrationDetailsDocumentTable({ participantId, documents }) {\r\n    function downloadFile(e, id, filename) {\r\n        e.preventDefault();\r\n\r\n        ParticipantProjectAPI.participantDocumentDownload(participantId, id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, filename);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    if (\r\n        (documents && documents.relatedDocumentsOnPortal && documents.relatedDocumentsOnPortal.length !== 0) ||\r\n        (documents &&\r\n            documents.relatedDocumentsProjectOnPortal &&\r\n            documents.relatedDocumentsProjectOnPortal.length !== 0)\r\n    ) {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"content-subheading\">Documenten</div>\r\n                    </Col>\r\n                </Row>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Naam</th>\r\n                            <th>Omschrijving</th>\r\n                            <th>Downloaden</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {documents &&\r\n                    documents.relatedDocumentsOnPortal &&\r\n                    documents.relatedDocumentsOnPortal.length !== 0 ? (\r\n                        <tbody>\r\n                            {documents.relatedDocumentsOnPortal.map(item => (\r\n                                <tr key={item.id}>\r\n                                    <td>{item.filename}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td>\r\n                                        <a href=\"#\" onClick={e => downloadFile(e, item.id, item.filename)}>\r\n                                            <FaFileDownload /> downloaden\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : null}\r\n                    {documents &&\r\n                    documents.relatedDocumentsProjectOnPortal &&\r\n                    documents.relatedDocumentsProjectOnPortal.length !== 0 ? (\r\n                        <tbody>\r\n                            {documents.relatedDocumentsProjectOnPortal.map(item => (\r\n                                <tr key={item.id}>\r\n                                    <td>{item.filename}</td>\r\n                                    <td>{item.description}</td>\r\n                                    <td>\r\n                                        <a href=\"#\" onClick={e => downloadFile(e, item.id, item.filename)}>\r\n                                            <FaFileDownload /> downloaden\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    ) : null}\r\n                </Table>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default RegistrationDetailsDocumentTable;\r\n","import React, { useEffect, useReducer, useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ParticipantProjectAPI from '../../../api/participant-project/ParticipantProjectAPI';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport RegistrationDetailsTitle from './Title';\r\nimport RegistrationDetailsProjectTable from './project-table';\r\nimport RegistrationDetailsMutationTable from './mutation-table';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ThemeSettingsContext } from '../../../context/ThemeSettingsContext';\r\nimport { PortalUserContext } from '../../../context/PortalUserContext';\r\nimport Col from 'react-bootstrap/Col';\r\nimport RegistrationDetailsDocumentTable from './document-table';\r\n\r\nconst INITIAL_STATE = {\r\n    result: [],\r\n    isLoading: true,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'updateIsLoading':\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            };\r\n        case 'updateResult':\r\n            return {\r\n                ...state,\r\n                result: action.payload,\r\n            };\r\n        default:\r\n            return INITIAL_STATE;\r\n    }\r\n};\r\n\r\nfunction RegistrationDetails({ match: { params } }) {\r\n    const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\r\n    const { setCurrentThemeSettings } = useContext(ThemeSettingsContext);\r\n    const { currentSelectedContact } = useContext(PortalUserContext);\r\n\r\n    useEffect(() => {\r\n        if (currentSelectedContact.id) {\r\n            (function() {\r\n                ParticipantProjectAPI.show(params.id)\r\n                    .then(payload => {\r\n                        dispatch({\r\n                            type: 'updateResult',\r\n                            payload: payload.data.data,\r\n                        });\r\n                        setCurrentThemeSettings(payload.data.data.basicInformation.portalSettingsLayoutAssigned);\r\n                        setIsLoading(false);\r\n                    })\r\n                    .catch(() => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setIsLoading(false);\r\n                    });\r\n            })();\r\n        }\r\n    }, [params.id, currentSelectedContact]);\r\n\r\n    function setIsLoading(isLoading) {\r\n        dispatch({\r\n            type: 'updateIsLoading',\r\n            payload: isLoading,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {state.isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        <ButtonGroup aria-label=\"current-participations\" className=\"w-button-group-left\">\r\n                            <Link to={`/inschrijvingen-projecten`}>\r\n                                <Button className={'w-button'} size=\"sm\">\r\n                                    Huidige deelnames\r\n                                </Button>\r\n                            </Link>\r\n                        </ButtonGroup>\r\n                    </Row>\r\n                    <RegistrationDetailsTitle {...state.result.basicInformation} />\r\n                    {state.result.length === 0 ? (\r\n                        <Row>\r\n                            <Col>Geen huidige deelname aanwezig.</Col>\r\n                        </Row>\r\n                    ) : (\r\n                        <>\r\n                            <RegistrationDetailsProjectTable fields={state.result.fields} />\r\n                            <RegistrationDetailsMutationTable\r\n                                participantMutations={state.result.participantMutations}\r\n                            />\r\n                            <RegistrationDetailsDocumentTable\r\n                                participantId={params.id}\r\n                                documents={state.result.documents}\r\n                            />\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default RegistrationDetails;\r\n","import React, { useEffect, useReducer, useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport { PortalUserContext } from '../../../context/PortalUserContext';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Table from 'react-bootstrap/Table';\r\nimport { FaFileDownload } from 'react-icons/all';\r\nimport fileDownload from 'js-file-download';\r\n\r\nconst INITIAL_STATE = {\r\n    result: [],\r\n    isLoading: true,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'updateIsLoading':\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            };\r\n        case 'updateResult':\r\n            return {\r\n                ...state,\r\n                result: action.payload,\r\n            };\r\n        default:\r\n            return INITIAL_STATE;\r\n    }\r\n};\r\n\r\nfunction FinancialOverviewDocuments() {\r\n    const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\r\n    const { currentSelectedContact } = useContext(PortalUserContext);\r\n\r\n    useEffect(\r\n        function() {\r\n            if (currentSelectedContact.id) {\r\n                ContactAPI.fetchContactFinancialOverviewDocuments(currentSelectedContact.id)\r\n                    .then(payload => {\r\n                        dispatch({\r\n                            type: 'updateResult',\r\n                            payload: payload.data.data,\r\n                        });\r\n                        setIsLoading(false);\r\n                    })\r\n                    .catch(() => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setIsLoading(false);\r\n                    });\r\n            }\r\n        },\r\n        [currentSelectedContact.id]\r\n    );\r\n\r\n    function setIsLoading(isLoading) {\r\n        dispatch({\r\n            type: 'updateIsLoading',\r\n            payload: isLoading,\r\n        });\r\n    }\r\n\r\n    function downloadFile(e, id) {\r\n        e.preventDefault();\r\n\r\n        ContactAPI.financialOverviewContactDownload(id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, payload.headers['x-filename']);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setIsLoading(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {state.isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading mt-0\">Waardestaat documenten</h1>\r\n                        </Col>\r\n                    </Row>\r\n                    {state.result.length === 0 ? (\r\n                        <Row>\r\n                            <Col>Geen waardestaat documenten aanwezig om te tonen.</Col>\r\n                        </Row>\r\n                    ) : (\r\n                        <Table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Naam</th>\r\n                                    <th>Omschrijving</th>\r\n                                    <th>Downloaden</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {state.result.map(item => (\r\n                                    <tr key={item.id}>\r\n                                        <td>{item.name}</td>\r\n                                        <td>{item.description}</td>\r\n                                        <td>\r\n                                            <a href=\"#\" onClick={e => downloadFile(e, item.id)}>\r\n                                                <FaFileDownload /> downloaden\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default FinancialOverviewDocuments;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n    fetchAdministration: function(id) {\r\n        const requestUrl = `/jory/administration/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'name',\r\n                        'address',\r\n                        'postalCode',\r\n                        'city',\r\n                        'kvkNumber',\r\n                        'iBAN',\r\n                        'ibanAttn',\r\n                        'btwNumber',\r\n                        'website',\r\n                        'email',\r\n                    ],\r\n                    rlt: {\r\n                        country: { fld: ['name'] },\r\n                        documentsOnPortal: { fld: ['id', 'filename', 'description'] },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n    documentDownload: function(administrationId, id) {\r\n        const requestUrl = `/administration/${administrationId}/document/${id}/download`;\r\n\r\n        return axiosInstance.get(requestUrl, { responseType: 'blob' });\r\n    },\r\n};\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { FaFileDownload } from 'react-icons/all';\r\nimport fileDownload from 'js-file-download';\r\nimport AdministrationAPI from '../../../../api/administration/AdministrationAPI';\r\n\r\nfunction AboutUsDocumentTable({ administrationId, documents }) {\r\n    function downloadFile(e, id, filename) {\r\n        e.preventDefault();\r\n\r\n        AdministrationAPI.documentDownload(administrationId, id)\r\n            .then(payload => {\r\n                fileDownload(payload.data, filename);\r\n            })\r\n            .catch(() => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    if (documents && documents.length !== 0) {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"content-subheading\">Documenten</div>\r\n                    </Col>\r\n                </Row>\r\n                <Table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Naam</th>\r\n                            <th>Omschrijving</th>\r\n                            <th>Downloaden</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {documents.map(item => (\r\n                            <tr key={item.id}>\r\n                                <td>{item.filename}</td>\r\n                                <td>{item.description}</td>\r\n                                <td>\r\n                                    <a href=\"#\" onClick={e => downloadFile(e, item.id, item.filename)}>\r\n                                        <FaFileDownload /> downloaden\r\n                                    </a>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default AboutUsDocumentTable;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport { PortalUserContext } from '../../../context/PortalUserContext';\r\nimport { Card, Table } from 'react-bootstrap';\r\nimport AdministrationAPI from '../../../api/administration/AdministrationAPI';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport AboutUsDocumentTable from './document-table';\r\n\r\nfunction AboutUsAdministration({ match }) {\r\n    const { currentSelectedContact } = useContext(PortalUserContext);\r\n    const [administration, setAdministration] = useState({});\r\n    const [websiteLink, setWebsiteLink] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (currentSelectedContact.id) {\r\n            (function callFetchAdministration() {\r\n                setLoading(true);\r\n                // console.log(match);\r\n                AdministrationAPI.fetchAdministration(match.params.id)\r\n                    .then(payload => {\r\n                        setAdministration(payload.data.data);\r\n                        setLoading(false);\r\n                    })\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setLoading(false);\r\n                    });\r\n            })();\r\n        }\r\n    }, [match, currentSelectedContact]);\r\n\r\n    useEffect(() => {\r\n        if (administration.id && administration.website) {\r\n            if (\r\n                administration.website.toLowerCase().startsWith('http') ||\r\n                administration.website.toLowerCase().startsWith('https')\r\n            ) {\r\n                setWebsiteLink(administration.website);\r\n            } else {\r\n                setWebsiteLink('https://' + administration.website);\r\n            }\r\n        }\r\n    }, [administration]);\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        <ButtonGroup aria-label=\"about-us\" className=\"w-button-group-left\">\r\n                            <Link to={`/over-ons`}>\r\n                                <Button className={'w-button'} size=\"sm\">\r\n                                    Over ons\r\n                                </Button>\r\n                            </Link>\r\n                        </ButtonGroup>\r\n                    </Row>\r\n                    <Row className={'justify-content-center align-content-center flex-wrap'}>\r\n                        <Col xs={12} lg={6} className={'mb-3'}>\r\n                            <Card>\r\n                                <Card.Header className={'card-header_title'}>\r\n                                    Informatie over {administration.name}\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Table responsive>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>Naam</strong>\r\n                                                </td>\r\n                                                <td>{administration.name}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>Adres</strong>\r\n                                                </td>\r\n                                                <td>{administration.address}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>Postcode / Plaats</strong>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {administration.postalCode} {administration.city}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>Kvk</strong>\r\n                                                </td>\r\n                                                <td>{administration.kvkNumber}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>Website</strong>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {administration.website && (\r\n                                                        <a href={websiteLink} target=\"_blank\">\r\n                                                            <button className=\"w-button btn btn-primary btn-sm\">\r\n                                                                {administration.website}\r\n                                                            </button>\r\n                                                        </a>\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>E-mail</strong>\r\n                                                </td>\r\n                                                <td>{administration.email}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>IBAN</strong>\r\n                                                </td>\r\n                                                <td>{administration.iBAN}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>IBAN t.n.v.</strong>\r\n                                                </td>\r\n                                                <td>{administration.ibanAttn}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <strong>BTW nummer</strong>\r\n                                                </td>\r\n                                                <td>{administration.btwNumber}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <AboutUsDocumentTable\r\n                        administrationId={match.params.id}\r\n                        documents={administration.documentsOnPortal}\r\n                    />\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AboutUsAdministration;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    fetchByCode: code => {\r\n        const requestUrl = `/jory/participant-mutation`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    flt: {\r\n                        f: 'code',\r\n                        d: code,\r\n                    },\r\n                    fld: ['econobisPaymentLink', 'isPaidByMollie'],\r\n                    rlt: {\r\n                        participation: {\r\n                            rlt: {\r\n                                project: {\r\n                                    fld: ['name', 'textRegistrationFinished'],\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ParticipantMutationAPI from '../../../api/participant-mutation/ParticipantMutationAPI';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport {PortalUserConsumer} from '../../../context/PortalUserContext';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\nfunction ProjectMollieRedirect({match, currentSelectedContact}) {\r\n    const [participantMutation, setParticipantMutation] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    const handlePaymentRetry = () => {\r\n        window.location.href = participantMutation.econobisPaymentLink;\r\n    }\r\n\r\n    useEffect(() => {\r\n        (function fetchContactAndProject() {\r\n            setLoading(true);\r\n\r\n            axios\r\n                .all([\r\n                    ParticipantMutationAPI.fetchByCode(match.params.code),\r\n                ])\r\n                .then(\r\n                    axios.spread((payloadParticipantMutation) => {\r\n                        if(payloadParticipantMutation.data.data.length !== 1){\r\n                            alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                            setLoading(false);\r\n                            return;\r\n                        }\r\n\r\n                        setParticipantMutation(payloadParticipantMutation.data.data[0]);\r\n                        setLoading(false);\r\n                    })\r\n                )\r\n                .catch(error => {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                    setLoading(false);\r\n                });\r\n        })();\r\n    }, [match]);\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView/>\r\n            ) : (\r\n                <>\r\n                    <Row className={'mb-4'}>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">\r\n                                {\r\n                                    participantMutation.isPaidByMollie ? (\r\n                                        <>Ingeschreven voor\r\n                                            project <strong>{participantMutation.participation.project.name}</strong></>\r\n                                    ) : (\r\n                                        <>Betaling voor\r\n                                            project <strong>{participantMutation.participation.project.name}</strong> nog\r\n                                            niet gelukt.</>\r\n                                    )\r\n                                }\r\n\r\n                            </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={10}>\r\n                            {participantMutation.isPaidByMollie ? (\r\n                                <>\r\n                                    <p>\r\n                                        { participantMutation.participation.project.textRegistrationFinished.split('\\n').map((item, key) => {\r\n                                            return <span key={key}>{item}<br/></span>\r\n                                        }) }\r\n                                    </p>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <p>\r\n                                        Uw inschrijving kon nog niet worden afgerond doordat de betaling niet is gelukt,\r\n                                        gebruik onderstaande betaal button om de betaling alsnog uit te voeren.</p>\r\n                                </>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={10}>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Link to={`/inschrijvingen-projecten`}>\r\n                                    <Button className={'w-button'} size=\"sm\">\r\n                                        Naar mijn huidige deelnames\r\n                                    </Button>\r\n                                </Link>\r\n                                {!participantMutation.isPaidByMollie && (\r\n                                    <Button className={'w-button'} size=\"sm\" onClick={handlePaymentRetry}>\r\n                                        Betalen\r\n                                    </Button>\r\n                                )}\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function ProjectMollieRedirectWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({currentSelectedContact}) => (\r\n                <ProjectMollieRedirect {...props} currentSelectedContact={currentSelectedContact}/>\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    fetchAll: function() {\r\n        return axiosInstance.get('me/quotation-request');\r\n    },\r\n\r\n    fetchById: function(id) {\r\n        return axiosInstance.get('quotation-request/' + id);\r\n    },\r\n\r\n    update: function(quotationRequest) {\r\n        return axiosInstance.post('quotation-request/' + quotationRequest.id, quotationRequest);\r\n    },\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport { PortalUserConsumer } from '../../../context/PortalUserContext';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport QuotationRequestAPI from '../../../api/quotation-request/QuotationRequestAPI';\r\n\r\nfunction Inspectlist(props) {\r\n    const [quotationRequestsArray, setQuotationRequestsArray] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        QuotationRequestAPI.fetchAll(props.user.id).then(response => {\r\n            setQuotationRequestsArray(response.data);\r\n\r\n            setIsLoading(false);\r\n        });\r\n    }, [props.user]);\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"content-heading\">Overzicht schouwingen</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {isLoading ? (\r\n                        <LoadingView />\r\n                    ) : quotationRequestsArray.length === 0 ? (\r\n                        'Geen schouwingen beschikbaar.'\r\n                    ) : (\r\n                        <Table responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Naam</th>\r\n                                    <th>Adres</th>\r\n                                    <th>Status</th>\r\n                                    <th>Datum afspraak</th>\r\n                                    <th>Datum opname</th>\r\n                                    <th>Datum akkoord extern</th>\r\n                                    <th>Datum offerte</th>\r\n                                    <th>Akkoord projectleider</th>\r\n                                    <th>Akkoord bewoner</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {quotationRequestsArray.map(quotationRequest => (\r\n                                    <tr key={quotationRequest.id}>\r\n                                        <td>{quotationRequest.opportunity.intake.contact.fullName}</td>\r\n                                        <td>{quotationRequest.opportunity.intake.address.streetPostalCodeCity}</td>\r\n                                        <td>{quotationRequest.opportunity.status.name}</td>\r\n                                        <td>\r\n                                            {quotationRequest.datePlanned\r\n                                                ? moment(quotationRequest.datePlanned).format('L HH:mm')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            {quotationRequest.dateRecorded\r\n                                                ? moment(quotationRequest.dateRecorded).format('L')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            {quotationRequest.dateApprovedExternal\r\n                                                ? moment(quotationRequest.dateApprovedExternal).format('L')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            {quotationRequest.dateReleased\r\n                                                ? moment(quotationRequest.dateReleased).format('L')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            {quotationRequest.dateApprovedProjectManager\r\n                                                ? moment(quotationRequest.dateApprovedProjectManager).format('L')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            {quotationRequest.dateApprovedClient\r\n                                                ? moment(quotationRequest.dateApprovedClient).format('L')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            <Link to={`/schouwen/${quotationRequest.id}`}>Openen</Link>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function InspectlistWithContext(props) {\r\n    return <PortalUserConsumer>{({ user }) => <Inspectlist {...props} user={user} />}</PortalUserConsumer>;\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport * as Yup from 'yup';\r\nimport QuotationRequestAPI from '../../../api/quotation-request/QuotationRequestAPI';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport InputText from '../../../components/form/InputText';\r\nimport moment from 'moment';\r\nimport InputTextDate from '../../../components/form/InputTextDate';\r\n\r\nfunction InspectDetails({ match, history }) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [initialQuotationRequest, setInitialQuotationRequest] = useState({});\r\n\r\n    const validationSchema = Yup.object().shape({});\r\n\r\n    const handleSubmit = (values, actions) => {\r\n        QuotationRequestAPI.update({\r\n            id: match.params.id,\r\n            dateRecorded: values.dateRecorded,\r\n            datePlanned: values.datePlanned,\r\n            dateApprovedExternal: values.dateApprovedExternal,\r\n            dateReleased: values.dateReleased,\r\n        }).then(response => {\r\n            history.push('/schouwen');\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        QuotationRequestAPI.fetchById(match.params.id).then(response => {\r\n            setInitialQuotationRequest(response.data);\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    <div>\r\n                        <Formik\r\n                            initialValues={initialQuotationRequest}\r\n                            enableReinitialize={true}\r\n                            validationSchema={validationSchema}\r\n                            onSubmit={handleSubmit}\r\n                            render={({\r\n                                errors,\r\n                                touched,\r\n                                setFieldValue,\r\n                                isSubmitting,\r\n                                status,\r\n                                values,\r\n                                handleSubmit,\r\n                            }) => {\r\n                                return (\r\n                                    <Form>\r\n                                        <Row>\r\n                                            <Col xs={12} md={12}>\r\n                                                <FormLabel className={'field-label'}>Naam</FormLabel>\r\n                                                <Row>\r\n                                                    <Col xs={12} sm={8} md={6}>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className={`text-input w-input content`}\r\n                                                            value={\r\n                                                                initialQuotationRequest.opportunity.intake.contact\r\n                                                                    .fullName\r\n                                                            }\r\n                                                            readOnly={true}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={12} md={12}>\r\n                                                <FormLabel className={'field-label'}>Adres</FormLabel>\r\n                                                <Row>\r\n                                                    <Col xs={12} sm={8} md={6}>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className={`text-input w-input content`}\r\n                                                            value={\r\n                                                                initialQuotationRequest.opportunity.intake.address\r\n                                                                    .streetPostalCodeCity\r\n                                                            }\r\n                                                            readOnly={true}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={12} md={12}>\r\n                                                <FormLabel className={'field-label'}>Telefoon</FormLabel>\r\n                                                <Row>\r\n                                                    <Col xs={12} sm={8} md={6}>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className={`text-input w-input content`}\r\n                                                            value={\r\n                                                                initialQuotationRequest.opportunity.intake.contact\r\n                                                                    .primaryphoneNumber\r\n                                                            }\r\n                                                            readOnly={true}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={12} md={12}>\r\n                                                <FormLabel className={'field-label'}>Email</FormLabel>\r\n                                                <Row>\r\n                                                    <Col xs={12} sm={8} md={6}>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className={`text-input w-input content`}\r\n                                                            value={\r\n                                                                initialQuotationRequest.opportunity.intake.contact\r\n                                                                    .primaryEmailAddress\r\n                                                            }\r\n                                                            readOnly={true}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={12} md={12}>\r\n                                                <FormLabel className={'field-label'}>Status</FormLabel>\r\n                                                <Row>\r\n                                                    <Col xs={12} sm={8} md={6}>\r\n                                                        <input\r\n                                                            type=\"text\"\r\n                                                            className={`text-input w-input content`}\r\n                                                            value={initialQuotationRequest.opportunity.status.name}\r\n                                                            readOnly={true}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={12} md={12}>\r\n                                                <FormLabel htmlFor=\"date_planned\" className={'field-label'}>\r\n                                                    Datum afspraak\r\n                                                </FormLabel>\r\n                                                <Row>\r\n                                                    <Col xs={12} sm={8} md={6}>\r\n                                                        <Field\r\n                                                            name=\"datePlanned\"\r\n                                                            render={({ field }) => (\r\n                                                                <InputTextDate\r\n                                                                    name=\"datePlanned\"\r\n                                                                    field={field}\r\n                                                                    type=\"datetime-local\"\r\n                                                                    errors={errors}\r\n                                                                    touched={touched}\r\n                                                                    onChangeAction={setFieldValue}\r\n                                                                    id=\"date_planned\"\r\n                                                                    placeholder={'Datum afspraak'}\r\n                                                                />\r\n                                                            )}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={12} md={12}>\r\n                                                <FormLabel htmlFor=\"date_recorded\" className={'field-label'}>\r\n                                                    Datum opname\r\n                                                </FormLabel>\r\n                                                <Row>\r\n                                                    <Col xs={12} sm={8} md={6}>\r\n                                                        <Field\r\n                                                            name=\"dateRecorded\"\r\n                                                            render={({ field }) => (\r\n                                                                <InputText\r\n                                                                    name=\"datePlanned\"\r\n                                                                    field={field}\r\n                                                                    type=\"date\"\r\n                                                                    errors={errors}\r\n                                                                    touched={touched}\r\n                                                                    onChangeAction={setFieldValue}\r\n                                                                    id=\"date_recorded\"\r\n                                                                    placeholder={'Datum opname'}\r\n                                                                />\r\n                                                            )}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={12} md={12}>\r\n                                                <FormLabel htmlFor=\"date_approved_external\" className={'field-label'}>\r\n                                                    Datum akkoord extern\r\n                                                </FormLabel>\r\n                                                <Row>\r\n                                                    <Col xs={12} sm={8} md={6}>\r\n                                                        <Field\r\n                                                            name=\"dateApprovedExternal\"\r\n                                                            render={({ field }) => (\r\n                                                                <InputText\r\n                                                                    name=\"dateApprovedExternal\"\r\n                                                                    field={field}\r\n                                                                    type=\"date\"\r\n                                                                    errors={errors}\r\n                                                                    touched={touched}\r\n                                                                    onChangeAction={setFieldValue}\r\n                                                                    id=\"date_approved_external\"\r\n                                                                    placeholder={'Datum akkoord extern'}\r\n                                                                />\r\n                                                            )}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={12} md={12}>\r\n                                                <FormLabel htmlFor=\"date_released\" className={'field-label'}>\r\n                                                    Datum offerte\r\n                                                </FormLabel>\r\n                                                <Row>\r\n                                                    <Col xs={12} sm={8} md={6}>\r\n                                                        <Field\r\n                                                            name=\"dateReleased\"\r\n                                                            render={({ field }) => (\r\n                                                                <InputText\r\n                                                                    name=\"dateReleased\"\r\n                                                                    field={field}\r\n                                                                    type=\"date\"\r\n                                                                    errors={errors}\r\n                                                                    touched={touched}\r\n                                                                    onChangeAction={setFieldValue}\r\n                                                                    id=\"date_released\"\r\n                                                                    placeholder={'Datum offerte'}\r\n                                                                />\r\n                                                            )}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {initialQuotationRequest.opportunityAction.codeRef === 'subsidy-request' ? (\r\n                                            <>\r\n                                                <Row>\r\n                                                    <Col xs={12} md={12}>\r\n                                                        <FormLabel\r\n                                                            htmlFor=\"date_approved_project_manager\"\r\n                                                            className={'field-label'}\r\n                                                        >\r\n                                                            Datum akkoord projectleider\r\n                                                        </FormLabel>\r\n                                                        <Row>\r\n                                                            <Col xs={12} sm={8} md={6}>\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    className={`text-input w-input content`}\r\n                                                                    value={\r\n                                                                        initialQuotationRequest.dateApprovedProjectManager\r\n                                                                            ? moment(\r\n                                                                                  initialQuotationRequest.dateApprovedProjectManager\r\n                                                                              ).format('L')\r\n                                                                            : ''\r\n                                                                    }\r\n                                                                    readOnly={true}\r\n                                                                />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col xs={12} md={12}>\r\n                                                        <FormLabel\r\n                                                            htmlFor=\"date_approved_client\"\r\n                                                            className={'field-label'}\r\n                                                        >\r\n                                                            Datum akkoord bewoner\r\n                                                        </FormLabel>\r\n                                                        <Row>\r\n                                                            <Col xs={12} sm={8} md={6}>\r\n                                                                <input\r\n                                                                    type=\"text\"\r\n                                                                    className={`text-input w-input content`}\r\n                                                                    value={\r\n                                                                        initialQuotationRequest.dateApprovedClient\r\n                                                                            ? moment(\r\n                                                                                  initialQuotationRequest.dateApprovedClient\r\n                                                                              ).format('L')\r\n                                                                            : ''\r\n                                                                    }\r\n                                                                    readOnly={true}\r\n                                                                />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </>\r\n                                        ) : null}\r\n                                        <Row>\r\n                                            <Col xs={12} sm={8} md={6}>\r\n                                                <ButtonGroup className=\"float-right\">\r\n                                                    <Button\r\n                                                        variant={'outline-dark'}\r\n                                                        size=\"sm\"\r\n                                                        onClick={function() {\r\n                                                            history.push(`/schouwen`);\r\n                                                        }}\r\n                                                    >\r\n                                                        Annuleren\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        className={'w-button'}\r\n                                                        size=\"sm\"\r\n                                                        onClick={handleSubmit}\r\n                                                        disabled={isSubmitting}\r\n                                                    >\r\n                                                        {isSubmitting ? (\r\n                                                            <span>\r\n                                                                <ClipLoader color={'white'} size={14} />\r\n                                                                Bezig met opslaan\r\n                                                            </span>\r\n                                                        ) : (\r\n                                                            'Opslaan'\r\n                                                        )}\r\n                                                    </Button>\r\n                                                </ButtonGroup>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Form>\r\n                                );\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default InspectDetails;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Switch } from 'react-router-dom';\r\nimport ProtectedRoute from './route/ProtectedRoute';\r\nimport PublicRoute from './route/PublicRoute';\r\nimport { AuthProvider } from './context/AuthContext';\r\nimport { PortalUserProvider } from './context/PortalUserContext';\r\nimport Login from './container/authorization/login';\r\nimport Register from './container/authorization/register';\r\nimport Forgot from './container/authorization/forgot';\r\nimport Reset from './container/authorization/reset';\r\nimport Dashboard from './container/dashboard';\r\nimport ContactDetails from './container/contact-details';\r\nimport MyAreasOfInterest from './container/my-areas-of-interest';\r\nimport RegisterProject from './container/register';\r\nimport ProjectList from './container/project/list';\r\nimport ProjectDetails from './container/project/details';\r\nimport RegistrationList from './container/registration/list';\r\nimport NewAccount from './container/authorization/new-account';\r\nimport NewAccountSuccess from './container/authorization/new-account/NewAccountSuccess';\r\nimport ChangeAccount from './container/authorization/change-account';\r\nimport AboutUs from './container/about-us/list';\r\nimport RegistrationDetails from './container/registration/details';\r\nimport FinancialOverviewDocuments from './container/financial-overview-documents/list';\r\nimport { ThemeSettingsProvider } from './context/ThemeSettingsContext';\r\nimport AboutUsAdministration from './container/about-us/details';\r\nimport ProjectMollieRedirectWithContext from './container/register/mollie-redirect';\r\nimport CoachInspectList from './container/inspect/list';\r\nimport CoachInspectDetails from './container/inspect/details';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <AuthProvider>\r\n                <PortalUserProvider>\r\n                    <ThemeSettingsProvider>\r\n                        <Switch>\r\n                            <ProtectedRoute exact path=\"/\" component={Dashboard} />\r\n                            <ProtectedRoute path=\"/dashboard\" component={Dashboard} />\r\n                            <ProtectedRoute path=\"/gegevens\" component={ContactDetails} />\r\n                            <ProtectedRoute path=\"/mijn-interessegebieden\" component={MyAreasOfInterest} />\r\n                            <ProtectedRoute\r\n                                path=\"/inschrijven/mollie-resultaat/:code\"\r\n                                component={ProjectMollieRedirectWithContext}\r\n                            />\r\n                            <ProtectedRoute path=\"/inschrijven/:id\" component={RegisterProject} />\r\n                            <ProtectedRoute path=\"/inschrijven-projecten\" component={ProjectList} />\r\n                            <ProtectedRoute path=\"/inschrijvingen-projecten\" component={RegistrationList} />\r\n                            <ProtectedRoute path=\"/project-deelname/:id\" component={RegistrationDetails} />\r\n                            <ProtectedRoute path=\"/project/:id\" component={ProjectDetails} />\r\n                            <ProtectedRoute path=\"/waardestaat-documenten\" component={FinancialOverviewDocuments} />\r\n                            <ProtectedRoute path=\"/wijzig-inloggegevens\" component={ChangeAccount} />\r\n                            <ProtectedRoute path=\"/over-ons\" component={AboutUs} />\r\n                            <ProtectedRoute path=\"/over-ons-organisatie/:id\" component={AboutUsAdministration} />\r\n                            <ProtectedRoute path=\"/schouwen/:id\" component={CoachInspectDetails} />\r\n                            <ProtectedRoute path=\"/schouwen\" component={CoachInspectList} />\r\n                            <PublicRoute path=\"/login\" component={Login} />\r\n                            <PublicRoute path=\"/activeer-registratie/:registrationCode/:email\" component={Register} />\r\n                            <PublicRoute path=\"/wachtwoord-vergeten\" component={Forgot} />\r\n                            <PublicRoute path=\"/wachtwoord-wijzigen/:token/:email\" component={Reset} />\r\n                            <PublicRoute path=\"/nieuw-account\" component={NewAccount} />\r\n                            <PublicRoute path=\"/nieuw-account-succes\" component={NewAccountSuccess} />\r\n                        </Switch>\r\n                    </ThemeSettingsProvider>\r\n                </PortalUserProvider>\r\n            </AuthProvider>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/normalize.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-day-picker/lib/style.css';\r\nimport './css/webflow.css';\r\nimport './css/econobis.webflow.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'moment/locale/nl';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// Server data is set and can now removed\r\nvar serverDataScript = document.getElementById('server-data');\r\nserverDataScript.remove();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}