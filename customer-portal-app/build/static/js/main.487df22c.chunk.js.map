{"version":3,"sources":["context/AuthContext.js","context/PortalUserContext.js","components/layout/Header.js","api/default-setup/AxiosInstance.js","api/portal-user/PortalUserAPI.js","route/ProtectedRoute.js","route/PublicRoute.js","components/form/InputText.js","components/button/ButtonText.js","container/authorization/login/Form.js","api/auth/AuthAPI.js","api/portal-settings/PortalSettingsAPI.js","container/authorization/login/index.js","container/authorization/register/Form.js","container/authorization/register/index.js","container/authorization/forgot/Form.js","container/authorization/forgot/index.js","container/authorization/reset/Form.js","container/authorization/reset/index.js","api/contact/ContactAPI.js","helpers/RebaseContact.js","components/general/LoadingView.js","components/general/TextBlock.js","container/contact-details/default-form-personal/View.js","components/form/Select.js","data/Countries.js","data/EnergySuppliers.js","data/Titles.js","data/LastNamePrefixes.js","components/form/InputDate.js","container/contact-details/default-form-personal/Edit.js","helpers/ValidationSchemaPersonal.js","container/contact-details/Personal.js","container/contact-details/default-form-organisation/View.js","container/contact-details/default-form-organisation/Edit.js","helpers/ValidationSchemaOrganisation.js","container/contact-details/Organisation.js","container/contact-details/index.js","container/my-areas-of-interest/Form.js","container/my-areas-of-interest/index.js","api/project/ProjectAPI.js","helpers/MoneyPresenter.js","container/register/steps/StepOneLoan.js","container/register/steps/StepOneObligation.js","container/register/steps/StepOneCapital.js","container/register/steps/StepOnePcr.js","container/register/steps/StepTwo.js","container/register/steps/StepThree.js","components/general/ViewHtmlAsText.js","api/participant-project/ParticipantProjectAPI.js","container/register/steps/StepFour.js","container/register/steps/StepFive.js","container/register/steps/index.js","container/register/MasterForm.js","container/register/index.js","container/project/list/index.js","container/project/details/LoanDetails.js","container/project/details/ObligationDetails.js","container/project/details/CapitalDetails.js","container/project/details/PcrDetails.js","container/project/details/index.js","container/registration/list/index.js","container/authorization/new-account/NewAccountFormPersonal.js","container/authorization/new-account/NewAccountFormOrganisation.js","container/authorization/new-account/index.js","container/authorization/new-account/NewAccountSuccess.js","container/authorization/change-account/Email.js","container/authorization/change-account/Password.js","container/authorization/change-account/index.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","localStorageToken","localStorageLastActivity","AuthProvider","props","_useState","useState","window","localStorage","getItem","checkIfAuth","_useState2","Object","slicedToArray","isAuth","setAuth","react_default","a","createElement","Provider","value","login","payload","cbRedirect","token","access_token","setItem","moment","format","logout","removeItem","children","AuthConsumer","Consumer","PortalUserContext","user","updateUser","PortalUserProvider","setUser","_useState3","_useState4","currentSelectedContact","setCurrentContact","resetCurrentUserToDefault","PortalUserConsumer","withRouter","_ref","location","history","menuOpen","updateStateMenu","closeMenu","redirect","to","push","concat","ref","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","useOutsideAlerter","useRef","className","_ref2","fullName","Container_default","Row_default","Col_default","xs","Image_default","src","onClick","_ref3","_ref4","Dropdown_default","alignRight","Toggle","index_esm","Menu","Header","Item","disabled","react_router_dom","Divider","active","id","occupations","map","occupationContact","primaryContact","typeId","primary","occupation","occupationForPortal","key","BurgerMenu","right","width","isOpen","onStateChange","state","handleStateChange","customBurgerIcon","Fragment","pathname","BASE_URL","__SERVER_DATA__","base_url","axiosInstance","axios","create","baseURL","interceptors","request","use","config","lastActivity","add","hash","setTimeout","reload","checkTokenExpiration","AUTH_TOKEN","headers","Authorization","error","Promise","reject","PortalUserAPI","fetchPortalUserDetails","get","params","jory","fld","rlt","contact","fetchPortalUserEmail","changeEmail","values","post","changePassword","ProtectedRoute","Component","component","rest","objectWithoutProperties","then","data","catch","alert","layout_Header","react_router","assign","render","ProtectedRouteWithContext","ProtectedRoute_ProtectedRoute","PublicRoute","InputText","field","type","readOnly","placeholder","showErrorMessage","errors","touched","classNameErrorMessage","name","Boolean","defaultProps","ButtonText","buttonClassName","buttonText","onClickAction","loading","title","loadingSpinnerColor","Button_default","size","dist","color","validationSchema","Yup","shape","username","email","required","password","LoginForm","handleSubmit","formik_esm","initialValues","enableReinitialize","onSubmit","actions","setSubmitting","isSubmitting","form_InputText","button_ButtonText","AUTH_KEY","client_id","client_secret","client_key","grant_type","AuthAPI","newAccount","requestUrl","defaults","common","newAccountSuccess","loginCredentials","objectSpread","register","forgot","reset","PortalSettingsAPI","fetchPortalSettings","keys","fetchCooperativeName","fetchShowNewAtCooperativeLink","authorization_login","showError","toggleError","redirectToReferrer","toggleRedirect","from","_useState5","_useState6","cooperativeName","setCooperativeName","_useState7","_useState8","showNewAtCooperativeLink","setShowNewAtCooperativeLink","fluid","sm","md","lg","xl","alt","Form","Alert_default","variant","min","matches","passwordConfirmation","oneOf","RegisterForm","Register","match","showSuccessMessage","toggleSuccessMessage","registrationCode","decodeURIComponent","register_Form","password_confirmation","RegisterWithContext","register_Register","ForgotForm","Forgot","forgot_Form","ResetForm","Reset","reset_Form","ResetWithContext","reset_Reset","ContactAPI","fetchContact","person","organisation","emailAddresses","phoneNumbers","addresses","country","primaryContactEnergySupplier","energySupplier","flt","f","d","fetchContactWithParticipants","participations","project","projectType","updateContact","previewDocument","registerValues","contactId","projectId","RebaseContact","contactData","emptyAddress","street","number","addition","postalCode","city","countryId","primaryAddress","visitAddress","postalAddress","invoiceAddress","find","address","emptyEmail","emailCorrespondence","emailAddress","emailInvoice","emptyPhoneNumber","phoneNumberPrimary","phoneNumber","phoneNumberTwo","filter","energySupplierId","esNumber","eanElectricity","memberSince","eanGas","Loading","style","height","TextBlock","showPlaceholder","undefined","DefaultContactPersonalView","portalSettings","initialContact","_initialContact$perso","iban","ibanAttn","didAgreeAvg","dateDidAgreeAvg","FormLabel_default","general_TextBlock","initials","firstName","lastNamePrefix","lastName","dateOfBirth","checked","htmlFor","href","Select","options","optionLabel","emptyOption","option","Countries","EnergySuppliers","Titles","LastNamePrefixes","InputDate","onChangeAction","formattedDate","DayPickerInput_default","onDayChange","date","formatDate","parseDate","dayPickerProps","showWeekNumbers","locale","firstDayOfWeek","localeUtils","MomentLocaleUtils","inputProps","autoComplete","DefaultContactPersonalEdit","projectTypeCodeRef","setFieldValue","form_Select","_ref5","_ref6","isParticipant","_ref7","form_InputDate","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","isParticipantPcrProject","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","ValidationSchemaPersonal","validationSchemaBasic","test","trim","nullable","Number","isInteger","validationSchemaAdditional","titleId","typeError","ibantools","ContactDetailsPersonal","handleSubmitContactValues","editForm","setEditForm","Edit","ButtonGroup_default","aria-label","View","DefaultContactOrganisationView","_initialContact$organ","primaryOccupations","chamberOfCommerceNumber","vatNumber","website","DefaultContactOrganisationEdit","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","ValidationSchemaOrganisation","ContactDetailsOrganisation","default_form_organisation_Edit","default_form_organisation_View","ContactDetails","_this","this","setContact","setPortalSettings","isLoading","setLoading","prevCurrentSelectedContact","usePrevious","callFetchContact","rebaseContact","switchToView","updatedContact","setState","hasError","LoadingView","Personal","Organisation","ContactDetailsWithContext","contact_details_ContactDetails","MyAreasOfInterestForm","console","log","arrayHelpers","myAreasOfInterest","myAreaOfInterest","index","participation","generalOptions","generalOption","MyAreasOfInterest","my_areas_of_interest_Form","ProjectAPI","fetchProjects","and","o","fetchProject","MoneyPresenter","amount","parseFloat","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","StepOneLoan","next","initialRegisterValues","handleSubmitRegisterValues","amountOptioned","minAmountLoan","replace","maxAmountLoan","Form_default","Label","StepOneObligation","participationsOptioned","minParticipations","max","maxParticipations","positive","participationWorth","StepOneCapital","StepOnePcr","pcrYearlyPowerKwhConsumption","pcrPostalCode","postalcodeLink","includes","substring","pcrNumberOfSolarPanels","pcrInputGeneratedNumberOfKwh","PCR_POWER_KWH_CONSUMPTION_PERCENTAGE","PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL","calculateEstimatedGeneratedNumberOfKwh","calculateGeneratedNumberOfKwh","calculatePowerKwhConsumption","powerKwhConsumption","pcrEstimatedGeneratedNumberOfKwh","Math","ceil","pcrAdviseMaxNumberOfParticipations","calculateAdviseMaxNumberOfParticipations","onChange","pcrHasSolarPanels","pcrEstimatedRevenueOk","StepTwo","previous","typeContact","validationSchemaPcrPersonal","validationSchemaPcrOrganisation","codeRef","StepThree","didAcceptAgreement","didUnderstandInfo","linkAgreeTerms","linkUnderstandInfo","ViewHtmlAsText","react_frame_component_lib_default","dangerouslySetInnerHTML","__html","ParticipantProjectAPI","createParticipantProject","StepFour","setSucces","contactDocument","setContactDocument","didAgreeRegistration","general_ViewHtmlAsText","StepFive","Steps","currentStep","steps_StepOneLoan","steps_StepOneObligation","steps_StepOneCapital","steps_StepOnePcr","steps_StepTwo","steps_StepThree","steps_StepFour","steps_StepFive","MasterForm","_React$useState","_React$useState2","setStep","steps","RegisterProject","initialPcrValues","setRegisterValues","setProject","_useState9","_useState10","_useState11","_useState12","isSucces","_useState13","_useState14","isRegistered","setRegistered","all","spread","payloadProject","payloadContact","contactProjecten","item","register_MasterForm","nextStep","RegisterProjectWithContext","ProjectList","contactProjectsArray","setContactProjectsArray","projectData","setProjectData","length","Table_default","responsive","dateStartRegistrations","dateEndRegistrations","ProjectListWithContext","LoanDetails","amountOfLoanNeeded","description","ObligationDetails","totalParticipations","CapitalDetails","PcrDetails","ProjectDetails","details_LoanDetails","details_ObligationDetails","details_CapitalDetails","details_PcrDetails","renderDetails","RegistrationList","dateEnd","amountInteressed","amountGranted","amountDefinitive","participationsInteressed","participationsGranted","participationsDefinitive","RegistrationListWithContext","personTitleId","personFirstName","personLastName","NewAccountFormPersonal","organisationName","NewAccountFormOrganisation","NewAccount","executeRecaptcha","useGoogleReCaptcha","contactType","setContactType","errorMessage","setErrorMessage","_x","_x2","_handleSubmit","apply","arguments","asyncToGenerator","regenerator_default","mark","_callee","reCaptchaToken","wrap","_context","prev","abrupt","sent","response","status","stop","new_account_NewAccountFormPersonal","new_account_NewAccountFormOrganisation","NewAccountWithProvider","react_google_recaptcha_v3_esm","reCaptchaKey","process","language","new_account_NewAccount","NewAccountSuccess","ChangeAccountEmail","portalUserEmail","setPortalUserEmail","changePrimaryEmailAddress","resetForm","handleSubmitChangeEmail","ChangeAccountPassword","handleSubmitChangePassword","ChangeAccount","Email","Password","App","AuthContext_AuthProvider","PortalUserContext_PortalUserProvider","exact","path","route_PublicRoute","Login","hostname","ReactDOM","src_App","getElementById","remove","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kUAGMA,EAAcC,IAAMC,gBAEpBC,EAAoB,qCACpBC,EAA2B,6CAE3BC,EAAe,SAASC,GAAO,IAAAC,EACPC,mBAgB1B,WAEI,IAQOC,OAAOC,aAAaC,QAAQR,GAN/B,OAAO,EAEX,OAAO,EAtBwBS,IADFC,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAC1BS,EAD0BH,EAAA,GAClBI,EADkBJ,EAAA,GA8BjC,OACIK,EAAAC,EAAAC,cAACpB,EAAYqB,SAAb,CACIC,MAAO,CACHN,OAAQA,EACRO,MA/BZ,SAAeC,EAASC,GACpB,IAAMC,EAAQF,EAAQG,aACtBlB,OAAOC,aAAakB,QAAQzB,EAAmBuB,GAC/ChB,aAAakB,QAAQxB,EAA0ByB,MAASC,UACxDb,GAAQ,GACRQ,KA2BQM,OAxBZ,WACItB,OAAOC,aAAasB,WAAW7B,GAC/BM,OAAOC,aAAasB,WAAW5B,GAC/Ba,GAAQ,MAwBHX,EAAM2B,WAKbC,EAAelC,EAAYmC,mDCjD3BC,EAAoBlC,wBAAc,CACpCmC,KAAM,GACNC,WAAY,eAGVC,EAAqB,SAASjC,GAAO,IAAAC,EACfC,mBAAS,IADMK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAChC8B,EADgCxB,EAAA,GAC1B2B,EAD0B3B,EAAA,GAAA4B,EAEajC,mBAAS,IAFtBkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAEhCE,EAFgCD,EAAA,GAERE,EAFQF,EAAA,GAcvC,OACIxB,EAAAC,EAAAC,cAACgB,EAAkBf,SAAnB,CACIC,MAAO,CACHe,KAAMA,EACNC,WAdZ,SAAoBD,GAChBG,EAAQH,GACRO,EAAkBP,IAaVM,yBACAC,oBACAC,0BAZZ,WACIL,EAAQ,IACRI,EAAkB,OAabtC,EAAM2B,WAKba,EAAqBV,EAAkBD,qEC2N9BY,kBAnPf,SAAAC,GAAuC,IAArBC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,QAAW3C,EACCC,oBAAS,GADVK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAC5B4C,EAD4BtC,EAAA,GAClBuC,EADkBvC,EAAA,GAenC,SAASwC,IACLD,GAAgB,GAoCpB,SAASE,EAASC,GACdL,EAAQM,KAAR,IAAAC,OAAiBF,IAGrB,OA3BA,SAA2BG,GAIvB,SAASC,EAAmBC,GACpBF,EAAIG,UAAYH,EAAIG,QAAQC,SAASF,EAAMG,SAC3CX,GAAgB,GAIxBY,oBAAU,WAGN,OADAC,SAASC,iBAAiB,YAAaP,GAChC,WAEHM,SAASE,oBAAoB,YAAaR,MAMtDS,CADmBC,iBAAO,OAQtBnD,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,iBACXpD,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,eACXpD,EAAAC,EAAAC,cAAC0B,EAAD,KACK,SAAAyB,GAAA,IAAG5B,EAAH4B,EAAG5B,uBAAH,OACGzB,EAAAC,EAAAC,cAAA,QAAMkD,UAAU,iBAAiB3B,EAAuB6B,aAKpEtD,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,KACID,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GACL1D,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,eACXpD,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CAAO2D,IAAI,sBAGnB5D,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GACL1D,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,8BAEXpD,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,mBAAmBS,QAnE9D,WACI3B,GAAgB,KAmEYlC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,QAAMkD,UAAU,mCAChBpD,EAAAC,EAAAC,cAAA,QAAMkD,UAAU,mCAChBpD,EAAAC,EAAAC,cAAA,QAAMkD,UAAU,qCAIxBpD,EAAAC,EAAAC,cAACc,EAAD,KACK,SAAA8C,GAAgB,IAAbjD,EAAaiD,EAAbjD,OACA,OACIb,EAAAC,EAAAC,cAAC0B,EAAD,KACK,SAAAmC,GAKK,IAJF5C,EAIE4C,EAJF5C,KACAM,EAGEsC,EAHFtC,uBACAC,EAEEqC,EAFFrC,kBACAC,EACEoC,EADFpC,0BAEA,OACI3B,EAAAC,EAAAC,cAAC8D,EAAA/D,EAAD,CAAUgE,YAAU,GAChBjE,EAAAC,EAAAC,cAAC8D,EAAA/D,EAASiE,OAAV,KACIlE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,OAEJnE,EAAAC,EAAAC,cAAC8D,EAAA/D,EAASmE,KAAV,KACIpE,EAAAC,EAAAC,cAAC8D,EAAA/D,EAASoE,OAAV,qBACArE,EAAAC,EAAAC,cAAC8D,EAAA/D,EAASqE,KAAV,CAAeC,UAAQ,GAAEpD,EAAKmC,UAC9BtD,EAAAC,EAAAC,cAAC8D,EAAA/D,EAASqE,KAAV,KACItE,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CACInC,GAAI,wBACJe,UAAW,iBAFf,yBAaJpD,EAAAC,EAAAC,cAAC8D,EAAA/D,EAASwE,QAAV,MACAzE,EAAAC,EAAAC,cAAC8D,EAAA/D,EAASoE,OAAV,oBACArE,EAAAC,EAAAC,cAAC8D,EAAA/D,EAASqE,KAAV,CACIT,QAAS,WACLnC,EAAkBP,GAClBiB,EAAS,aAEbsC,OACIjD,EAAuBkD,KAAOxD,EAAKwD,IAKtCxD,EAAKmC,UAETnC,EAAKyD,YACAzD,EAAKyD,YAAYC,IAAI,SAAAC,GAAiB,MAE9B,iBADHA,EAAkBC,eAAeC,QAE9BF,EAAkBG,SAElB,WADHH,EAAkBC,eAAeC,QAE9BF,EAAkBI,WACbC,oBACLnF,EAAAC,EAAAC,cAAC8D,EAAA/D,EAASqE,KAAV,CACIc,IAAKN,EAAkBH,GACvBd,QAAS,WACLnC,EACIoD,EAAkBC,gBAEtB3C,EAAS,aAEbsC,OACIjD,EAAuBkD,KACvBG,EAAkBC,eACbJ,IAMLG,EAAkBC,eACbzB,UAGb,OAER,KACNtD,EAAAC,EAAAC,cAAC8D,EAAA/D,EAASwE,QAAV,MACAzE,EAAAC,EAAAC,cAAC8D,EAAA/D,EAASqE,KAAV,CACIT,QAAS,WACLhD,IACAc,MAHR,sBAsBpD3B,EAAAC,EAAAC,cAACmF,EAAA,MAAD,CACIC,OAAK,EACLC,MAAO,QAEPC,OAAQvD,EACRwD,cAAe,SAAAC,GAAK,OA5LhC,SAA2BA,GACvBxD,EAAgBwD,EAAMF,QA2LUG,CAAkBD,IAC1CE,kBAAkB,GAElB5F,EAAAC,EAAAC,cAAA,OAAKkD,UAAW,gBACZpD,EAAAC,EAAAC,cAACF,EAAAC,EAAM4F,SAAP,KACI7F,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,QACApD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CACInC,GAAI,4BACJe,UAAS,wCAAAb,OACiB,MAAtBR,EAAS+D,SAAmB,aAAe,IAE/CjC,QAAS1B,GALb,qBASAnC,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CACInC,GAAI,YACJe,UAAS,wCAAAb,OACiB,cAAtBR,EAAS+D,SAA2B,aAAe,IAEvDjC,QAAS1B,GALb,YAmBAnC,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CACInC,GAAI,yBACJe,UAAS,wCAAAb,OACiB,2BAAtBR,EAAS+D,SAAwC,aAAe,IAEpEjC,QAAS1B,GALb,gDC5OlB4D,EAAWxG,OAAOyG,gBAAgBC,SAClChH,EAAoB,qCACpBC,EAA2B,6CAE3BgH,EAAgBC,IAAMC,OAAO,CAC/BC,QAAO,GAAA9D,OAAKwD,KAGhBG,EAAcI,aAAaC,QAAQC,IAC/B,SAASC,IAeb,WACI,IAAMC,EAAe/F,IAAOnB,aAAaC,QAAQP,KAG5CM,aAAaC,QAAQP,IACtBwH,EAAaC,IAAI,KAAM,WAAW/F,SAAWD,MAASC,SAEzB,YAAzBrB,OAAOwC,SAAS6E,MAA+C,aAAzBrH,OAAOwC,SAAS6E,MACtDC,WAAW,WACPrH,aAAasB,WAAW7B,GACxBO,aAAasB,WAAW5B,GACxBK,OAAOwC,SAAS+E,UACjB,KAGPtH,aAAakB,QAAQxB,EAA0ByB,MAASC,UA5BxDmG,GAEA,IAAMC,EAAa,UAAYxH,aAAaC,QAAQR,GAEpD,OADAwH,EAAOQ,QAAQC,cAAgBF,EACxBP,GAEX,SAASU,GAEL,OAAOC,QAAQC,OAAOF,KAwBfjB,QC5CAoB,EAAA,CACXC,uBAAwB,WAGpB,OAAOrB,EAAcsB,IAFL,MAEqB,CACjCC,OAAQ,CACJC,KAAM,CACFC,IAAK,CACD,KACA,SACA,WACA,OACA,WACA,cACA,kBACA,gBAEJC,IAAK,CACDhD,YAAa,CACT+C,IAAK,CAAC,KAAM,eAAgB,mBAAoB,YAAa,WAC7DC,IAAK,CACD1C,WAAY,CACRyC,IAAK,CAAC,KAAM,oBAAqB,sBAAuB,wBAE5D5C,eAAgB,CAAE4C,IAAK,CAAC,KAAM,WAAY,WAC1CE,QAAS,CAAEF,IAAK,CAAC,KAAM,qBASnDG,qBAAsB,WAClB,OAAO5B,EAAcsB,IAAd,uBAGXO,YAAa,SAAAC,GAGT,OAAO9B,EAAc+B,KAFL,4BAEsBD,IAG1CE,eAAgB,SAAAF,GAGZ,OAAO9B,EAAc+B,KAFL,+BAEsBD,KC1CxCG,EAAiB,SAAArG,GAA2D,IAA7CsG,EAA6CtG,EAAxDuG,UAAsBjH,EAAkCU,EAAlCV,WAAYtB,EAAsBgC,EAAtBhC,OAAWwI,EAAW1I,OAAA2I,EAAA,EAAA3I,CAAAkC,EAAA,qCAe9E,OAdAgB,oBAAU,WACFhD,GAEIwH,EAAcC,yBACTiB,KAAK,SAAAlI,GACFc,EAAWd,EAAQmI,KAAKA,QAE3BC,MAAM,SAAAvB,GACHwB,MAAM,iEAIvB,CAAC7I,IAGAE,EAAAC,EAAAC,cAACc,EAAD,KACK,SAAAqC,GAAA,IAAGvD,EAAHuD,EAAGvD,OAAH,OACGE,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,SAASuB,GAAG,UACvB3E,EAAAC,EAAAC,cAAC0I,EAAD,MACA5I,EAAAC,EAAAC,cAAC2I,EAAA,EAADjJ,OAAAkJ,OAAA,CAAOC,OAAQ,SAAA3J,GAAK,OAAKU,EAASE,EAAAC,EAAAC,cAACkI,EAAchJ,GAAYY,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAUxG,GAAG,aAAkBiG,QAOjG,SAASU,EAA0B5J,GAC9C,OACIY,EAAAC,EAAAC,cAACc,EAAD,KACK,SAAA8C,GAAA,IAAGhE,EAAHgE,EAAGhE,OAAH,OACGE,EAAAC,EAAAC,cAAC0B,EAAD,KACK,SAAAmC,GAAA,IAAG3C,EAAH2C,EAAG3C,WAAH,OAAoBpB,EAAAC,EAAAC,cAAC+I,EAADrJ,OAAAkJ,OAAA,GAAoB1J,EAApB,CAA2BgC,WAAYA,EAAYtB,OAAQA,SCpCpG,IAIeoJ,EAJK,SAAApH,GAAA,IAAcsG,EAAdtG,EAAGuG,UAAyBC,EAA5B1I,OAAA2I,EAAA,EAAA3I,CAAAkC,EAAA,sBAChB9B,EAAAC,EAAAC,cAAC2I,EAAA,EAADjJ,OAAAkJ,OAAA,CAAOC,OAAQ,SAAA3J,GAAK,OAAIY,EAAAC,EAAAC,cAACkI,EAAchJ,KAAekJ,aCApDa,EAAY,SAAArH,GAYZ,IAXFsH,EAWEtH,EAXFsH,MACAC,EAUEvH,EAVFuH,KACAjG,EASEtB,EATFsB,UACAuB,EAQE7C,EARF6C,GACA2E,EAOExH,EAPFwH,SACAC,EAMEzH,EANFyH,YACAC,EAKE1H,EALF0H,iBACAC,EAIE3H,EAJF2H,OACAC,EAGE5H,EAHF4H,QACAC,EAEE7H,EAFF6H,sBACApF,EACEzC,EADFyC,SAEA,OACIvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACK2B,cAAIiC,EAAQL,EAAMQ,KAAM,KAAOpC,cAAIkC,EAASN,EAAMQ,KAAM,KAAOJ,EAC5DxJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAS,GAAAb,OAAKoH,IAA0BnC,cAAIiC,EAAQL,EAAMQ,KAAM,KACvE,KACJ5J,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAMA,EACNjG,UAAS,sBAAAb,OAAwBa,EAAxB,KAAAb,OACLsH,QAAQrC,cAAIiC,EAAQL,EAAMQ,KAAM,KAAOpC,cAAIkC,EAASN,EAAMQ,KAAM,KAAO,iBAAmB,GADrF,KAGTjF,GAAIA,GACAyE,EANR,CAOIE,SAAUA,EACVC,YAAaA,EACbhF,SAAUA,OAM1B4E,EAAUW,aAAe,CACrBT,KAAM,OACNjG,UAAW,UACXkG,UAAU,EACVC,YAAa,GACbC,kBAAkB,EAClBG,sBAAuB,cACvBF,OAAQ,GACRC,QAAS,IAgBEP,+CCxDTY,EAAa,SAAAjI,GAAA,IACfkI,EADelI,EACfkI,gBACAC,EAFenI,EAEfmI,WACAC,EAHepI,EAGfoI,cACAb,EAJevH,EAIfuH,KACAc,EALerI,EAKfqI,QACAC,EANetI,EAMfsI,MACAC,EAPevI,EAOfuI,oBACA9F,EARezC,EAQfyC,SARe,OAUfvE,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CACIoJ,KAAMA,EACNjG,UAAS,GAAAb,OAAKyH,GACdnG,QAASqG,EACT3F,SAAU4F,GAAW5F,EACrB6F,MAAOA,EACPG,KAAK,MAEJJ,EAAUnK,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAYC,MAAOJ,EAAqBE,KAAM,KAASvK,EAAAC,EAAAC,cAAA,YAAO+J,KAIjFF,EAAWD,aAAe,CACtBE,gBAAiB,GACjBX,KAAM,SACNe,MAAO,GACPD,SAAS,EACTE,oBAAqB,QACrB9F,UAAU,GAcCwF,SCzCTW,GAAmBC,WAAaC,MAAM,CACxCC,SAAUF,WACLG,QACAC,SAAS,aACdC,SAAUL,WAAaI,SAAS,eA2DrBE,GAxDG,SAAAnJ,GAAkC,IAAvBoJ,EAAuBpJ,EAAvBoJ,aAAc7K,EAASyB,EAATzB,MACvC,OACIL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAe,CAAEP,SAAU,GAAIG,SAAU,IACzCK,oBAAoB,EACpBX,iBAAkBA,GAClBY,SAAU,SAACtD,EAAQuD,GACfA,EAAQC,eAAc,GACtBN,EAAalD,EAAQuD,EAASlL,IAElC0I,OAAQ,SAAA1F,GAAuC,IAApCoI,EAAoCpI,EAApCoI,aAAchC,EAAsBpG,EAAtBoG,OAAQC,EAAcrG,EAAdqG,QAC7B,OACI1J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,WACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,WACHvB,UAAW,GACXmG,YAAa,QACbE,OAAQA,EACRC,QAASA,OAKrB1J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,WACLb,OAAQ,SAAAhF,GAAA,IAAGqF,EAAHrF,EAAGqF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,WACHvB,UAAW,GACXmG,YAAa,aACbF,KAAM,WACNI,OAAQA,EACRC,QAASA,OAKrB1J,EAAAC,EAAAC,cAACyL,GAAD,CACI1B,WAAY,SACZD,gBAAiB,uBACjBX,KAAM,SACNc,QAASsB,EACTpB,oBAAqB,0BC1D3CuB,GAAW,CACbC,UAAWtM,OAAOyG,gBAAgB6F,UAClCC,cAAevM,OAAOyG,gBAAgB+F,WACtCC,WAAY,YAGVjG,GAAWxG,OAAOyG,gBAAgBC,SAEzBgG,GAAA,CACXC,WAAY,SAAA5L,GACR,IAAM6L,EAAU,GAAA5J,OAAMwD,GAAN,gBAGhB,cAFOI,IAAMiG,SAASnF,QAAQoF,OAAvB,cAEAlG,IAAM8B,KAAKkE,EAAY7L,IAElCgM,kBAAmB,SAAAhM,GACf,IAAM6L,EAAU,GAAA5J,OAAMwD,GAAN,wBAGhB,cAFOI,IAAMiG,SAASnF,QAAQoF,OAAvB,cAEAlG,IAAM8B,KAAKkE,EAAY7L,IAGlCD,MAAO,SAAAkM,GACH,IAAMJ,EAAU,GAAA5J,OAAMwD,GAAN,gBAGhB,cAFOI,IAAMiG,SAASnF,QAAQoF,OAAvB,cAEAlG,IAAM8B,KAAKkE,EAAXvM,OAAA4M,GAAA,EAAA5M,CAAA,GAA4BgM,GAAaW,KAGpDE,SAAU,SAAAnM,GACN,IAAM6L,EAAU,GAAA5J,OAAMwD,GAAN,aAGhB,cAFOI,IAAMiG,SAASnF,QAAQoF,OAAvB,cAEAlG,IAAM8B,KAAKkE,EAAY7L,IAGlCoM,OAAQ,SAAA5B,GACJ,IAAMqB,EAAU,GAAA5J,OAAMwD,GAAN,mBAGhB,cAFOI,IAAMiG,SAASnF,QAAQoF,OAAvB,cAEAlG,IAAM8B,KAAKkE,EAAYrB,IAGlC6B,MAAO,SAAArM,GACH,IAAM6L,EAAU,GAAA5J,OAAMwD,GAAN,mBAGhB,cAFOI,IAAMiG,SAASnF,QAAQoF,OAAvB,cAEAlG,IAAM8B,KAAKkE,EAAY7L,yBC7CvBsM,GAAA,CACXC,oBAAqB,SAAAC,GACjB,IAAMX,EAAU,GAAA5J,OAJC,UAID,aAAAA,OAAqCuK,GAErD,OAAO5G,EAAcsB,IAAI2E,IAE7BY,qBAAsB,WAClB,IAAMZ,EAAU,GAAA5J,OATC,UASD,qBAEhB,OAAO2D,EAAcsB,IAAI2E,IAE7Ba,8BAA+B,WAC3B,IAAMb,EAAU,GAAA5J,OAdC,UAcD,iCAEhB,OAAO2D,EAAcsB,IAAI2E,KCNlBc,GAAA,SAAA7N,GAAS,IAAAC,EACaC,oBAAS,GADtBK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACb6N,EADavN,EAAA,GACFwN,EADExN,EAAA,GAAA4B,EAGyBjC,oBAAS,GAHlCkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAGb6L,EAHa5L,EAAA,GAGO6L,EAHP7L,EAAA,GAId8L,GAASlO,EAAM2C,SAAS2D,OAAS,CAAE4H,KAAM,CAAExH,SAAU,eAArDwH,KAJcC,EAM0BjO,mBAAS,IANnCkO,EAAA5N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAMbE,EANaD,EAAA,GAMIE,EANJF,EAAA,GAAAG,EAO4CrO,oBAAS,GAPrDsO,EAAAhO,OAAAC,EAAA,EAAAD,CAAA+N,EAAA,GAObE,EAPaD,EAAA,GAOaE,EAPbF,EAAA,GA+BpB,SAAS1C,EAAalD,EAAQuD,EAASlL,GACnC4L,GAAQ5L,MAAM2H,GACTQ,KAAK,SAAAlI,GACF6M,GAAY,GACZ9M,EAAMC,EAAQmI,KAAM,kBAAM4E,GAAe,OAE5C3E,MAAM,SAAAvB,GAEHgG,GAAY,GACZ5B,EAAQC,eAAc,KAQlC,OAvCA1I,oBAAU,WAEF8J,GAAkBG,uBACbvE,KAAK,SAAAlI,GACFoN,EAAmBpN,EAAQmI,QAE9BC,MAAM,SAAAvB,MAMXyF,GAAkBI,gCACbxE,KAAK,SAAAlI,GACFwN,EAA4BxN,EAAQmI,QAEvCC,MAAM,SAAAvB,OAIhB,IAoBCnH,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACKuH,EALEpN,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAUxG,GAAIiL,IAQbtN,EAAAC,EAAAC,cAACc,EAAD,KACK,SAAAqC,KAAGvD,OAAH,IAAWO,EAAXgD,EAAWhD,MAAX,OACGL,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAW8N,OAAK,EAAC3K,UAAU,2BACvBpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,2DACXpD,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAG,KAAKsK,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACjCnO,EAAAC,EAAAC,cAAA,OAAK0D,IAAI,kBAAkBwK,IAAI,GAAGhL,UAAU,yBAC5CpD,EAAAC,EAAAC,cAACmO,GAAD,CAAWnD,aAAcA,EAAc7K,MAAOA,IAC7C6M,EACGlN,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACoO,GAAArO,EAAD,CAAOmD,UAAW,sBAAuBmL,QAAS,UAAlD,0CAIJ,KACJvO,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMnC,GAAI,uBAAwBe,UAAU,sBAA5C,yBAIHyK,EACG7N,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMnC,GAAI,iBAAkBe,UAAU,sBAAtC,aACeqK,EADf,MAIJ,qBCjFlC/C,GAAmBC,WAAaC,MAAM,CACxCI,SAAUL,WACL6D,IAAI,GAAI,gCACRC,QAAQ,UAAW,kCACnBA,QAAQ,UAAW,uCACnB1D,SAAS,aACd2D,qBAAsB/D,WACjBgE,MAAM,CAAChE,MAAQ,YAAa,MAAO,mCACnCI,SAAS,eA4EH6D,GAzEM,SAAA9M,GAAA,IAAGoJ,EAAHpJ,EAAGoJ,aAAcJ,EAAjBhJ,EAAiBgJ,MAAjB,OACjB9K,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAe,CAAEJ,SAAU,GAAI0D,qBAAsB,IACrDrD,oBAAoB,EACpBX,iBAAkBA,GAClBY,SAAU,SAACtD,EAAQuD,GACfA,EAAQC,eAAc,GACtBN,EAAalD,EAAQuD,IAEzBxC,OAAQ,SAAA1F,GAAA,IAAGoI,EAAHpI,EAAGoI,aAAchC,EAAjBpG,EAAiBoG,OAAQC,EAAzBrG,EAAyBqG,QAAzB,OACJ1J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,QACXpD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,8BAC+BpD,EAAAC,EAAAC,cAAA,cAAS4K,GADxC,qCAIJ9K,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,WACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,WACHvB,UAAWgG,EAAMhJ,MAAQ,mBAAqB,GAC9CmJ,YAAa,mBACbE,OAAQA,EACRC,QAASA,EACTC,sBAAuB,oBAM3C3J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKmD,UAAU,QACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,uBACLb,OAAQ,SAAAhF,GAAA,IAAGqF,EAAHrF,EAAGqF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,uBACHvB,UAAWgG,EAAMhJ,MAAQ,mBAAqB,GAC9CmJ,YAAa,2BACbE,OAAQA,EACRC,QAASA,EACTC,sBAAuB,oCAM3C3J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKmD,UAAU,QACXpD,EAAAC,EAAAC,cAAA,SAAOkD,UAAW,cAAlB,8GAMRpD,EAAAC,EAAAC,cAACyL,GAAD,CACI1B,WAAY,YACZD,gBAAiB,uBACjBO,KAAK,KACLlB,KAAM,SACNc,QAASsB,EACTpB,oBAAqB,iBC3EnCwE,GAAW,SAAA/M,GAAgC,IAA7BC,EAA6BD,EAA7BC,SAAU+M,EAAmBhN,EAAnBgN,MAAOzO,EAAYyB,EAAZzB,MAAYhB,EACZC,oBAAS,GADGK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAC3B8N,GAD2BxN,EAAA,GAAAA,EAAA,IAAA4B,EAEMjC,oBAAS,GAFfkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAEtCwN,EAFsCvN,EAAA,GAElBwN,EAFkBxN,EAAA,GAGvCyN,EAAmBC,mBAAmBJ,EAAMrH,OAAOwH,kBACnDnE,EAAQoE,mBAAmBJ,EAAMrH,OAAOqD,OAJDyC,EAMAjO,oBAAS,GANTkO,EAAA5N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAMtCH,EANsCI,EAAA,GAMlBH,EANkBG,EAAA,GAOvCF,GAASvL,EAAS2D,OAAS,CAAE4H,KAAM,CAAExH,SAAU,eAA/CwH,KAoCN,OACItN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACKuH,EALEpN,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAUxG,GAAIiL,IAQbtN,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAW8N,OAAK,EAAC3K,UAAU,2BACvBpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,2DACXpD,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAG,KAAKsK,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACjCnO,EAAAC,EAAAC,cAAA,OAAK0D,IAAI,kBAAkBwK,IAAI,GAAGhL,UAAU,yBAC3C2L,EACG/O,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAAA,MAAIkD,UAAW,cAAf,6BACApD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,uBACApD,EAAAC,EAAAC,cAACyL,GAAD,CACI1B,WAAY,YACZC,cAAemD,EACfrD,gBAAiB,uBACjBO,KAAK,QAIbvK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAAA,MAAIkD,UAAW,cAAf,qBACApD,EAAAC,EAAAC,cAACiP,GAAD,CAAcjE,aAzD9C,SAAsBlD,EAAQuD,GAC1BU,GAAQQ,SAAS,CACbwC,mBACAnE,QACAE,SAAUhD,EAAOgD,SACjBoE,sBAAuBpH,EAAO0G,uBAE7BlG,KAAK,SAAAlI,GACF0O,GAAqB,GACrB/C,GAAQ5L,MAAM,CAAEwK,SAAUC,EAAOE,SAAUhD,EAAOgD,WAC7CxC,KAAK,SAAAlI,GACF6M,GAAY,GACZ9M,EAAMC,EAAQmI,KAAM,cAEpB5B,WAAW,WACPwG,GAAe,IAChB,QAEN3E,MAAM,SAAAvB,GAEHgG,GAAY,GACZ5B,EAAQC,eAAc,OAGjC9C,MAAM,SAAAvB,GAEHoE,EAAQC,eAAc,MA+BwCV,MAAOA,UAWtE,SAASuE,GAAoBjQ,GACxC,OAAOY,EAAAC,EAAAC,cAACc,EAAD,KAAe,SAAA8C,GAAA,IAAGzD,EAAHyD,EAAGzD,MAAH,OAAeL,EAAAC,EAAAC,cAACoP,GAAD1P,OAAAkJ,OAAA,GAAc1J,EAAd,CAAqBiB,MAAOA,OCnFrE,IAAMqK,GAAmBC,WAAaC,MAAM,CACxCE,MAAOH,WACFG,QACAC,SAAS,eA2CHwE,GAxCI,SAAAzN,GAAA,IAAGoJ,EAAHpJ,EAAGoJ,aAAc6D,EAAjBjN,EAAiBiN,mBAAjB,OACf/O,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAe,CAAEN,MAAO,IACxBO,oBAAoB,EACpBX,iBAAkBA,GAClBY,SAAU,SAACtD,EAAQuD,GACfA,EAAQC,eAAc,GACtBN,EAAalD,EAAQuD,IAEzBxC,OAAQ,SAAA1F,GAAA,IAAGoI,EAAHpI,EAAGoI,aAAchC,EAAjBpG,EAAiBoG,OAAQC,EAAzBrG,EAAyBqG,QAAzB,OACJ1J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,QACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,QACHvB,UAAW,GACXmG,YAAa,cACbE,OAAQA,EACRC,QAASA,OAMrB1J,EAAAC,EAAAC,cAACyL,GAAD,CACI1B,WAAY8E,EAAqB,uBAAyB,iCAC1D/E,gBAAiB,uBACjBO,KAAK,KACLlB,KAAM,SACNc,QAASsB,EACTpB,oBAAqB,UACrB9F,SAAUwK,SCsCfS,GAzEA,SAAApQ,GAAS,IAAAC,EACaC,oBAAS,GADtBK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACb6N,EADavN,EAAA,GACFwN,EADExN,EAAA,GAAA4B,EAE+BjC,oBAAS,GAFxCkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAEbwN,EAFavN,EAAA,GAEOwN,EAFPxN,EAAA,GAqBpB,OACIxB,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAW8N,OAAK,EAAC3K,UAAU,2BACvBpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,2DACXpD,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAG,KAAKsK,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAClCnO,EAAAC,EAAAC,cAAA,OAAK0D,IAAI,kBAAkBwK,IAAI,GAAGhL,UAAU,yBAC3C2L,EACG/O,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAW,2BACZpD,EAAAC,EAAAC,cAAA,MAAIkD,UAAW,cAAf,4BAEJpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAW,2BACZpD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,4KAQRpD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAW,2BACZpD,EAAAC,EAAAC,cAAA,MAAIkD,UAAW,cAAf,wBAEJpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAW,2BACZpD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,sJAKJpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAW,2BACZpD,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACuP,GAAD,CAAYvE,aAhD5C,SAAsBlD,EAAQuD,GAC1BU,GAAQS,OAAO1E,GACVQ,KAAK,SAAAlI,GACF6M,GAAY,GACZ6B,GAAqB,GACrBzD,EAAQC,eAAc,KAEzB9C,MAAM,SAAAvB,GAIHgG,GAAY,GACZ6B,GAAqB,GACrBzD,EAAQC,eAAc,MAmCsCuD,mBAAoBA,IAC3D7B,EACGlN,EAAAC,EAAAC,cAACoO,GAAArO,EAAD,CAAOmD,UAAW,sBAAuBmL,QAAS,UAAlD,+BAGA,QAKpBvO,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAW,2BACZpD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMnC,GAAI,SAAUe,UAAU,sBAA9B,4BCjElBsH,GAAmBC,WAAaC,MAAM,CACxCI,SAAUL,WACL6D,IAAI,GAAI,gCACRC,QAAQ,UAAW,kCACnBA,QAAQ,UAAW,uCACnB1D,SAAS,aACd2D,qBAAsB/D,WACjBgE,MAAM,CAAChE,MAAQ,YAAa,MAAO,mCACnCI,SAAS,eAwEH2E,GArEG,SAAA5N,GAAA,IAAGoJ,EAAHpJ,EAAGoJ,aAAcJ,EAAjBhJ,EAAiBgJ,MAAjB,OACd9K,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAe,CAAEJ,SAAU,GAAI0D,qBAAsB,IACrDrD,oBAAoB,EACpBX,iBAAkBA,GAClBY,SAAU,SAACtD,EAAQuD,GACfA,EAAQC,eAAc,GACtBN,EAAalD,EAAQuD,IAEzBxC,OAAQ,SAAA1F,GAAA,IAAGoI,EAAHpI,EAAGoI,aAAchC,EAAjBpG,EAAiBoG,OAAQC,EAAzBrG,EAAyBqG,QAAzB,OACJ1J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,qCACsCpD,EAAAC,EAAAC,cAAA,cAAS4K,GAD/C,qCAIJ9K,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,WACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,WACHvB,UAAWgG,EAAMhJ,MAAQ,mBAAqB,GAC9CmJ,YAAa,mBACbE,OAAQA,EACRC,QAASA,EACTC,sBAAuB,mBAKvC3J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,uBACLb,OAAQ,SAAAhF,GAAA,IAAGqF,EAAHrF,EAAGqF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,uBACHvB,UAAWgG,EAAMhJ,MAAQ,mBAAqB,GAC9CmJ,YAAa,2BACbE,OAAQA,EACRC,QAASA,EACTC,sBAAuB,mCAKvC3J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,SAAOkD,UAAW,cAAlB,6GAKJpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACyL,GAAD,CACI1B,WAAY,YACZD,gBAAiB,uBACjBO,KAAK,KACLlB,KAAM,SACNc,QAASsB,EACTpB,oBAAqB,kBCrEvCsF,GAAQ,SAAA7N,GAAgC,IAA7BC,EAA6BD,EAA7BC,SAAU+M,EAAmBhN,EAAnBgN,MAAOzO,EAAYyB,EAAZzB,MAAYhB,EACTC,oBAAS,GADAK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACxB8N,GADwBxN,EAAA,GAAAA,EAAA,IAAA4B,EAESjC,oBAAS,GAFlBkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAEnCwN,EAFmCvN,EAAA,GAEfwN,EAFexN,EAAA,GAGpChB,EAAQ0O,mBAAmBJ,EAAMrH,OAAOjH,OACxCsK,EAAQoE,mBAAmBJ,EAAMrH,OAAOqD,OAJJyC,EAMGjO,oBAAS,GANZkO,EAAA5N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAMnCH,EANmCI,EAAA,GAMfH,EANeG,EAAA,GAOpCF,GAASvL,EAAS2D,OAAS,CAAE4H,KAAM,CAAExH,SAAU,eAA/CwH,KA+BN,OACItN,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACKuH,EALEpN,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAUxG,GAAIiL,IAQbtN,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAW8N,OAAK,EAAC3K,UAAU,2BACvBpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,2DACXpD,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAG,KAAKsK,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACjCnO,EAAAC,EAAAC,cAAA,OAAK0D,IAAI,kBAAkBwK,IAAI,GAAGhL,UAAU,yBAC3C2L,EACG/O,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,MAAIkD,UAAW,cAAf,+BAEJpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,wBAEJpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACyL,GAAD,CACI1B,WAAY,YACZC,cAAemD,EACfrD,gBAAiB,uBACjBO,KAAK,SAKjBvK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,MAAIkD,UAAW,cAAf,wBAEJpD,EAAAC,EAAAC,cAAC0P,GAAD,CAAW1E,aA5D3C,SAAsBlD,EAAQuD,GAC1BU,GAAQU,MAAM,CAAEnM,QAAOsK,QAAOE,SAAUhD,EAAOgD,SAAUoE,sBAAuBpH,EAAO0G,uBAClFlG,KAAK,SAAAlI,GACF0O,GAAqB,GACrB/C,GAAQ5L,MAAM,CAAEwK,SAAUC,EAAOE,SAAUhD,EAAOgD,WAC7CxC,KAAK,SAAAlI,GACF6M,GAAY,GACZ9M,EAAMC,EAAQmI,KAAM,cAEpB5B,WAAW,WACPwG,GAAe,IAChB,QAEN3E,MAAM,SAAAvB,GAEHgG,GAAY,GACZ5B,EAAQC,eAAc,OAGjC9C,MAAM,SAAAvB,GAEHoE,EAAQC,eAAc,MAuCqCV,MAAOA,UAWnE,SAAS+E,GAAiBzQ,GACrC,OAAOY,EAAAC,EAAAC,cAACc,EAAD,KAAe,SAAA8C,GAAA,IAAGzD,EAAHyD,EAAGzD,MAAH,OAAeL,EAAAC,EAAAC,cAAC4P,GAADlQ,OAAAkJ,OAAA,GAAW1J,EAAX,CAAkBiB,MAAOA,OC1FnD,IAAA0P,GAAA,CACXC,aAAc,SAASrL,GACnB,IAAMwH,EAAU,iBAAA5J,OAAoBoC,GAEpC,OAAOuB,EAAcsB,IAAI2E,EAAY,CACjC1E,OAAQ,CACJC,KAAM,CACFC,IAAK,CACD,KACA,SACA,SACA,WACA,OACA,WACA,cACA,kBACA,eACA,gBACA,2BAEJC,IAAK,CACDqI,OAAQ,CACJtI,IAAK,CACD,KACA,YACA,WACA,WACA,UACA,iBACA,eAEJC,IAAK,CACDwC,MAAO,CAAEzC,IAAK,CAAC,KAAM,WAG7BuI,aAAc,CACVvI,IAAK,CAAC,KAAM,OAAQ,UAAW,0BAA2B,cAE9DwI,eAAgB,CAAExI,IAAK,CAAC,KAAM,QAAS,UAAW,WAClDyI,aAAc,CAAEzI,IAAK,CAAC,KAAM,SAAU,UAAW,WACjD0I,UAAW,CACP1I,IAAK,CACD,KACA,SACA,SACA,WACA,aACA,OACA,YACA,UACA,UAEJC,IAAK,CACD0I,QAAS,CAAE3I,IAAK,CAAC,KAAM,WAG/B/C,YAAa,CACT+C,IAAK,CAAC,KAAM,eAAgB,mBAAoB,YAAa,WAC7DC,IAAK,CACD1C,WAAY,CACRyC,IAAK,CAAC,KAAM,oBAAqB,sBAAuB,wBAE5D5C,eAAgB,CACZ4C,IAAK,CAAC,KAAM,eAIxB4I,6BAA8B,CAC1B5I,IAAK,CACD,KACA,mBACA,WACA,iBACA,SACA,cACA,qBAEJC,IAAK,CAAE4I,eAAgB,IACvBC,IAAK,CACDC,EAAG,oBACHC,GAAG,UAS/BC,6BAA8B,SAASjM,GACnC,IAAMwH,EAAU,iBAAA5J,OAAoBoC,GAEpC,OAAOuB,EAAcsB,IAAI2E,EAAY,CACjC1E,OAAQ,CACJC,KAAM,CACFC,IAAK,CACD,KACA,SACA,SACA,WACA,OACA,WACA,cACA,kBACA,gBAEJC,IAAK,CACDiJ,eAAgB,CACZlJ,IAAK,CACD,KACA,eACA,qBACA,yBACA,oBACA,wBACA,2BACA,wBACA,yBACA,2BACA,mBACA,gBACA,iBACA,oBAEJC,IAAK,CACDkJ,QAAS,CACLnJ,IAAK,CAAC,KAAM,OAAQ,UAAW,sBAC/BC,IAAK,CAAEmJ,YAAa,CAAEpJ,IAAK,CAAC,KAAM,sBAUlEqJ,cAAe,SAAAnJ,GACX,IAAMsE,EAAU,YAAA5J,OAAesF,EAAQlD,IAEvC,OAAOuB,EAAc+B,KAAKkE,EAAYtE,IAG1CoJ,gBAAiB,SAAAC,GACb,IAAM/E,EAAU,YAAA5J,OAAe2O,EAAeC,UAA9B,KAAA5O,OAA2C2O,EAAeE,UAA1D,qBAEhB,OAAOlL,EAAc+B,KAAKkE,EAAY+E,KCpJ/BG,GAAA,SAASC,GACpB,IAEIC,EAAe,CAAEC,OAAQ,GAAIC,OAAQ,GAAIC,SAAU,GAAIC,WAAY,GAAIC,KAAM,GAAIC,UAAW,MAC5FC,EAAiB,KACjBC,EAAe,KACfC,EAAgB,KAChBC,EAAiB,KACrB,OAPoBX,EAAYtM,OAASsM,EAAYtM,OAAS,MAQ1D,IAAK,SAED8M,EAAiBR,EAAYjB,UAAU6B,KAAK,SAAAC,GAAO,OAAIA,EAAQlN,UAC/DqM,EAAYQ,eAAiBA,EAAclS,OAAA4M,GAAA,EAAA5M,CAAA,GAAQ2R,EAAiBO,GAAmBP,EACvF,MACJ,IAAK,eAEDQ,EAAeT,EAAYjB,UAAU6B,KAAK,SAAAC,GAAO,MAAuB,UAAnBA,EAAQnN,SAC7DsM,EAAYS,aAAeA,EAAYnS,OAAA4M,GAAA,EAAA5M,CAAA,GAAQ2R,EAAiBQ,GAAiBR,EACjFS,EAAgBV,EAAYjB,UAAU6B,KAAK,SAAAC,GAAO,MAAuB,WAAnBA,EAAQnN,SAC9DsM,EAAYU,cAAgBA,EAAapS,OAAA4M,GAAA,EAAA5M,CAAA,GAAQ2R,EAAiBS,GAAkBT,EACpFU,EAAiBX,EAAYjB,UAAU6B,KAAK,SAAAC,GAAO,MAAuB,YAAnBA,EAAQnN,SAC/DsM,EAAYW,eAAiBA,EAAcrS,OAAA4M,GAAA,EAAA5M,CAAA,GAAQ2R,EAAiBU,GAAmBV,EAK/F,IAAIa,EAAa,CAAEtH,MAAO,IACpBuH,EAAsBf,EAAYnB,eAAe+B,KAAK,SAAAI,GAAY,OAAIA,EAAarN,UACzFqM,EAAYe,oBAAsBA,EAAmBzS,OAAA4M,GAAA,EAAA5M,CAAA,GAAQwS,EAAeC,GAAwBD,EAGpG,IAAMG,EAAejB,EAAYnB,eAAe+B,KAC5C,SAAAI,GAAY,MAA4B,YAAxBA,EAAatN,SAAyBsN,EAAarN,UAEvEqM,EAAYiB,aAAeA,EAAY3S,OAAA4M,GAAA,EAAA5M,CAAA,GAAQwS,EAAeG,GAAiBH,EAG/E,IAAII,EAAmB,CAAEf,OAAQ,IAC3BgB,EAAqBnB,EAAYlB,aAAa8B,KAAK,SAAAQ,GAAW,OAAIA,EAAYzN,UACpFqM,EAAYmB,mBAAqBA,EAAkB7S,OAAA4M,GAAA,EAAA5M,CAAA,GACxC4S,EAAqBC,GAC1BD,EAGN,IAAMG,EAAiBrB,EAAYlB,aAAawC,OAAO,SAAAF,GAAW,OAAKA,EAAYzN,UAAS,GAC5FqM,EAAYqB,eAAiBA,EAAc/S,OAAA4M,GAAA,EAAA5M,CAAA,GAAQ4S,EAAqBG,GAAmBH,EAa3F,OAHKlB,EAAYf,+BACbe,EAAYf,6BARwB,CACpCsC,iBAAkB,KAClBC,SAAU,GACVC,eAAgB,GAChBC,YAAa,GACbC,OAAQ,KAKL3B,GC9CI4B,OARf,WACI,OACIlT,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,wDAAwD+P,MAAO,CAAEC,OAAQ,SACpFpT,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAYC,MAAO,UAAWF,KAAM,8CCJ1C8I,GAAY,SAAAvR,GAA8C,IAA3Cf,EAA2Ce,EAA3Cf,SAAUqC,EAAiCtB,EAAjCsB,UAAWuB,EAAsB7C,EAAtB6C,GAAI4E,EAAkBzH,EAAlByH,YACpC+J,EAA+B,KAAbvS,GAAgC,OAAbA,QAAkCwS,IAAbxS,EAEhE,OACIf,EAAAC,EAAAC,cAAA,OAAKkD,UAAS,cAAAb,OAAgBa,EAAhB,KAAAb,OAA6B+Q,EAAkB,cAAgB,IAAM3O,GAAIA,GAClF2O,EAAkBtT,EAAAC,EAAAC,cAAA,OAAKkD,UAAW,uBAAwBmG,GAAqBxI,IAK5FsS,GAAUvJ,aAAe,CACrB1G,UAAW,aACXuB,GAAI,GACJ5D,SAAU,GACVwI,YAAa,IAUF8J,UC8KAG,OAlMf,SAAA1R,GAAwE,IAAlC2R,EAAkC3R,EAAlC2R,eAAgBC,EAAkB5R,EAAlB4R,eAAkBC,EAchED,EAZAzD,cAFgE,IAAA0D,EAEvD,GAFuDA,EAGhEtB,EAWAqB,EAXArB,oBACAE,EAUAmB,EAVAnB,aACAE,EASAiB,EATAjB,mBACAE,EAQAe,EARAf,eACAb,EAOA4B,EAPA5B,eACA8B,EAMAF,EANAE,KACAC,EAKAH,EALAG,SACAC,EAIAJ,EAJAI,YACAC,EAGAL,EAHAK,gBACAtC,EAEAiC,EAFAjC,OACAlB,EACAmD,EADAnD,6BAEJ,OACIvQ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,mBAAoBqO,IAG9CzR,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,QACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjD0G,EAAO7F,MAAQ6F,EAAO7F,MAAMR,KAAO,KAG5C5J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,aACjD0G,EAAOiE,UAEZlU,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,YACjD0G,EAAOkE,YAGhBnU,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,iBACjD0G,EAAOmE,gBAEZpU,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,cACjD0G,EAAOoE,WAGhBrU,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,2BAA4BmG,YAAa,iBAC1D0G,EAAOqE,YAAc3T,IAAOsP,EAAOqE,aAAa1T,OAAO,KAAO,KAIvEZ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,+BACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,eACjD8I,EAAoBvH,QAI7B9K,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,oBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,eACjDgJ,EAAazH,QAItB9K,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,oBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,kBACjDkJ,EAAmBhB,SAI5BzR,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,oBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,kBACjDoJ,EAAelB,SAIxBzR,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,SACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjDuI,EAAeN,SAGxBxR,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjDuI,EAAeL,QAEpBzR,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,cACjDuI,EAAeJ,WAGxB1R,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,YACjDuI,EAAeH,YAEpB3R,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjDuI,EAAeF,OAGxB5R,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,QACjDuI,EAAexB,QAAUwB,EAAexB,QAAQ1G,KAAO,MAIpE5J,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,yBACjDqK,IAGT5T,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,oBACjDsK,IAIT7T,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,yBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAA,OAAKkD,UAAW,mBACZpD,EAAAC,EAAAC,cAAA,SACImJ,KAAK,WACL1E,GAAG,gBACH4P,QAAST,EACT1Q,UAAU,4BACVmB,UAAU,IAEdvE,EAAAC,EAAAC,cAAA,QAAMsU,QAAQ,gBAAgBpR,UAAU,+BAAxC,oBACsB,IAClBpD,EAAAC,EAAAC,cAAA,KAAGuU,KAAMhB,EAAc,kBAAuB5Q,OAAO,UAArD,iBAEK,IACJiR,EACG9T,EAAAC,EAAAC,cAAA,cAAM6T,EAAkB,IAAMpT,IAAOoT,GAAiBnT,OAAO,KAAO,GAApE,KAEA,MAMhBZ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,sBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,sBACjDgH,EAA6BC,eACxBD,EAA6BC,eAAe5G,KAC5C,KAIb2G,GAAgCA,EAA6BsC,iBAC1D7S,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,gCACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,gBACjDgH,EAA6BuC,WAItC9S,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,+BACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,eACjDgH,EAA6ByC,YACxBrS,IAAO4P,EAA6ByC,aAAapS,OAAO,KACxD,KAIdZ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,4BACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,4BACjDgH,EAA6BwC,iBAItC/S,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,kBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,kBACjDgH,EAA6B0C,UAK1C,MC9LdyB,GAAS,SAAA5S,GAaT,IAZFsH,EAYEtH,EAZFsH,MACAhG,EAWEtB,EAXFsB,UACAuB,EAUE7C,EAVF6C,GACAgQ,EASE7S,EATF6S,QACAC,EAQE9S,EARF8S,YACAC,EAOE/S,EAPF+S,YACAtL,EAMEzH,EANFyH,YACAC,EAKE1H,EALF0H,iBACAC,EAIE3H,EAJF2H,OACAC,EAGE5H,EAHF4H,QACAC,EAEE7H,EAFF6H,sBACApF,EACEzC,EADFyC,SAEA,OACIvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACK2B,cAAIiC,EAAQL,EAAMQ,KAAM,KAAOpC,cAAIkC,EAASN,EAAMQ,KAAM,KAAOJ,EAC5DxJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAS,GAAAb,OAAKoH,IAA0BnC,cAAIiC,EAAQL,EAAMQ,KAAM,KACvE,KACJ5J,EAAAC,EAAAC,cAAA,SAAAN,OAAAkJ,OAAA,CACI1F,UAAS,iCAAAb,OAAmCa,EAAnC,KAAAb,OACLsH,QAAQrC,cAAIiC,EAAQL,EAAMQ,KAAM,KAAOpC,cAAIkC,EAASN,EAAMQ,KAAM,KAAO,iBAAmB,GADrF,KAGTjF,GAAIA,GACAyE,EALR,CAMI7E,SAAUA,IAETsQ,EAAc7U,EAAAC,EAAAC,cAAA,UAAQE,MAAM,IAAImJ,EAAW,MAAAhH,OAASgH,EAAT,OAA4B,IAAe,KACtFoL,EAAQ9P,IAAI,SAAAiQ,GACT,OACI9U,EAAAC,EAAAC,cAAA,UAAQkF,IAAK0P,EAAOnQ,GAAIvE,MAAO0U,EAAOnQ,IACjCmQ,EAAOF,SASpCF,GAAO5K,aAAe,CAClB1G,UAAW,GACXkG,UAAU,EACVyB,SAAU,GACV6J,YAAa,OACbC,aAAa,EACbtL,YAAa,GACbC,kBAAkB,EAClBG,sBAAuB,cACvBF,OAAQ,GACRC,QAAS,IAiBEgL,UCvEAK,GAAA,CACX,CAAEpQ,GAAI,KAAMiF,KAAM,gBAClB,CAAEjF,GAAI,KAAMiF,KAAM,aAClB,CAAEjF,GAAI,KAAMiF,KAAM,UAClB,CAAEjF,GAAI,KAAMiF,KAAM,cAClB,CAAEjF,GAAI,KAAMiF,KAAM,aAClB,CAAEjF,GAAI,KAAMiF,KAAM,WAClB,CAAEjF,GAAI,KAAMiF,KAAM,aAClB,CAAEjF,GAAI,KAAMiF,KAAM,WAClB,CAAEjF,GAAI,KAAMiF,KAAM,aAClB,CAAEjF,GAAI,KAAMiF,KAAM,aAClB,CAAEjF,GAAI,KAAMiF,KAAM,aAClB,CAAEjF,GAAI,KAAMiF,KAAM,aAClB,CAAEjF,GAAI,KAAMiF,KAAM,cAClB,CAAEjF,GAAI,KAAMiF,KAAM,YAClB,CAAEjF,GAAI,KAAMiF,KAAM,UAClB,CAAEjF,GAAI,KAAMiF,KAAM,uBAClB,CAAEjF,GAAI,KAAMiF,KAAM,oBAClB,CAAEjF,GAAI,KAAMiF,KAAM,UAClB,CAAEjF,GAAI,KAAMiF,KAAM,gBCnBPoL,GAAA,CACX,CAAErQ,GAAI,EAAGiF,KAAM,MACf,CAAEjF,GAAI,EAAGiF,KAAM,kBACf,CAAEjF,GAAI,EAAGiF,KAAM,QACf,CAAEjF,GAAI,EAAGiF,KAAM,SACf,CAAEjF,GAAI,EAAGiF,KAAM,iBACf,CAAEjF,GAAI,EAAGiF,KAAM,SACf,CAAEjF,GAAI,EAAGiF,KAAM,UACf,CAAEjF,GAAI,EAAGiF,KAAM,eACf,CAAEjF,GAAI,EAAGiF,KAAM,gBACf,CAAEjF,GAAI,GAAIiF,KAAM,gBAChB,CAAEjF,GAAI,GAAIiF,KAAM,UAChB,CAAEjF,GAAI,GAAIiF,KAAM,cAChB,CAAEjF,GAAI,GAAIiF,KAAM,cAChB,CAAEjF,GAAI,GAAIiF,KAAM,SAChB,CAAEjF,GAAI,GAAIiF,KAAM,eAChB,CAAEjF,GAAI,GAAIiF,KAAM,WAChB,CAAEjF,GAAI,GAAIiF,KAAM,aAChB,CAAEjF,GAAI,GAAIiF,KAAM,UAChB,CAAEjF,GAAI,GAAIiF,KAAM,kBAChB,CAAEjF,GAAI,GAAIiF,KAAM,oBAChB,CAAEjF,GAAI,GAAIiF,KAAM,eAChB,CAAEjF,GAAI,GAAIiF,KAAM,oBAChB,CAAEjF,GAAI,GAAIiF,KAAM,kBAChB,CAAEjF,GAAI,GAAIiF,KAAM,iBAChB,CAAEjF,GAAI,GAAIiF,KAAM,iBAChB,CAAEjF,GAAI,GAAIiF,KAAM,QAChB,CAAEjF,GAAI,GAAIiF,KAAM,iBAChB,CAAEjF,GAAI,GAAIiF,KAAM,2BAChB,CAAEjF,GAAI,GAAIiF,KAAM,mBAChB,CAAEjF,GAAI,GAAIiF,KAAM,yBAChB,CAAEjF,GAAI,GAAIiF,KAAM,cAChB,CAAEjF,GAAI,GAAIiF,KAAM,gBAChB,CAAEjF,GAAI,GAAIiF,KAAM,iCAChB,CAAEjF,GAAI,GAAIiF,KAAM,SAChB,CAAEjF,GAAI,GAAIiF,KAAM,iBAChB,CAAEjF,GAAI,GAAIiF,KAAM,eAChB,CAAEjF,GAAI,GAAIiF,KAAM,eAChB,CAAEjF,GAAI,GAAIiF,KAAM,gBAChB,CAAEjF,GAAI,GAAIiF,KAAM,cAChB,CAAEjF,GAAI,GAAIiF,KAAM,aAChB,CAAEjF,GAAI,GAAIiF,KAAM,gBAChB,CAAEjF,GAAI,GAAIiF,KAAM,qBC1CLqL,GAAA,CACX,CAAEtQ,GAAI,EAAGiF,KAAM,OACf,CAAEjF,GAAI,EAAGiF,KAAM,QACf,CAAEjF,GAAI,EAAGiF,KAAM,oBACf,CAAEjF,GAAI,EAAGiF,KAAM,WACf,CAAEjF,GAAI,EAAGiF,KAAM,sBACf,CAAEjF,GAAI,EAAGiF,KAAM,YACf,CAAEjF,GAAI,EAAGiF,KAAM,aCPJsL,GAAA,CACX,CAAEvQ,GAAI,EAAGiF,KAAM,IACf,CAAEjF,GAAI,EAAGiF,KAAM,OACf,CAAEjF,GAAI,EAAGiF,KAAM,MACf,CAAEjF,GAAI,EAAGiF,KAAM,WACf,CAAEjF,GAAI,EAAGiF,KAAM,UACf,CAAEjF,GAAI,EAAGiF,KAAM,WACf,CAAEjF,GAAI,EAAGiF,KAAM,OACf,CAAEjF,GAAI,EAAGiF,KAAM,OACf,CAAEjF,GAAI,EAAGiF,KAAM,OACf,CAAEjF,GAAI,EAAGiF,KAAM,MACf,CAAEjF,GAAI,GAAIiF,KAAM,UAChB,CAAEjF,GAAI,GAAIiF,KAAM,MAChB,CAAEjF,GAAI,GAAIiF,KAAM,MAChB,CAAEjF,GAAI,GAAIiF,KAAM,WAChB,CAAEjF,GAAI,GAAIiF,KAAM,SAChB,CAAEjF,GAAI,GAAIiF,KAAM,MAChB,CAAEjF,GAAI,GAAIiF,KAAM,OAChB,CAAEjF,GAAI,GAAIiF,KAAM,MAChB,CAAEjF,GAAI,GAAIiF,KAAM,MAChB,CAAEjF,GAAI,GAAIiF,KAAM,SAChB,CAAEjF,GAAI,GAAIiF,KAAM,MAChB,CAAEjF,GAAI,GAAIiF,KAAM,OAChB,CAAEjF,GAAI,GAAIiF,KAAM,WAChB,CAAEjF,GAAI,GAAIiF,KAAM,SAChB,CAAEjF,GAAI,GAAIiF,KAAM,oDClBduL,GAAY,SAAArT,GAaZ,IAZFsB,EAYEtB,EAZFsB,UACAuB,EAWE7C,EAXF6C,GACAvE,EAUE0B,EAVF1B,MACA2K,EASEjJ,EATFiJ,SACAzB,EAQExH,EARFwH,SACAM,EAOE9H,EAPF8H,KACAwL,EAMEtT,EANFsT,eACA7L,EAKEzH,EALFyH,YACAC,EAIE1H,EAJF0H,iBACAC,EAGE3H,EAHF2H,OACAC,EAEE5H,EAFF4H,QACAC,EACE7H,EADF6H,sBASM0L,EAAgBjV,EAAQO,IAAOP,GAAOQ,OAAO,KAAO,GAE1D,OACIZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACK2B,cAAIiC,EAAQG,EAAM,KAAOpC,cAAIkC,EAASE,EAAM,KAAOJ,EAChDxJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAS,GAAAb,OAAKoH,IAA0BnC,cAAIiC,EAAQG,EAAM,KACjE,KACJ5J,EAAAC,EAAAC,cAACoV,GAAArV,EAAD,CACI0E,GAAIA,EACJvE,MAAOiV,EACPE,YAjBY,SAAAC,GAEpB,IAAMH,EAAgBG,EAAO7U,IAAO6U,GAAM5U,OAAO,WAAa,GAE9DwU,EAAexL,EAAMyL,IAcbI,WAAYA,cACZC,UAAWA,aACXC,eAAgB,CACZC,iBAAiB,EACjBC,OAAQ,KACRC,eAAgB,EAChBC,YAAaC,MAEjBC,WAAY,CACR7S,UAAS,8BAAAb,OAAgCa,EAAhC,KAAAb,OACLsH,QAAQrC,cAAIiC,EAAQG,EAAM,KAAOpC,cAAIkC,EAASE,EAAM,KAAO,iBAAmB,GADzE,KAGTA,KAAMA,EACNsM,aAAc,MACd5M,SAAUA,EACV/E,SAAU+E,EACVC,YAAaA,GAEjBwB,SAAUA,EACVzB,SAAUA,EACVC,YAAa,OAM7B4L,GAAUrL,aAAe,CACrB1G,UAAW,GACX2H,SAAU,GACVzB,UAAU,EACVlJ,MAAO,KACPmJ,YAAa,GACbC,kBAAkB,EAClBG,sBAAuB,cACvBF,OAAQ,GACRC,QAAS,IAmBEyL,UCkdAgB,GAhiBoB,SAAArU,GAQhC,IAPC2R,EAOD3R,EAPC2R,eACAC,EAMD5R,EANC4R,eACA0C,EAKDtU,EALCsU,mBACA3M,EAID3H,EAJC2H,OACAC,EAGD5H,EAHC4H,QACA1B,EAEDlG,EAFCkG,OACAqO,EACDvU,EADCuU,cAEA,OACIrW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,mBAAoB4E,EAAOyJ,SAGrDzR,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,wBAAtB,QACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,iBACLb,OAAQ,SAAA1F,GAAA,IAAG+F,EAAH/F,EAAG+F,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,WACH4E,YAAa,SACboL,QAASM,UAM7BjV,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,kBACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,WACH4E,YAAa,kBAK7BvJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,mBACLb,OAAQ,SAAAhF,GAAA,IAAGqF,EAAHrF,EAAGqF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,aACH4E,YAAa,kBAMjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,0BACLb,OAAQ,SAAAwN,GAAA,IAAGnN,EAAHmN,EAAGnN,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,sBACHgQ,QAASO,GACT3L,YAAa,sBAK7BvJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,kBACLb,OAAQ,SAAAyN,GAAA,IAAGpN,EAAHoN,EAAGpN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,YACH4E,YAAa,oBAMjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,gBACRpR,UAAWsQ,EAAe+C,cAAgB,uBAAyB,eAFvE,iBAMAzW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,qBACLb,OAAQ,SAAA2N,GAAA,IAAGtN,EAAHsN,EAAGtN,MAAH,OACJpJ,EAAAC,EAAAC,cAACyW,GAAD/W,OAAAkJ,OAAA,GACQM,EADR,CAEIK,OAAQA,EACRC,QAASA,EACT0L,eAAgBiB,EAChB1R,GAAG,gBACH4E,YAAa,wBAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,uBAAuBpR,UAAW,wBAArD,+BAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,4BACLb,OAAQ,SAAA6N,GAAA,IAAGxN,EAAHwN,EAAGxN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,uBACH4E,YAAa,gBAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,gBAAgBpR,UAAU,eAA7C,oBAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,qBACLb,OAAQ,SAAA8N,GAAA,IAAGzN,EAAHyN,EAAGzN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,gBACH4E,YAAa,gBAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,qBACRpR,UAAWsQ,EAAe+C,cAAgB,uBAAyB,eAFvE,oBAMAzW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,4BACLb,OAAQ,SAAA+N,GAAA,IAAG1N,EAAH0N,EAAG1N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,qBACH4E,YAAa,gBAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,qBAAqBpR,UAAW,eAAnD,oBAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,wBACLb,OAAQ,SAAAgO,GAAA,IAAG3N,EAAH2N,EAAG3N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,qBACH4E,YAAa,gBAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,SAASpR,UAAU,wBAAtC,SAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,IACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,wBACLb,OAAQ,SAAAiO,GAAA,IAAG5N,EAAH4N,EAAG5N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,SACH4E,YAAa,gBAOjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,wBACLb,OAAQ,SAAAkO,GAAA,IAAG7N,EAAH6N,EAAG7N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,gBACH4E,YAAa,eAK7BvJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,0BACLb,OAAQ,SAAAmO,GAAA,IAAG9N,EAAH8N,EAAG9N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,WACH4E,YAAa,oBAMjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,4BACLb,OAAQ,SAAAoO,GAAA,IAAG/N,EAAH+N,EAAG/N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,cACH4E,YAAa,WACbhF,SAAUmP,EAAe0D,8BAKzCpX,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,sBACLb,OAAQ,SAAAsO,GAAA,IAAGjO,EAAHiO,EAAGjO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,OACH4E,YAAa,gBAMjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,2BACLb,OAAQ,SAAAuO,GAAA,IAAGlO,EAAHkO,EAAGlO,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,aACH4E,YAAa,oBACboL,QAASI,WAQjC/U,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,OACRpR,UAAWsQ,EAAe+C,cAAgB,uBAAyB,eAFvE,iBAMAzW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,OACLb,OAAQ,SAAAwO,GAAA,IAAGnO,EAAHmO,EAAGnO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,OACH4E,YAAa,+BAMjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,WACLb,OAAQ,SAAAyO,GAAA,IAAGpO,EAAHoO,EAAGpO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,YACH4E,YAAa,0BAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,gBAAgBpR,UAAW,wBAA9C,yBAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,cACLb,OAAQ,SAAA0O,GAAA,IAAGrO,EAAHqO,EAAGrO,MAAH,OACJpJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,2BACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,YACDD,EAFR,CAGIzE,GAAG,gBACH4P,QAASnL,EAAMhJ,MACfgD,UAAU,4BACVmB,SAAUmP,EAAeI,eAE7B9T,EAAAC,EAAAC,cAAA,QAAMsU,QAAQ,gBAAgBpR,UAAU,+BAAxC,oBACsB,IAClBpD,EAAAC,EAAAC,cAAA,KAAGuU,KAAMhB,EAAc,kBAAuB5Q,OAAO,UAArD,iBAEK,IACJmF,EAAO8L,YACJ9T,EAAAC,EAAAC,cAAA,cAEKwT,EAAeK,gBACVpT,IAAO+S,EAAeK,iBAAiBnT,OAAO,KAC9CD,MAASC,OAAO,KAJ1B,KAQA,IAGP8I,EAAQN,EAAMQ,OAASH,EAAOL,EAAMQ,MACjC5J,EAAAC,EAAAC,cAAA,OAAKkD,UAAW,6BAA8BqG,EAAOL,EAAMQ,OAC3D,WAOxB5J,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,qBACRpR,UAC2B,4BAAvBgT,EAAmD,uBAAyB,eAHpF,sBAQApW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,gDACLb,OAAQ,SAAA2O,GAAA,IAAGtO,EAAHsO,EAAGtO,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,qBACH4E,YAAa,2BACboL,QAASK,UAY5BhN,EAAOuI,8BAAgCvI,EAAOuI,6BAA6BsC,iBACxE7S,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,YACRpR,UAC2B,4BAAvBgT,EACM,uBACA,eALd,gCAUApW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,wCACLb,OAAQ,SAAA4O,GAAA,IAAGvO,EAAHuO,EAAGvO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,YACH4E,YAAa,sCAajCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,eAAepR,UAAW,eAA7C,+BAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,2CACLb,OAAQ,SAAA6O,GAAA,IAAGxO,EAAHwO,EAAGxO,MAAH,OACJpJ,EAAAC,EAAAC,cAACyW,GAAD/W,OAAAkJ,OAAA,GACQM,EADR,CAEIK,OAAQA,EACRC,QAASA,EACT0L,eAAgBiB,EAChB1R,GAAG,eACH4E,YAAa,sBAYjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,kBACRpR,UAC2B,4BAAvBgT,EACM,uBACA,eALd,4BAUApW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,8CACLb,OAAQ,SAAA8O,GAAA,IAAGzO,EAAHyO,EAAGzO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,kBACH4E,YAAa,kCAajCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,UAAUpR,UAAW,eAAxC,kBAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,sCACLb,OAAQ,SAAA+O,GAAA,IAAG1O,EAAH0O,EAAG1O,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,UACH4E,YAAa,yBAarC,gBCriBLwO,GAAA,CACXC,sBAAuBrN,WAAaC,MAAM,CAEtCkJ,YAAanJ,SAAWsN,KACpB,cACA,8CACA,SAAA7X,GAAK,OAAc,IAAVA,IAEb6P,OAAQtF,WAAaC,MAAM,CACvByJ,SAAU1J,WACLuN,OACAnN,SAAS,eAElBsH,oBAAqB1H,WAAaC,MAAM,CACpCE,MAAOH,WACFuN,OACApN,MAAM,yBACNC,SAAS,eAElBwH,aAAc5H,WAAaC,MAAM,CAC7BE,MAAOH,WACFuN,OACApN,MAAM,2BAEfgH,eAAgBnH,WAAaC,MAAM,CAC/B4G,OAAQ7G,WACHuN,OACAnN,SAAS,aACd0G,OAAQ9G,WACHwN,WACAD,OACAD,KAAK,SAAU,iBAAkB,SAAA7X,GAC9B,OAAOgY,OAAOC,WAAWjY,KAE5B2K,SAAS,aACd4G,WAAYhH,WACPuN,OACA1J,IAAI,EAAG,6CACPzD,SAAS,aACd6G,KAAMjH,WACDuN,OACAnN,SAAS,iBAItBuN,2BAA4B3N,WAAaC,MAAM,CAC3CqF,OAAQtF,WAAaC,MAAM,CACvB2N,QAAS5N,WACJwN,WACApN,SAAS,aACdoJ,UAAWxJ,WACNuN,OACAnN,SAAS,aACduJ,YAAa3J,SACR6N,UAAU,gCACVzN,SAAS,eAElB0H,mBAAoB9H,WAAaC,MAAM,CACnC6G,OAAQ9G,WACHuN,OACAnN,SAAS,eAElB6I,KAAMjJ,WACDuN,OACAC,WACApN,SAAS,aACTkN,KAAK,OAAQ,mBAAoB,SAAA7X,GAAK,OAAIqY,KAAsBrY,KACrEyT,SAAUlJ,WACLuN,OACAC,WACApN,SAAS,gBC0BP2N,OAxFf,SAAA5W,GAA+F,IAA7D2R,EAA6D3R,EAA7D2R,eAAgBC,EAA6C5R,EAA7C4R,eAAgBiF,EAA6B7W,EAA7B6W,0BAA6BtZ,EAC3DC,oBAAS,GADkDK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACpFuZ,EADoFjZ,EAAA,GAC1EkZ,EAD0ElZ,EAAA,GAGrF+K,EAAmBgJ,EAAe+C,cAClCsB,GAAyBC,sBAAsBzV,OAAOwV,GAAyBO,4BAC/EP,GAAyBC,sBAE/B,OACIhY,EAAAC,EAAAC,cAAA,WACK0Y,EACG5Y,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAesI,EACfrI,oBAAoB,EACpBX,iBAAkBA,EAClBY,SAAU,SAACtD,EAAQuD,GACfA,EAAQC,eAAc,GACtBmN,EAA0B3Q,EAAQuD,EAAS,kBAAMsN,GAAY,MAEjE9P,OAAQ,SAAA1F,GAA4E,IAAzEoG,EAAyEpG,EAAzEoG,OAAQC,EAAiErG,EAAjEqG,QAAS2M,EAAwDhT,EAAxDgT,cAAe5K,EAAyCpI,EAAzCoI,aAAczD,EAA2B3E,EAA3B2E,OAAQkD,EAAmB7H,EAAnB6H,aAE7D,OACIlL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAAC4Y,GAAD,CACIrF,eAAgBA,EAChBC,eAAgBA,EAChBhK,QAASA,EACTD,OAAQA,EACR4M,cAAeA,EACfrO,OAAQA,IAEZhI,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,eACtCpD,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CACIsO,QAAS,eACThE,KAAK,KACL1G,QAAS,WACLgV,GAAY,KAJpB,aASA7Y,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CACImD,UAAW,WACXmH,KAAK,KACL1G,QAASqH,EACT3G,SAAUkH,GAETA,EACGzL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAYC,MAAO,QAASF,KAAM,KADtC,qBAKA,kBAWpCvK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAAC+Y,GAAD,CAA4BxF,eAAgBA,EAAgBC,eAAgBA,IAC5E1T,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,eACtCpD,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CACImD,UAAW,WACXmH,KAAK,KACL1G,QAAS,WACLgV,GAAY,KAJpB,gBC+LjBK,OAzQf,SAAApX,GAA4E,IAAlC2R,EAAkC3R,EAAlC2R,eAAgBC,EAAkB5R,EAAlB4R,eAAkByF,EAiBpEzF,EAfAxD,oBAFoE,IAAAiJ,EAErD,GAFqDA,EAGpE9G,EAcAqB,EAdArB,oBACAE,EAaAmB,EAbAnB,aACAE,EAYAiB,EAZAjB,mBACAE,EAWAe,EAXAf,eACAZ,EAUA2B,EAVA3B,aACAC,EASA0B,EATA1B,cACAC,EAQAyB,EARAzB,eACA2B,EAOAF,EAPAE,KACAC,EAMAH,EANAG,SACAC,EAKAJ,EALAI,YACAC,EAIAL,EAJAK,gBACAtC,EAGAiC,EAHAjC,OACAlB,EAEAmD,EAFAnD,6BAIJ,OAFImD,EADA0F,mBAIApZ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,mBAAoBqO,IAG9CzR,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,gBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,gBACjD2G,EAAatG,OAItB5J,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,OACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,OACjD2G,EAAamJ,0BAItBrZ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,cACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,cACjD2G,EAAaoJ,YAItBtZ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,yBACjDqK,IAGT5T,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,oBACjDsK,IAIT7T,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,WACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,WACjD2G,EAAaqJ,UAItBvZ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,yBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAA,OAAKkD,UAAW,mBACZpD,EAAAC,EAAAC,cAAA,SACImJ,KAAK,WACL1E,GAAG,gBACH4P,QAAST,EACT1Q,UAAU,4BACVmB,UAAU,IAEdvE,EAAAC,EAAAC,cAAA,QAAMsU,QAAQ,gBAAgBpR,UAAU,+BAAxC,oBACsB,IAClBpD,EAAAC,EAAAC,cAAA,KAAGuU,KAAMhB,EAAc,kBAAuB5Q,OAAO,UAArD,iBAEK,IACJiR,EAAc9T,EAAAC,EAAAC,cAAA,cAAM6T,EAAkBpT,IAAOoT,GAAiBnT,OAAO,KAAO,GAA9D,KAA0E,MAKrGZ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,+BACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,eACjD8I,EAAoBvH,QAI7B9K,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,oBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,eACjDgJ,EAAazH,QAItB9K,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,oBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,kBACjDkJ,EAAmBhB,SAI5BzR,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,oBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,kBACjDoJ,EAAelB,UAI5BzR,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,aACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjDyI,EAAcR,SAGvBxR,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjDyI,EAAcP,QAEnBzR,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,cACjDyI,EAAcN,WAGvB1R,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,YACjDyI,EAAcL,YAEnB3R,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjDyI,EAAcJ,OAGvB5R,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,QACjDyI,EAAc1B,QAAU0B,EAAc1B,QAAQ1G,KAAO,IAC7C,KAEjB5J,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,eACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjDwI,EAAaP,SAGtBxR,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjDwI,EAAaN,QAElBzR,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,cACjDwI,EAAaL,WAGtB1R,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,YACjDwI,EAAaJ,YAElB3R,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjDwI,EAAaH,OAGtB5R,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,QACjDwI,EAAazB,QAAUyB,EAAazB,QAAQ1G,KAAO,KAG5D5J,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,cACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjD0I,EAAeT,SAGxBxR,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjD0I,EAAeR,QAEpBzR,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,cACjD0I,EAAeP,WAGxB1R,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,YACjD0I,EAAeN,YAEpB3R,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,UACjD0I,EAAeL,OAGxB5R,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,QACjD0I,EAAe3B,QAAU2B,EAAe3B,QAAQ1G,KAAO,KAIhE5J,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,sBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,sBACjDgH,EAA6BC,eACxBD,EAA6BC,eAAe5G,KAC5C,KAIb2G,GAAgCA,EAA6BsC,iBAC1D7S,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,gCACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,gBACjDgH,EAA6BuC,WAItC9S,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,+BACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,eACjDgH,EAA6ByC,YACxBrS,IAAO4P,EAA6ByC,aAAapS,OAAO,KACxD,KAIdZ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,4BACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,4BACjDgH,EAA6BwC,iBAItC/S,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,kBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,kBAAmBmG,YAAa,kBACjDgH,EAA6B0C,UAK1C,MCkfLuG,GA5tBwB,SAAA1X,GAQpC,IAPC2R,EAOD3R,EAPC2R,eACAC,EAMD5R,EANC4R,eACA0C,EAKDtU,EALCsU,mBACA3M,EAID3H,EAJC2H,OACAC,EAGD5H,EAHC4H,QACA1B,EAEDlG,EAFCkG,OACAqO,EACDvU,EADCuU,cAEA,OACIrW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iBACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAAC+T,GAAD,CAAW7Q,UAAW,mBAAoB4E,EAAOyJ,SAGrDzR,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,wBAAtB,QACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,oBACLb,OAAQ,SAAA1F,GAAA,IAAG+F,EAAH/F,EAAG+F,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,OACH4E,YAAa,cAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,OACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,uCACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,6BACH4E,YAAa,aAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,cACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,yBACLb,OAAQ,SAAAhF,GAAA,IAAGqF,EAAHrF,EAAGqF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,aACH4E,YAAa,oBAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,OACRpR,UAAWsQ,EAAe+C,cAAgB,uBAAyB,eAFvE,iBAMAzW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,OACLb,OAAQ,SAAAwN,GAAA,IAAGnN,EAAHmN,EAAGnN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,OACH4E,YAAa,+BAMjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,WACLb,OAAQ,SAAAyN,GAAA,IAAGpN,EAAHoN,EAAGpN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,YACH4E,YAAa,0BAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,WACApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,uBACLb,OAAQ,SAAA2N,GAAA,IAAGtN,EAAHsN,EAAGtN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,UACH4E,YAAa,iBAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,gBAAgBpR,UAAW,wBAA9C,yBAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,cACLb,OAAQ,SAAA6N,GAAA,IAAGxN,EAAHwN,EAAGxN,MAAH,OACJpJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,2BACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,YACDD,EAFR,CAGIzE,GAAG,gBACH4P,QAASnL,EAAMhJ,MACfgD,UAAU,4BACVmB,SAAUmP,EAAeI,eAE7B9T,EAAAC,EAAAC,cAAA,QAAMsU,QAAQ,gBAAgBpR,UAAU,+BAAxC,oBACsB,IAClBpD,EAAAC,EAAAC,cAAA,KAAGuU,KAAMhB,EAAc,kBAAuB5Q,OAAO,UAArD,iBAEK,IACJmF,EAAO8L,YACJ9T,EAAAC,EAAAC,cAAA,cAEKwT,EAAeK,gBACVpT,IAAO+S,EAAeK,iBAAiBnT,OAAO,KAC9CD,MAASC,OAAO,KAJ1B,KAQA,IAGP8I,EAAQN,EAAMQ,OAASH,EAAOL,EAAMQ,MACjC5J,EAAAC,EAAAC,cAAA,OAAKkD,UAAW,6BAA8BqG,EAAOL,EAAMQ,OAC3D,WAOxB5J,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,uBAAuBpR,UAAW,wBAArD,+BAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,4BACLb,OAAQ,SAAA8N,GAAA,IAAGzN,EAAHyN,EAAGzN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,uBACH4E,YAAa,gBAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,gBAAgBpR,UAAU,eAA7C,oBAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,qBACLb,OAAQ,SAAA+N,GAAA,IAAG1N,EAAH0N,EAAG1N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,gBACH4E,YAAa,gBAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,qBACRpR,UAAWsQ,EAAe+C,cAAgB,uBAAyB,eAFvE,oBAMAzW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,4BACLb,OAAQ,SAAAgO,GAAA,IAAG3N,EAAH2N,EAAG3N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,qBACH4E,YAAa,gBAOjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,qBAAqBpR,UAAW,eAAnD,oBAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,wBACLb,OAAQ,SAAAiO,GAAA,IAAG5N,EAAH4N,EAAG5N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,qBACH4E,YAAa,iBAQrCvJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,SAASpR,UAAU,wBAAtC,aAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,IACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,uBACLb,OAAQ,SAAAkO,GAAA,IAAG7N,EAAH6N,EAAG7N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,SACH4E,YAAa,gBAOjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,uBACLb,OAAQ,SAAAmO,GAAA,IAAG9N,EAAH8N,EAAG9N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,gBACH4E,YAAa,eAK7BvJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,yBACLb,OAAQ,SAAAoO,GAAA,IAAG/N,EAAH+N,EAAG/N,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,WACH4E,YAAa,oBAMjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,2BACLb,OAAQ,SAAAsO,GAAA,IAAGjO,EAAHiO,EAAGjO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,cACH4E,YAAa,iBAK7BvJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,qBACLb,OAAQ,SAAAuO,GAAA,IAAGlO,EAAHkO,EAAGlO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,OACH4E,YAAa,gBAMjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,0BACLb,OAAQ,SAAAwO,GAAA,IAAGnO,EAAHmO,EAAGnO,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,aACH4E,YAAa,oBACboL,QAASI,UAO7B/U,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,SACRpR,UAC2B,4BAAvBgT,EAAmD,uBAAyB,eAHpF,eAQApW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,IACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,sBACLb,OAAQ,SAAAyO,GAAA,IAAGpO,EAAHoO,EAAGpO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,SACH4E,YAAa,gBAOjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,sBACLb,OAAQ,SAAA0O,GAAA,IAAGrO,EAAHqO,EAAGrO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,gBACH4E,YAAa,eAK7BvJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,wBACLb,OAAQ,SAAA2O,GAAA,IAAGtO,EAAHsO,EAAGtO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,WACH4E,YAAa,oBAMjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,0BACLb,OAAQ,SAAA4O,GAAA,IAAGvO,EAAHuO,EAAGvO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,cACH4E,YAAa,WACbhF,SAAUmP,EAAe0D,8BAKzCpX,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,oBACLb,OAAQ,SAAA6O,GAAA,IAAGxO,EAAHwO,EAAGxO,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,OACH4E,YAAa,gBAMjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,yBACLb,OAAQ,SAAA8O,GAAA,IAAGzO,EAAHyO,EAAGzO,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,aACH4E,YAAa,oBACboL,QAASI,UAO7B/U,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,SAASpR,UAAU,eAAtC,cAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,IACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,wBACLb,OAAQ,SAAA+O,GAAA,IAAG1O,EAAH0O,EAAG1O,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,SACH4E,YAAa,gBAOjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,wBACLb,OAAQ,SAAA0Q,GAAA,IAAGrQ,EAAHqQ,EAAGrQ,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,gBACH4E,YAAa,eAK7BvJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,0BACLb,OAAQ,SAAA2Q,GAAA,IAAGtQ,EAAHsQ,EAAGtQ,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,WACH4E,YAAa,oBAMjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,4BACLb,OAAQ,SAAA4Q,GAAA,IAAGvQ,EAAHuQ,EAAGvQ,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,cACH4E,YAAa,iBAK7BvJ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,sBACLb,OAAQ,SAAA6Q,GAAA,IAAGxQ,EAAHwQ,EAAGxQ,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,OACH4E,YAAa,gBAMjCvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GACbhO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,2BACLb,OAAQ,SAAA8Q,GAAA,IAAGzQ,EAAHyQ,EAAGzQ,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,aACH4E,YAAa,oBACboL,QAASI,UAO7B/U,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,qBACRpR,UAC2B,4BAAvBgT,EAAmD,uBAAyB,eAHpF,sBAQApW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,gDACLb,OAAQ,SAAA+Q,GAAA,IAAG1Q,EAAH0Q,EAAG1Q,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,qBACH4E,YAAa,2BACboL,QAASK,UAY5BhN,EAAOuI,8BAAgCvI,EAAOuI,6BAA6BsC,iBACxE7S,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,YACRpR,UAC2B,4BAAvBgT,EACM,uBACA,eALd,gCAUApW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,wCACLb,OAAQ,SAAAgR,GAAA,IAAG3Q,EAAH2Q,EAAG3Q,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,YACH4E,YAAa,sCAajCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,eAAepR,UAAW,eAA7C,+BAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,2CACLb,OAAQ,SAAAiR,GAAA,IAAG5Q,EAAH4Q,EAAG5Q,MAAH,OACJpJ,EAAAC,EAAAC,cAACyW,GAAD/W,OAAAkJ,OAAA,GACQM,EADR,CAEIK,OAAQA,EACRC,QAASA,EACT0L,eAAgBiB,EAChB1R,GAAG,eACH4E,YAAa,sBAYjCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CACIuU,QAAQ,kBACRpR,UAC2B,4BAAvBgT,EACM,uBACA,eALd,4BAUApW,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,8CACLb,OAAQ,SAAAkR,GAAA,IAAG7Q,EAAH6Q,EAAG7Q,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,kBACH4E,YAAa,kCAajCvJ,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWuU,QAAQ,UAAUpR,UAAW,eAAxC,kBAGApD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIsK,GAAI,GAAIC,GAAI,GACrBjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,sCACLb,OAAQ,SAAAmR,GAAA,IAAG9Q,EAAH8Q,EAAG9Q,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,UACH4E,YAAa,yBAarC,MC7sBL4Q,GAAA,CACXnC,sBAAuBrN,WAAaC,MAAM,CAEtCkJ,YAAanJ,SAAWsN,KACpB,cACA,8CACA,SAAA7X,GAAK,OAAc,IAAVA,IAEb8P,aAAcvF,WAAaC,MAAM,CAC7BhB,KAAMe,WACDuN,OACAnN,SAAS,eAElBsH,oBAAqB1H,WAAaC,MAAM,CACpCE,MAAOH,WACFuN,OACApN,MAAM,yBACNC,SAAS,eAElBwH,aAAc5H,WAAaC,MAAM,CAC7BE,MAAOH,WACFuN,OACApN,MAAM,2BAEfkH,cAAerH,WAAaC,MAAM,CAC9B4G,OAAQ7G,WACHuN,OACAnN,SAAS,aACd0G,OAAQ9G,WACHwN,WACAD,OACAD,KAAK,SAAU,iBAAkB,SAAA7X,GAC9B,OAAOgY,OAAOC,WAAWjY,KAE5B2K,SAAS,aACd4G,WAAYhH,WACPuN,OACAnN,SAAS,aACd6G,KAAMjH,WACDuN,OACAnN,SAAS,eAElBgH,aAAcpH,WAAaC,MAAM,CAC7B6G,OAAQ9G,WACHwN,WACAF,KAAK,SAAU,iBAAkB,SAAA7X,GAC9B,OAAOgY,OAAOC,WAAWjY,OAGrC6R,eAAgBtH,WAAaC,MAAM,CAC/B6G,OAAQ9G,WACHwN,WACAF,KAAK,SAAU,iBAAkB,SAAA7X,GAC9B,OAAOgY,OAAOC,WAAWjY,SAKzCkY,2BAA4B3N,WAAaC,MAAM,CAC3C6H,mBAAoB9H,WAAaC,MAAM,CACnC6G,OAAQ9G,WACHuN,OACAnN,SAAS,eAElB6I,KAAMjJ,WACDuN,OACAC,WACApN,SAAS,aACd8I,SAAUlJ,WACLuN,OACAC,WACApN,SAAS,gBC2BPqP,OA1Ff,SAAAtY,GAAmG,IAA7D2R,EAA6D3R,EAA7D2R,eAAgBC,EAA6C5R,EAA7C4R,eAAgBiF,EAA6B7W,EAA7B6W,0BAA6BtZ,EAC/DC,oBAAS,GADsDK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACxFuZ,EADwFjZ,EAAA,GAC9EkZ,EAD8ElZ,EAAA,GAGzF+K,EAAmBgJ,EAAe+C,cAClC0D,GAA6BnC,sBAAsBzV,OAC/C4X,GAA6B7B,4BAEjC6B,GAA6BnC,sBAEnC,OACIhY,EAAAC,EAAAC,cAAA,WACK0Y,EACG5Y,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAesI,EACfrI,oBAAoB,EACpBX,iBAAkBA,EAClBY,SAAU,SAACtD,EAAQuD,GACfA,EAAQC,eAAc,GACtBmN,EAA0B3Q,EAAQuD,EAAS,kBAAMsN,GAAY,MAEjE9P,OAAQ,SAAA1F,GAA4E,IAAzEoG,EAAyEpG,EAAzEoG,OAAQC,EAAiErG,EAAjEqG,QAAS2M,EAAwDhT,EAAxDgT,cAAe5K,EAAyCpI,EAAzCoI,aAAczD,EAA2B3E,EAA3B2E,OAAQkD,EAAmB7H,EAAnB6H,aAE7D,OACIlL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAACma,GAAD,CACI5G,eAAgBA,EAChBC,eAAgBA,EAChBhK,QAASA,EACTD,OAAQA,EACR4M,cAAeA,EACfrO,OAAQA,IAEZhI,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,eACtCpD,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CACIsO,QAAS,eACThE,KAAK,KACL1G,QAAS,WACLgV,GAAY,KAJpB,aASA7Y,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CACImD,UAAW,WACXmH,KAAK,KACL1G,QAASqH,EACT3G,SAAUkH,GAETA,EACGzL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAYC,MAAO,QAASF,KAAM,KADtC,qBAKA,kBAWpCvK,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACoa,GAAD,CAAgC7G,eAAgBA,EAAgBC,eAAgBA,IAChF1T,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,eACtCpD,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CACImD,UAAW,WACXmH,KAAK,KACL1G,QAAS,WACLgV,GAAY,KAJpB,gBCvE1B0B,GAAiB,SAASnb,GAAO,IAAAob,EAAAC,KAAApb,EACLC,mBAAS,IADJK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAC5BwI,EAD4BlI,EAAA,GACnB+a,EADmB/a,EAAA,GAAA4B,EAESjC,mBAAS,IAFlBkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAE5BkS,EAF4BjS,EAAA,GAEZmZ,EAFYnZ,EAAA,GAAA+L,EAGHjO,oBAAS,GAHNkO,EAAA5N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAG5BqN,EAH4BpN,EAAA,GAGjBqN,EAHiBrN,EAAA,GAI7BsN,EA0CN,SAAqB1a,GACjB,IAAMoC,EAAMW,mBAIZ,OAHAL,oBAAU,WACNN,EAAIG,QAAUvC,IAEXoC,EAAIG,QA/CoBoY,CAAY3b,EAAMqC,wBA2BrD,SAASuZ,IACLH,GAAW,GACX9K,GAAWC,aAAa5Q,EAAMqC,uBAAuBkD,IAChD6D,KAAK,SAAAlI,GACF,IAAMgR,EAAc2J,GAAc3a,EAAQmI,KAAKA,MAE/CiS,EAAWpJ,GACXuJ,GAAW,KAEdnS,MAAM,SAAAvB,GACHwB,MAAM,8DACNkS,GAAW,KAYvB,SAASlC,EAA0B3Q,EAAQuD,EAAS2P,GAChD,IAAMC,EAAcvb,OAAA4M,GAAA,EAAA5M,CAAA,GAAQiI,EAAYG,GACxC+H,GAAWiB,cAAcmK,GACpB3S,KAAK,SAAAlI,GACF0a,IACAzP,EAAQC,eAAc,GACtB0P,MAEHxS,MAAM,SAAAvB,GACHoE,EAAQC,eAAc,GACtB7C,MAAM,kEAIlB,OA9DA7F,oBAAU,WAQN8J,GAAkBC,oBANd,uJAOCrE,KAAK,SAAAlI,GACFqa,EAAkB/a,OAAA4M,GAAA,EAAA5M,CAAA,GAAKU,EAAQmI,SAElCC,MAAM,SAAAvB,GACHqT,EAAKY,SAAS,CAAER,WAAW,EAAOS,UAAU,MAIhDjc,EAAMqC,uBAAuBkD,KAExBmW,GAA8BA,EAA2BnW,IAAMvF,EAAMqC,uBAAuBkD,IAC7FqW,MAGT,CAAC5b,EAAMqC,yBAwCNzB,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,mBACVwX,EACG5a,EAAAC,EAAAC,cAACob,GAAD,MAEAtb,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,iCACXpD,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,cACtCpD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMnC,GAAE,0BACJrC,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,MAApC,0BAFR,OAOIvK,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMnC,GAAE,6BACJrC,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,MAApC,uBAKRvK,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,mBACApD,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,WAEK,WAAnByE,EAAQ7C,OACLhF,EAAAC,EAAAC,cAACqb,GAAD,CACI9H,eAAgBA,EAChBC,eAAgB7L,EAChB8Q,0BAA2BA,IAE/B,KAEgB,iBAAnB9Q,EAAQ7C,OACLhF,EAAAC,EAAAC,cAACsb,GAAD,CACI/H,eAAgBA,EAChBC,eAAgB7L,EAChB8Q,0BAA2BA,IAE/B,QAOT,SAAS8C,GAA0Brc,GAC9C,OACIY,EAAAC,EAAAC,cAAC0B,EAAD,KACK,SAAAE,GAAA,IAAGL,EAAHK,EAAGL,uBAAH,OACGzB,EAAAC,EAAAC,cAACwb,GAAD9b,OAAAkJ,OAAA,GAAoB1J,EAApB,CAA2BqC,uBAAwBA,OC5HnE,IAwIeka,GAxIe,SAAA7Z,GAA0CA,EAA/BoJ,aAA+B,IAAjBE,EAAiBtJ,EAAjBsJ,cACnD,OACIpL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAeA,EACfC,oBAAoB,EACpBC,SAAU,SAACtD,EAAQuD,GACfA,EAAQC,eAAc,GACtBoQ,QAAQC,IAAI7T,IAEhBe,OAAQ,SAAA1F,GAA8DA,EAA3DoG,OAA2DpG,EAAnDqG,QAAmDrG,EAA1CgT,cAA0C,IAA3B5K,EAA2BpI,EAA3BoI,aAAczD,EAAa3E,EAAb2E,OACrD,OACIhI,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CAAMxG,GAAG,aAAaiF,KAAK,cACvB5J,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,SACXpD,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,iBACXpD,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,0BACApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,oBACLb,OAAQ,SAAA+S,GAAY,OAChB9b,EAAAC,EAAAC,cAAA,WACK8H,EAAO+T,mBACJ/T,EAAO+T,kBAAkBlX,IAAI,SAACmX,EAAkBC,GAAnB,OACzBjc,EAAAC,EAAAC,cAAA,OAAKkF,IAAK6W,GACNjc,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAI,qBAAArH,OAAuB0Z,EAAvB,cACJlT,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,2BACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,YACDD,EAFR,CAGIzE,GAAIqX,EAAiBpS,KACrB2K,QAASyH,EAAiB5b,MAC1BgD,UAAU,+BAEdpD,EAAAC,EAAAC,cAAA,QACIsU,QAASwH,EAAiBpS,KAC1BxG,UAAU,+BAET4Y,EAAiBpS,iBAW1D5J,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,YACApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,iBACLb,OAAQ,SAAA+S,GAAY,OAChB9b,EAAAC,EAAAC,cAAA,WACK8H,EAAO6I,gBACJ7I,EAAO6I,eAAehM,IAAI,SAACqX,EAAeD,GAAhB,OACtBjc,EAAAC,EAAAC,cAAA,OAAKkF,IAAK6W,GACNjc,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAI,kBAAArH,OAAoB0Z,EAApB,cACJlT,OAAQ,SAAAhF,GAAA,IAAGqF,EAAHrF,EAAGqF,MAAH,OACJpJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,2BACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,YACDD,EAFR,CAGIzE,GAAIuX,EAActS,KAClB2K,QAAS2H,EAAc9b,MACvBgD,UAAU,+BAEdpD,EAAAC,EAAAC,cAAA,QACIsU,QAAS0H,EAActS,KACvBxG,UAAU,+BAET8Y,EAActS,iBAWvD5J,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,YACApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,iBACLb,OAAQ,SAAA+S,GAAY,OAChB9b,EAAAC,EAAAC,cAAA,WACK8H,EAAOmU,gBACJnU,EAAOmU,eAAetX,IAAI,SAACuX,EAAeH,GAAhB,OACtBjc,EAAAC,EAAAC,cAAA,OAAKkF,IAAK6W,GACNjc,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAI,kBAAArH,OAAoB0Z,EAApB,cACJlT,OAAQ,SAAAwN,GAAA,IAAGnN,EAAHmN,EAAGnN,MAAH,OACJpJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,2BACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,YACDD,EAFR,CAGIzE,GAAIyX,EAAcxS,KAClB2K,QAAS6H,EAAchc,MACvBgD,UAAU,+BAEdpD,EAAAC,EAAAC,cAAA,QACIsU,QAAS4H,EAAcxS,KACvBxG,UAAU,+BAETgZ,EAAcxS,mBAa/D5J,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,SACXpD,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,iBACXpD,EAAAC,EAAAC,cAACyL,GAAD,CACI1B,WAAY,UACZD,gBAAiB,oBACjBX,KAAM,SACNc,QAASsB,KAGjBzL,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,wBCxG5BiZ,GAxBW,WAatB,OACIrc,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,mBACXpD,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,iCACXpD,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,gBACApD,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,WACfpD,EAAAC,EAAAC,cAACoc,GAAD,CAAuBlR,cAhBb,CAClB2Q,kBAAmB,CACf,CAAEpX,GAAI,EAAGiF,KAAM,iBAAkBxJ,OAAO,GACxC,CAAEuE,GAAI,EAAGiF,KAAM,eAAgBxJ,OAAO,GACtC,CAAEuE,GAAI,EAAGiF,KAAM,eAAgBxJ,OAAO,GACtC,CAAEuE,GAAI,EAAGiF,KAAM,cAAexJ,OAAO,IAEzCyQ,eAAgB,CAAC,CAAElM,GAAI,EAAGiF,KAAM,aAAcxJ,OAAO,GAAQ,CAAEuE,GAAI,EAAGiF,KAAM,kBAAmBxJ,OAAO,IACtG+b,eAAgB,CAAC,CAAExX,GAAI,EAAGiF,KAAM,sBAAuBxJ,OAAO,UCVvDmc,GAAA,CACXC,cAAe,WAGX,OAAOtW,EAAcsB,IAFL,gBAEqB,CACjCC,OAAQ,CACJC,KAAM,CACFC,IAAK,CAAC,KAAM,OAAQ,yBAA0B,wBAC9C8I,IAAK,CACDgM,IAAK,CACD,CAAE/L,EAAG,yBAA0BgM,EAAG,KAAM/L,EAAGhQ,MAASC,OAAO,eAC3D,CAAE8P,EAAG,uBAAwBgM,EAAG,KAAM/L,EAAGhQ,MAASC,OAAO,sBAQjF+b,aAAc,SAAShY,GACnB,IAAMwH,EAAU,iBAAA5J,OAAoBoC,GAEpC,OAAOuB,EAAcsB,IAAI2E,EAAY,CACjC1E,OAAQ,CACJC,KAAM,CACFC,IAAK,CACD,KACA,OACA,cACA,yBACA,uBACA,uBACA,oBACA,oBACA,sBACA,qBACA,qBACA,gBACA,gBACA,iBACA,iBACA,sBAEJC,IAAK,CAAEmJ,YAAa,CAAEpJ,IAAK,CAAC,KAAM,mBC9CvCiV,GAAA,SAAAC,GAOX,OANKA,IAAQA,EAAS,GAItBA,EAASC,WAAoB,IAATD,GAAgB,IAEhCE,MAAMF,GAAgB,kBAE1B,UAAAta,OAAYsa,EAAOG,eAAe,KAAM,CACpCC,sBAAuB,EACvBC,sBAAuB,0BC6EhBC,OA3Ef,SAAArb,GAA2F,IAApEsb,EAAoEtb,EAApEsb,KAAMtM,EAA8DhP,EAA9DgP,QAASuM,EAAqDvb,EAArDub,sBAAuBC,EAA8Bxb,EAA9Bwb,2BACnD5S,EAAmBC,SAAW,CAChC4S,eAAgB5S,WACXI,SAAS,aACTkN,KACG,iBACA,eAAiBnH,EAAQ0M,cAAgB,SACzC,SAAApd,GAAK,OAAIA,EAAMqd,QAAQ,IAAK,MAAQ3M,EAAQ0M,gBAE/CvF,KACG,iBACA,eAAiBnH,EAAQ4M,cAAgB,WACzC,SAAAtd,GAAK,OAAIA,EAAMqd,QAAQ,IAAK,MAAQ3M,EAAQ4M,gBAE/CjP,QAAQ,uCAAwC,iBAGzD,OACIzO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIT,iBAAkBA,EAClBY,SAAU,SAAStD,EAAQuD,GACvB+R,EAA2BtV,GAC3BoV,KAEJhS,cAAeiS,GAEd,SAAAha,GAAA,IAAG6H,EAAH7H,EAAG6H,aAAclD,EAAjB3E,EAAiB2E,OAAQ0B,EAAzBrG,EAAyBqG,QAASD,EAAlCpG,EAAkCoG,OAAlC,OACGzJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACyd,GAAA1d,EAAD,KACID,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,mBACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQ0M,gBAExBxd,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,mBACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQ4M,gBAGxB1d,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,eAAvB,uBACApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,iBACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,wBAKnB3E,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,qBACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAY2I,GAAe5U,EAAOuV,mBAI1Cvd,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,eACtCpD,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,KAAK1G,QAASqH,GAAlD,4BCgBrB2S,OA9Ef,SAAA/b,GAAiG,IAApEsb,EAAoEtb,EAApEsb,KAAMtM,EAA8DhP,EAA9DgP,QAASuM,EAAqDvb,EAArDub,sBAAuBC,EAA8Bxb,EAA9Bwb,2BACzD5S,EAAmBC,SAAW,CAChCmT,uBAAwBnT,WACnB6N,UAAU,kBACVP,KACG,yBACA,eAAiBnH,EAAQiN,kBAAoB,SAC7C,SAAA3d,GAAK,OAAIA,GAAS0Q,EAAQiN,oBAE7BC,IAAIlN,EAAQmN,kBAAmB,8BAC/BC,SAAS,gCACTnT,SAAS,eAGlB,OACI/K,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIT,iBAAkBA,EAClBY,SAAU,SAAStD,EAAQuD,GACvB+R,EAA2BtV,GAC3BoV,KAEJhS,cAAeiS,GAEd,SAAAha,GAAA,IAAG6H,EAAH7H,EAAG6H,aAAclD,EAAjB3E,EAAiB2E,OAAQ0B,EAAzBrG,EAAyBqG,QAASD,EAAlCpG,EAAkCoG,OAAlC,OACGzJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACyd,GAAA1d,EAAD,KACID,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,8BACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQiN,oBAExB/d,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,8BACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQmN,oBAGxBje,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iCACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAY2I,GAAe9L,EAAQqN,sBAEvCne,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,eAAvB,6BACApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,yBACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,gCAKnB3E,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,qBACApD,EAAAC,EAAAC,cAAC+T,GAAD,KACK2I,GAAe5U,EAAO8V,uBAAyBhN,EAAQqN,uBAKpEne,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,eACtCpD,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,KAAK1G,QAASqH,GAAlD,4BCarBkT,OA9Ef,SAAAtc,GAA8F,IAApEsb,EAAoEtb,EAApEsb,KAAMtM,EAA8DhP,EAA9DgP,QAASuM,EAAqDvb,EAArDub,sBAAuBC,EAA8Bxb,EAA9Bwb,2BACtD5S,EAAmBC,SAAW,CAChCmT,uBAAwBnT,WACnB6N,UAAU,kBACVP,KACG,yBACA,eAAiBnH,EAAQiN,kBAAoB,SAC7C,SAAA3d,GAAK,OAAIA,GAAS0Q,EAAQiN,oBAE7BC,IAAIlN,EAAQmN,kBAAmB,8BAC/BC,SAAS,gCACTnT,SAAS,eAGlB,OACI/K,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIT,iBAAkBA,EAClBY,SAAU,SAAStD,EAAQuD,GACvB+R,EAA2BtV,GAC3BoV,KAEJhS,cAAeiS,GAEd,SAAAha,GAAA,IAAG6H,EAAH7H,EAAG6H,aAAclD,EAAjB3E,EAAiB2E,OAAQ0B,EAAzBrG,EAAyBqG,QAASD,EAAlCpG,EAAkCoG,OAAlC,OACGzJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACyd,GAAA1d,EAAD,KACID,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iCACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQiN,oBAExB/d,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iCACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQmN,oBAGxBje,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,oCACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAY2I,GAAe9L,EAAQqN,sBAEvCne,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,eAAvB,gCACApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,yBACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,gCAKnB3E,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,qBACApD,EAAAC,EAAAC,cAAC+T,GAAD,KACK2I,GAAe5U,EAAO8V,uBAAyBhN,EAAQqN,uBAKpEne,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,eACtCpD,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,KAAK1G,QAASqH,GAAlD,4BCiSrBmT,OAlWf,SAAAvc,GAA0G,IAApFsb,EAAoFtb,EAApFsb,KAAMtM,EAA8EhP,EAA9EgP,QAAyBuM,GAAqDvb,EAArE4R,eAAqE5R,EAArDub,uBAAuBC,EAA8Bxb,EAA9Bwb,2BAClE5S,EAAmBC,SAAW,CAChCmT,uBAAwBnT,WACnB6N,UAAU,kBACVP,KACG,yBACA,eAAiBnH,EAAQiN,kBAAoB,SAC7C,SAAA3d,GAAK,OAAIA,GAAS0Q,EAAQiN,oBAE7BC,IAAIlN,EAAQmN,kBAAmB,8BAC/BC,SAAS,gCACTnT,SAAS,aACduT,6BAA8B3T,WACzB6N,UAAU,kBACV0F,SAAS,gCACTnT,SAAS,aACdwT,cAAe5T,WACV6D,IAAI,EAAG,6CACPzD,SAAS,aACTkN,KACG,gBACA,2EACA,SAAA7X,GAAK,OAAIA,GAAS0Q,EAAQ0N,gBAAkB1N,EAAQ0N,eAAeC,SAASre,EAAMse,UAAU,EAAG,MAEvGC,uBAAwBhU,WAAa6N,UAAU,kBAC/CoG,6BAA8BjU,WAAa6N,UAAU,oBAGnDqG,EAAuC,GACvCC,EAA0C,IAEhD,SAASC,EAAuC/W,GAC5C,OAAOA,EAAO2W,uBACR3W,EAAO2W,uBAAyBG,EAChC,EAEV,SAASE,EAA8BhX,GACnC,OAAOA,EAAO4W,8BAAgC5W,EAAO4W,6BAA+B,EAC9E5W,EAAO4W,6BACPG,EAAuC/W,GACvC+W,EAAuC/W,GACvC,EAEV,SAASiX,EAA6BjX,GAKlC,OAHIA,EAAOsW,6BAA+BU,EAA8BhX,GAAU,EACxEA,EAAOsW,6BAA+BU,EAA8BhX,GACpE,EAoBd,OACIhI,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIT,iBAAkBA,EAClBY,SAAU,SAAStD,EAAQuD,GACvB+R,EAA2B1d,OAAA4M,GAAA,EAAA5M,CAAA,GAAKoI,EAAN,CAAckX,oBAAqBD,EAA6BjX,MAC1FoV,KAEJhS,cAAaxL,OAAA4M,GAAA,EAAA5M,CAAA,GACNyd,IAGN,SAAAha,GAA8D,IAA3D6H,EAA2D7H,EAA3D6H,aAAclD,EAA6C3E,EAA7C2E,OAAQ0B,EAAqCrG,EAArCqG,QAASD,EAA4BpG,EAA5BoG,OAAQ4M,EAAoBhT,EAApBgT,cACnC8I,EAAmCJ,EAAuC/W,GAC1EkX,EAAsBE,KAAKC,KAC3BJ,EAA6BjX,GAAU6W,GAEvCS,EAjChB,SAAkDtX,GAC9C,IAAIsX,EACAL,EAA6BjX,GAAU,EACjCoX,KAAKC,KACAJ,EAA6BjX,GAAU6W,EACpCC,GAER,EAOV,OALIQ,EAAqCxO,EAAQiN,kBAC7CuB,EAAqCxO,EAAQiN,kBACtCuB,EAAqCxO,EAAQmN,oBACpDqB,EAAqCxO,EAAQmN,mBAE1CqB,EAmB0CC,CAAyCvX,GAClF,OACIhI,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACyd,GAAA1d,EAAD,KACID,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iCACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQiN,oBAExB/d,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,iCACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQmN,oBAGxBje,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,oCACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAY2I,GAAe9L,EAAQqN,uBAI3Cne,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,wBAAvB,eACApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,gBACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,wBAKnB3E,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,eAAvB,yBACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQ0N,iBAExBxe,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,wBAAvB,8CAGApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,+BACLb,OAAQ,SAAAhF,GAAA,IAAGqF,EAAHrF,EAAGqF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,0CAOvB3E,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,eAAvB,gFAMRpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,oBACLb,OAAQ,SAAAwN,GAAA,IAAGnN,EAAHmN,EAAGnN,MAAH,OACJpJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,gCACXpD,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,gBACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,SACDD,EAFR,CAGIzE,GAAG,2BACH4P,QAAyB,MAAhBnL,EAAMhJ,MACfA,MAAO,IACPof,SAAU,kBAAMnJ,EAAc,oBAAqB,SAP3D,UADJ,WAaIrW,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,gBACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,SACDD,EAFR,CAGIzE,GAAG,0BACH4P,QAAyB,MAAhBnL,EAAMhJ,MACfA,MAAO,IACPof,SAAU,WACNnJ,EAAc,oBAAqB,KACnCA,EAAc,yBAA0B,OATpD,kBAqBM,MAA7BrO,EAAOyX,kBACJzf,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,eAAvB,oDAGApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,yBACLb,OAAQ,SAAAyN,GAAA,IAAGpN,EAAHoN,EAAGpN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,oCAOvB,GAEJ3E,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,eAAvB,qDAGApD,EAAAC,EAAAC,cAAC+T,GAAD,CAAWtP,GAAG,+CACTwa,EADL,UAMRnf,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,eAAvB,oCAIRpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,wBACLb,OAAQ,SAAA2N,GAAA,IAAGtN,EAAHsN,EAAGtN,MAAH,OACJpJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,gCACXpD,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,gBACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,SACDD,EAFR,CAGIzE,GAAG,+BACH4P,QAAyB,MAAhBnL,EAAMhJ,MACfA,MAAO,IACPof,SAAU,WACNnJ,EAAc,wBAAyB,KACvCA,EAAc,+BAAgC,OAT1D,UADJ,WAgBIrW,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,gBACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,SACDD,EAFR,CAGIzE,GAAG,8BACH4P,QAAyB,MAAhBnL,EAAMhJ,MACfA,MAAO,IACPof,SAAU,kBAAMnJ,EAAc,wBAAyB,SAP/D,kBAkBU,MAAjCrO,EAAO0X,sBACJ1f,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,eAAvB,4DAGApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,+BACLb,OAAQ,SAAA6N,GAAA,IAAGxN,EAAHwN,EAAGxN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,4CAQ3B,GAGJ3E,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAA,0GAEoBgf,EAFpB,wNASRlf,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,eAAvB,wCAGApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYqL,KAIpBtf,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,wBAAvB,gCAGApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,yBACLb,OAAQ,SAAA8N,GAAA,IAAGzN,EAAHyN,EAAGzN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,gCAKnB3E,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,qBACApD,EAAAC,EAAAC,cAAC+T,GAAD,KACK2I,GAAe5U,EAAO8V,uBAAyBhN,EAAQqN,uBAKpEne,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,eACtCpD,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,KAAK1G,QAASqH,GAAlD,4BClMzByU,OAlJf,SAAA7d,GAAyG,IAAtF2R,EAAsF3R,EAAtF2R,eAAgBmM,EAAsE9d,EAAtE8d,SAAUxC,EAA4Dtb,EAA5Dsb,KAAMtM,EAAsDhP,EAAtDgP,QAAS4C,EAA6C5R,EAA7C4R,eAAgBiF,EAA6B7W,EAA7B6W,0BAClEkH,EAAcnM,EAAe1O,OAAS0O,EAAe1O,OAAS,KAC9D8a,EAA8BnV,WAAaC,MAAM,CACnDkH,eAAgBnH,WAAaC,MAAM,CAC/B+G,WAAYhH,WAAasN,KACrB,4BACA,2EACA,SAAS7X,GACL,OAAO0Q,EAAQ0N,eAAeC,SAASre,EAAMse,UAAU,EAAG,QAItEnO,6BAA8B5F,WAAaC,MAAM,CAC7CiI,iBAAkBlI,WACbwN,WACApN,SAAS,aACd+H,SAAUnI,WACLwN,WACAD,OACAnN,SAAS,aACdgI,eAAgBpI,WACXwN,WACAD,OACAnN,SAAS,iBAGhBgV,EAAkCpV,WAAaC,MAAM,CACvDmH,aAAcpH,WAAaC,MAAM,CAC7B+G,WAAYhH,WACPsN,KACG,4BACA,2EACA,SAAS7X,GACL,OAAO0Q,EAAQ0N,eAAeC,SAASre,EAAMse,UAAU,EAAG,MAGjE3T,SAAS,eAElBwF,6BAA8B5F,WAAaC,MAAM,CAC7CiI,iBAAkBlI,WACbwN,WACApN,SAAS,aACd+H,SAAUnI,WACLwN,WACAD,OACAnN,SAAS,aACdgI,eAAgBpI,WACXwN,WACAD,OACAnN,SAAS,iBAIlBL,EAAmB,KACnBsN,EAAwB,KACxBM,EAA6B,KACjC,OAAQuH,GACJ,IAAK,SACD7H,EAAwBD,GAAyBC,sBACjDM,EAA6BP,GAAyBO,2BACtD5N,EAAmBsN,EAAsBzV,OAAO+V,GACZ,4BAAhCxH,EAAQC,YAAYiP,UACpBtV,EAAmBA,EAAiBnI,OAAOud,IAE/C,MACJ,IAAK,eACD9H,EAAwBmC,GAA6BnC,sBACrDM,EAA6B6B,GAA6B7B,2BAC1D5N,EAAmBsN,EAAsBzV,OAAO+V,GACZ,4BAAhCxH,EAAQC,YAAYiP,UACpBtV,EAAmBA,EAAiBnI,OAAOwd,IAKvD,OACI/f,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAesI,EACfrI,oBAAoB,EACpBX,iBAAkBA,EAClBY,SAAU,SAACtD,EAAQuD,GACfA,EAAQC,eAAc,GACtBmN,EAA0B3Q,EAAQuD,EAAS6R,IAE/CrU,OAAQ,SAAA1F,GAA4E,IAAzEoG,EAAyEpG,EAAzEoG,OAAQC,EAAiErG,EAAjEqG,QAAS2M,EAAwDhT,EAAxDgT,cAAe5K,EAAyCpI,EAAzCoI,aAAczD,EAA2B3E,EAA3B2E,OAAQkD,EAAmB7H,EAAnB6H,aAC7D,OACIlL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KAE+B,WAA1BuI,EAAe1O,OACZhF,EAAAC,EAAAC,cAAC4Y,GAAD,CACIrF,eAAgBA,EAChBC,eAAgBA,EAChB0C,mBAAoBtF,EAAQC,YAAYiP,QACxC3J,cAAeA,EACfrO,OAAQA,EACR0B,QAASA,EACTD,OAAQA,IAEZ,KAGuB,iBAA1BiK,EAAe1O,OACZhF,EAAAC,EAAAC,cAACma,GAAD,CACI5G,eAAgBA,EAChBC,eAAgBA,EAChB0C,mBAAoBtF,EAAQC,YAAYiP,QACxC3J,cAAeA,EACfrO,OAAQA,EACR0B,QAASA,EACTD,OAAQA,IAEZ,KAEJzJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,eACtCpD,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,KAAK1G,QAAS+b,GAAlD,SAGA5f,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CACImD,UAAW,WACXmH,KAAK,KACL1G,QAASqH,EACT3G,SAAUkH,GAETA,EACGzL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAYC,MAAO,QAASF,KAAM,KADtC,qBAKA,gCChBjC0V,OAzHf,SAAAne,GAAmG,IAA9EgP,EAA8EhP,EAA9EgP,QAAS8O,EAAqE9d,EAArE8d,SAAUxC,EAA2Dtb,EAA3Dsb,KAAMC,EAAqDvb,EAArDub,sBAAuBC,EAA8Bxb,EAA9Bwb,2BAC3D5S,EAAmBC,SAAW,CAChCuV,mBAAoBvV,SAAWsN,KAC3B,qBACA,+CACA,SAAA7X,GAAK,OAAc,IAAVA,IAEb+f,kBAAmBxV,SAAWsN,KAC1B,oBACA,2EACA,SAAA7X,GAAK,OAAc,IAAVA,MAIjB,OACIJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIT,iBAAkBA,EAClBY,SAAU,SAAStD,EAAQuD,GACvB+R,EAA2BtV,GAC3BoV,KAEJhS,cAAeiS,GAEd,SAAAha,GAAA,IAAG6H,EAAH7H,EAAG6H,aAAcxB,EAAjBrG,EAAiBqG,QAASD,EAA1BpG,EAA0BoG,OAA1B,OACGzJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAAA,gKAMRF,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,qBACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,2BACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,YACDD,EAFR,CAGIzE,GAAG,uBACH4P,QAASnL,EAAMhJ,MACfgD,UAAU,+BAEdpD,EAAAC,EAAAC,cAAA,QACIsU,QAAQ,uBACRpR,UAAU,+BAFd,uBAIyB,IACrBpD,EAAAC,EAAAC,cAAA,KAAGuU,KAAM3D,EAAQsP,eAAgBvd,OAAO,UAAxC,gBAIH6G,EAAQN,EAAMQ,OAASH,EAAOL,EAAMQ,MACjC5J,EAAAC,EAAAC,cAAA,OAAKkD,UAAW,6BACXqG,EAAOL,EAAMQ,OAElB,WAMxB5J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,oBACLb,OAAQ,SAAAhF,GAAA,IAAGqF,EAAHrF,EAAGqF,MAAH,OACJpJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,2BACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,YACDD,EAFR,CAGIzE,GAAG,sBACH4P,QAASnL,EAAMhJ,MACfgD,UAAU,+BAEdpD,EAAAC,EAAAC,cAAA,QACIsU,QAAQ,sBACRpR,UAAU,+BAFd,YAIc,IACVpD,EAAAC,EAAAC,cAAA,KAAGuU,KAAI,GAAAlS,OAAKuO,EAAQuP,oBAAsBxd,OAAO,UAAjD,qBAEK,IAPT,gGAWC6G,EAAQN,EAAMQ,OAASH,EAAOL,EAAMQ,MACjC5J,EAAAC,EAAAC,cAAA,OAAKkD,UAAW,6BACXqG,EAAOL,EAAMQ,OAElB,WAMxB5J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,eACtCpD,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,KAAK1G,QAAS+b,GAAlD,SAGA5f,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,KAAK1G,QAASqH,GAAlD,4DC/GlCoV,GAAiB,SAAAxe,GAAmB,IAAhB6C,EAAgB7C,EAAhB6C,GAAIvE,EAAY0B,EAAZ1B,MAK1B,OACIJ,EAAAC,EAAAC,cAACqgB,GAAAtgB,EAAD,KACID,EAAAC,EAAAC,cAAA,OAAKyE,GAAIA,EAAI6b,wBALV,CAAEC,OAAQrgB,OAUzBkgB,GAAexW,aAAe,CAC1B1J,MAAO,IAQIkgB,UCvBAI,GAAA,CACXC,yBAA0B,SAAAzP,GAGtB,OAAOhL,EAAc+B,KAFL,8BAEsBiJ,KCqI/B0P,OA9Hf,SAAA9e,GAAiE,IAA7C8d,EAA6C9d,EAA7C8d,SAAUxC,EAAmCtb,EAAnCsb,KAAMlM,EAA6BpP,EAA7BoP,eAAgB2P,EAAa/e,EAAb+e,UAAaxhB,EACfC,mBAAS,IADMK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACtDyhB,EADsDnhB,EAAA,GACrCohB,EADqCphB,EAAA,GAAA4B,EAE7BjC,oBAAS,GAFoBkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAEtDqZ,EAFsDpZ,EAAA,GAE3CqZ,EAF2CrZ,EAAA,GAG7DsB,oBAAU,WAEF+X,GAAW,GACX9K,GAAWkB,gBAAgBC,GACtB1I,KAAK,SAAAlI,GACFygB,EAAmBzgB,EAAQmI,MAC3BoS,GAAW,KAEdnS,MAAM,SAAAvB,GACHwB,MAAM,8DACNkS,GAAW,MAGxB,CAAC3J,IAgBJ,IAAMxG,EAAmBC,SAAW,CAChCqW,qBAAsBrW,SAAWsN,KAC7B,uBACA,uDACA,SAAA7X,GAAK,OAAc,IAAVA,MAIjB,OACIJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACK+U,EACG5a,EAAAC,EAAAC,cAACob,GAAD,MAEAtb,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIT,iBAAkBA,EAClBY,SAAU,SAAStD,EAAQuD,IA7B3C,SAAoCA,EAAS6R,GACzCsD,GAAsBC,yBAAyBzP,GAC1C1I,KAAK,SAAAlI,GAEFiL,EAAQC,eAAc,GACtBqV,GAAU,GACVzD,MAEH1U,MAAM,SAAAvB,GACHwB,MAAM,gEACN4C,EAAQC,eAAc,KAoBd8R,CAA2B/R,EAAS6R,IAExChS,cAAe,CAAE4V,sBAAsB,IAEtC,SAAA3d,GAAA,IAAG6H,EAAH7H,EAAG6H,aAAcxB,EAAjBrG,EAAiBqG,QAASD,EAA1BpG,EAA0BoG,OAAQgC,EAAlCpI,EAAkCoI,aAAlC,OACGzL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAAC+gB,GAAD,CAAgB7gB,MAAO0gB,IACvB9gB,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,uBACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,2BACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,YACDD,EAFR,CAGIzE,GAAG,yBACH4P,QAASnL,EAAMhJ,MACfgD,UAAU,+BAEdpD,EAAAC,EAAAC,cAAA,QACIsU,QAAQ,yBACRpR,UAAU,+BAFd,6CAMCsG,EAAQN,EAAMQ,OAASH,EAAOL,EAAMQ,MACjC5J,EAAAC,EAAAC,cAAA,OAAKkD,UAAW,6BACXqG,EAAOL,EAAMQ,OAElB,WAMxB5J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAAA,iIAMRF,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAa+Y,aAAW,QAAQ5V,UAAU,eACtCpD,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,KAAK1G,QAAS+b,GAAlD,SAGA5f,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CACImD,UAAW,WACXmH,KAAK,KACL1G,QAASqH,EACT3G,SAAUkH,GAETA,EACGzL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACsK,EAAA,EAAD,CAAYC,MAAO,QAASF,KAAM,KADtC,uBAKA,oCCxFrC2W,OA7Bf,WACI,OACIlhB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAAA,kNAKAF,EAAAC,EAAAC,cAAA,2FACAF,EAAAC,EAAAC,cAAA,6EAGRF,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAamD,UAAU,eACnBpD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMnC,GAAE,6BACJrC,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,MAApC,qCC8Eb4W,OA7Ff,SAAArf,GAWG,IAVC2R,EAUD3R,EAVC2R,eACA2N,EASDtf,EATCsf,YACAxB,EAQD9d,EARC8d,SACAxC,EAODtb,EAPCsb,KACAtM,EAMDhP,EANCgP,QACAuM,EAKDvb,EALCub,sBACAC,EAIDxb,EAJCwb,2BACA5J,EAGD5R,EAHC4R,eACAiF,EAED7W,EAFC6W,0BACAkI,EACD/e,EADC+e,UAEA,OAAQO,GACJ,KAAK,EACD,OAAQtQ,EAAQC,YAAYiP,SACxB,IAAK,OACD,OACIhgB,EAAAC,EAAAC,cAACmhB,GAAD,CACIjE,KAAMA,EACNtM,QAASA,EACTuM,sBAAuBA,EACvBC,2BAA4BA,IAGxC,IAAK,aACD,OACItd,EAAAC,EAAAC,cAACohB,GAAD,CACIlE,KAAMA,EACNtM,QAASA,EACTuM,sBAAuBA,EACvBC,2BAA4BA,IAGxC,IAAK,UACD,OACItd,EAAAC,EAAAC,cAACqhB,GAAD,CACInE,KAAMA,EACNtM,QAASA,EACTuM,sBAAuBA,EACvBC,2BAA4BA,IAGxC,IAAK,0BACD,OACItd,EAAAC,EAAAC,cAACshB,GAAD,CACIpE,KAAMA,EACNtM,QAASA,EACT4C,eAAgBA,EAChB2J,sBAAuBA,EACvBC,2BAA4BA,IAGxC,QACI,OAAO,KAGnB,KAAK,EACD,OACItd,EAAAC,EAAAC,cAACuhB,GAAD,CACIhO,eAAgBA,EAChBmM,SAAUA,EACVxC,KAAMA,EACNtM,QAASA,EACT4C,eAAgBA,EAChBiF,0BAA2BA,IAGvC,KAAK,EACD,OACI3Y,EAAAC,EAAAC,cAACwhB,GAAD,CACI5Q,QAASA,EACT8O,SAAUA,EACVxC,KAAMA,EACNC,sBAAuBA,EACvBC,2BAA4BA,IAGxC,KAAK,EACD,OACItd,EAAAC,EAAAC,cAACyhB,GAAD,CACI/B,SAAUA,EACVxC,KAAMA,EACNlM,eAAgBmM,EAChBwD,UAAWA,IAGvB,KAAK,EACD,OAAO7gB,EAAAC,EAAAC,cAAC0hB,GAAD,MACX,QACI,OAAO,OC7CJC,OAjDf,SAAA/f,GAQG,IAPC2R,EAOD3R,EAPC2R,eACA3C,EAMDhP,EANCgP,QACAuM,EAKDvb,EALCub,sBACAC,EAIDxb,EAJCwb,2BACA5J,EAGD5R,EAHC4R,eACAiF,EAED7W,EAFC6W,0BACAkI,EACD/e,EADC+e,UACDiB,EACgC/iB,IAAMO,SAAS,GAD/CyiB,EAAAniB,OAAAC,EAAA,EAAAD,CAAAkiB,EAAA,GACQV,EADRW,EAAA,GACqBC,EADrBD,EAAA,GAWC,OACI/hB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACKub,GAAe,EACZphB,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAW,QACZpD,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAA,OAAKkD,UAAW,wBACZpD,EAAAC,EAAAC,cAAA,OAAKkD,UAAS,QAAAb,OAA0B,IAAhB6e,EAAoB,UAAY,KAAxD,kBACAphB,EAAAC,EAAAC,cAAA,OAAKkD,UAAS,QAAAb,OAA0B,IAAhB6e,EAAoB,UAAY,KAAxD,eACAphB,EAAAC,EAAAC,cAAA,OAAKkD,UAAS,QAAAb,OAA0B,IAAhB6e,EAAoB,UAAY,KAAxD,kBACAphB,EAAAC,EAAAC,cAAA,OAAKkD,UAAS,QAAAb,OAA0B,IAAhB6e,EAAoB,UAAY,KAAxD,4BAIZ,KACJphB,EAAAC,EAAAC,cAAC+hB,GAAD,CACIxO,eAAgBA,EAChB2N,YAAaA,EACbxB,SAzBZ,WACIoC,EAAQZ,GAAe,EAAI,EAAIA,EAAc,IAyBrChE,KAtBZ,WACI4E,EAAQZ,GAAe,EAAI,EAAIA,EAAc,IAsBrCtQ,QAASA,EACTuM,sBAAuBA,EACvBC,2BAA4BA,EAC5B5J,eAAgBA,EAChBiF,0BAA2BA,EAC3BkI,UAAWA,MChC3B,SAASqB,GAATpgB,GAA4D,IAAjCgN,EAAiChN,EAAjCgN,MAAOrN,EAA0BK,EAA1BL,uBAWxB0gB,EAAmB,CACrB7D,6BAA8B,EAC9BC,cAAe,GACfkB,kBAAmB,IACnBb,6BAA8B,EAC9Bc,sBAAuB,KAhB6BrgB,EAmBZC,mBAlBd,CAC1B6R,UAAW,KACXC,UAAW,KACX0M,uBAAwB,EACxBoB,oBAAqB,EACrB3B,eAAgB,EAChB2C,oBAAoB,EACpBC,mBAAmB,IARiCxgB,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAmBjD6R,EAnBiDvR,EAAA,GAmBjCyiB,EAnBiCziB,EAAA,GAAA4B,EAqB1BjC,mBAAS,IArBiBkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAqBjDuP,EArBiDtP,EAAA,GAqBxC6gB,EArBwC7gB,EAAA,GAAA+L,EAsB1BjO,mBAAS,IAtBiBkO,EAAA5N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAsBjD1F,EAtBiD2F,EAAA,GAsBxCkN,EAtBwClN,EAAA,GAAAG,EAuBZrO,mBAAS,IAvBGsO,EAAAhO,OAAAC,EAAA,EAAAD,CAAA+N,EAAA,GAuBjD8F,EAvBiD7F,EAAA,GAuBjC+M,EAvBiC/M,EAAA,GAAA0U,EAwBxBhjB,oBAAS,GAxBeijB,EAAA3iB,OAAAC,EAAA,EAAAD,CAAA0iB,EAAA,GAwBjD1H,EAxBiD2H,EAAA,GAwBtC1H,EAxBsC0H,EAAA,GAAAC,EAyB1BljB,oBAAS,GAzBiBmjB,EAAA7iB,OAAAC,EAAA,EAAAD,CAAA4iB,EAAA,GAyBjDE,EAzBiDD,EAAA,GAyBvC5B,EAzBuC4B,EAAA,GAAAE,EA0BlBrjB,oBAAS,GA1BSsjB,EAAAhjB,OAAAC,EAAA,EAAAD,CAAA+iB,EAAA,GA0BjDE,EA1BiDD,EAAA,GA0BnCE,EA1BmCF,EAAA,GAmJxD,OAvHA9f,oBAAU,WACFrB,EAAuBkD,KAEnBkW,GAAW,GAEX1U,IACK4c,IAAI,CAACxG,GAAWI,aAAa7N,EAAMrH,OAAO9C,IAAKoL,GAAWC,aAAavO,EAAuBkD,MAC9F6D,KACGrC,IAAM6c,OAAO,SAACC,EAAgBC,GAC1B,IAAMrb,EAAUqb,EAAeza,KAAKA,KAC9BqI,EAAUmS,EAAexa,KAAKA,KAEpC4Z,EAAWvR,GACX,IAAMQ,EAAc2J,GAAcpT,GAIlC,GAHA6S,EAAWpJ,GA6D/BvB,GAAWa,6BAA6BnP,EAAuBkD,IAC1D6D,KAAK,SAAAlI,GACF,IAAI6iB,EAAmB,GACvB7iB,EAAQmI,KAAKA,KAAKoI,eAAehM,IAAI,SAAAue,GAAI,OAAID,EAAiB7gB,KAAK8gB,EAAKtS,QAAQnM,MAEhF,IAAMyM,EAAYtC,EAAMrH,OAAO9C,GAE3Bwe,EAAiB1E,SAASrG,OAAOhH,IACjC0R,GAAc,GAEdA,GAAc,KAGrBpa,MAAM,SAAAvB,GACHwB,MAAM,8DACNkS,GAAW,KAxEK/J,GACAA,EAAQC,aACwB,4BAAhCD,EAAQC,YAAYiP,QACtB,CACE,IAAIzB,EAAgB,GAEhBA,EADuB,iBAAvBjN,EAAYtM,OACIsM,EAAYS,aAAeT,EAAYS,aAAaJ,WAAa,GAEjEL,EAAYQ,eACtBR,EAAYQ,eAAeH,WAC3B,GAEVyQ,EAAkBxiB,OAAA4M,GAAA,EAAA5M,CAAA,GACXsR,EADU,CAEbE,UAAWtC,EAAMrH,OAAO9C,GACxBwM,UAAW1P,EAAuBkD,IAC/Bwd,EAJU,CAKb5D,wBAGJ6D,EAAkBxiB,OAAA4M,GAAA,EAAA5M,CAAA,GACXsR,EADU,CAEbE,UAAWtC,EAAMrH,OAAO9C,GACxBwM,UAAW1P,EAAuBkD,MAI1CkW,GAAW,MAGlBnS,MAAM,SAAAvB,GACHwB,MAAM,8DACNkS,GAAW,MAK3B,WAAoC,IAAAL,EAAAC,KAChCI,GAAW,GAQXjO,GAAkBC,oBANd,uJAOCrE,KAAK,SAAAlI,GACFqa,EAAkB/a,OAAA4M,GAAA,EAAA5M,CAAA,GAAKU,EAAQmI,SAElCC,MAAM,SAAAvB,GACHqT,EAAKY,SAAS,CAAER,WAAW,EAAOS,UAAU,MAdxD,IAiBD,CAACvM,EAAOrN,IAgDPzB,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAWmD,UAAW,mBACjBwX,EACG5a,EAAAC,EAAAC,cAACob,GAAD,MACAuH,EACA7iB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBACVpD,EAAAC,EAAAC,cAAA,cAAS2H,EAAQvE,UADrB,mCACwE,IACpEtD,EAAAC,EAAAC,cAAA,cAAS4Q,EAAQlH,SAI7B5J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,IACbjO,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAamD,UAAU,eACnBpD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMnC,GAAE,6BACJrC,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,MAApC,+BASpBvK,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACKyiB,EACG1iB,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,6BAC8BpD,EAAAC,EAAAC,cAAA,cAAS4Q,EAAQlH,OAG/C5J,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,WACYpD,EAAAC,EAAAC,cAAA,cAAS2H,EAAQvE,UAD7B,mBACgE,IAC5DtD,EAAAC,EAAAC,cAAA,cAAS4Q,EAAQlH,OAGzB5J,EAAAC,EAAAC,cAACmjB,GAAD,CACI5P,eAAgBA,EAChB3C,QAASA,EACTuM,sBAAuBnM,EACvBoM,2BApExB,SAAoCtV,GAChCoa,EAAkBxiB,OAAA4M,GAAA,EAAA5M,CAAA,GAAKsR,EAAmBlJ,KAsEtB0L,eAAgB7L,EAChB8Q,0BApExB,SAAmC3Q,EAAQuD,EAAS+X,GAChD,IAAMnI,EAAcvb,OAAA4M,GAAA,EAAA5M,CAAA,GAAQiI,EAAYG,GACxC+H,GAAWiB,cAAcmK,GACpB3S,KAAK,SAAAlI,GACFyP,GAAWC,aAAavO,EAAuBkD,IAC1C6D,KAAK,SAAAlI,GACF,IAAMgR,EAAc2J,GAAc3a,EAAQmI,KAAKA,MAE/CiS,EAAWpJ,GACXgS,MAEH5a,MAAM,SAAAvB,GACHwB,MAAM,8DACNkS,GAAW,OAGtBnS,MAAM,SAAAvB,GACHoE,EAAQC,eAAc,GACtB7C,MAAM,mEAmDMkY,UAAWA,OASxB,SAAS0C,GAA2BnkB,GAC/C,OACIY,EAAAC,EAAAC,cAAC0B,EAAD,KACK,SAAAyB,GAAA,IAAG5B,EAAH4B,EAAG5B,uBAAH,OACGzB,EAAAC,EAAAC,cAACgiB,GAADtiB,OAAAkJ,OAAA,GAAqB1J,EAArB,CAA4BqC,uBAAwBA,+BCpNpE,SAAS+hB,GAAYpkB,GAAO,IAAAC,EACgCC,mBAAS,IADzCK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACjBokB,EADiB9jB,EAAA,GACK+jB,EADL/jB,EAAA,GAAA4B,EAEcjC,mBAAS,IAFvBkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAEjBoiB,EAFiBniB,EAAA,GAEJoiB,EAFIpiB,EAAA,GAAA+L,EAGQjO,oBAAS,GAHjBkO,EAAA5N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAGjBqN,EAHiBpN,EAAA,GAGNqN,EAHMrN,EAAA,GAIlBsN,EAqCN,SAAqB1a,GACjB,IAAMoC,EAAMW,mBAIZ,OAHAL,oBAAU,WACNN,EAAIG,QAAUvC,IAEXoC,EAAIG,QA1CoBoY,CAAY3b,EAAMqC,wBA6CrD,OA3CAqB,oBAAU,WAEF+X,GAAW,GAEPzb,EAAMqC,uBAAuBkD,KAExBmW,GAA8BA,EAA2BnW,IAAMvF,EAAMqC,uBAAuBkD,IAiBzGoL,GAAWa,6BAA6BxR,EAAMqC,uBAAuBkD,IAChE6D,KAAK,SAAAlI,GACF,IAAI6iB,EAAmB,GACvB7iB,EAAQmI,KAAKA,KAAKoI,eAAehM,IAAI,SAAAue,GAAI,OAAID,EAAiB7gB,KAAK8gB,EAAKtS,QAAQnM,MAChF+e,EAAwBP,KAE3Bza,MAAM,SAAAvB,GACHwB,MAAM,8DACNkS,GAAW,MArBf0B,GAAWC,gBACNhU,KAAK,SAAAlI,GACFsjB,EAAetjB,EAAQmI,KAAKA,MAC5BoS,GAAW,KAEdnS,MAAM,SAAAvB,GACHwB,MAAM,8DACNkS,GAAW,MAGxB,CAACzb,EAAMqC,yBAwBNzB,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAWmD,UAAW,mBAClBpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,oDAGRpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAA,qDAGRF,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACK2a,EACG5a,EAAAC,EAAAC,cAACob,GAAD,MACuB,IAAvBqI,EAAYE,OACZ,oDAEA7jB,EAAAC,EAAAC,cAAC4jB,GAAA7jB,EAAD,CAAO8jB,YAAU,GACb/jB,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,kCAGRF,EAAAC,EAAAC,cAAA,aACKyjB,EAAY9e,IAAI,SAAAiM,GAAO,OACpB9Q,EAAAC,EAAAC,cAAA,MAAIkF,IAAK0L,EAAQnM,IACb3E,EAAAC,EAAAC,cAAA,UACKujB,EAAqBhF,SAAS3N,EAAQnM,IACnCmM,EAAQlH,KAER5J,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMnC,GAAE,YAAAE,OAAcuO,EAAQnM,KAAOmM,EAAQlH,OAGrD5J,EAAAC,EAAAC,cAAA,UACKujB,EAAqBhF,SAAS3N,EAAQnM,IACnC3E,EAAAC,EAAAC,cAAA,OAAKkD,UAAU,4BAAf,UAEA,IAGRpD,EAAAC,EAAAC,cAAA,UACK4Q,EAAQkT,uBACHrjB,IAAOmQ,EAAQkT,wBAAwBpjB,OAAO,MAC9C,IAEVZ,EAAAC,EAAAC,cAAA,UACK4Q,EAAQmT,qBACHtjB,IAAOmQ,EAAQmT,sBAAsBrjB,OAAO,MAC5C,YAanC,SAASsjB,GAAuB9kB,GAC3C,OACIY,EAAAC,EAAAC,cAAC0B,EAAD,KACK,SAAAE,GAAA,IAAGL,EAAHK,EAAGL,uBAAH,OAAgCzB,EAAAC,EAAAC,cAACsjB,GAAD5jB,OAAAkJ,OAAA,GAAiB1J,EAAjB,CAAwBqC,uBAAwBA,OCnF9E0iB,OAvCf,SAAAriB,GAAkC,IAAXgP,EAAWhP,EAAXgP,QACnB,OACI9Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,gBACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQlH,MACpB5J,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,qBACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAY2I,GAAe9L,EAAQsT,sBAEvCpkB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,6BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQuT,YAAcvT,EAAQuT,YAAc,MAE5DrkB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,oCACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAY2I,GAAe9L,EAAQ0M,iBAEvCxd,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,oCACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAY2I,GAAe9L,EAAQ4M,iBAEvC1d,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,2BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KACKnD,EAAQkT,uBAAyBrjB,IAAOmQ,EAAQkT,wBAAwBpjB,OAAO,MAAQ,KAGhGZ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,0BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KACKnD,EAAQmT,qBAAuBtjB,IAAOmQ,EAAQmT,sBAAsBrjB,OAAO,MAAQ,QCe7F0jB,OA9Cf,SAAAxiB,GAAwC,IAAXgP,EAAWhP,EAAXgP,QACzB,OACI9Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,gBACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQlH,OAExB5J,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,6BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQuT,YAAcvT,EAAQuT,YAAc,MAG5DrkB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,sCACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAY2I,GAAe9L,EAAQqN,sBAEvCne,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,gCACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQyT,sBAExBvkB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,+CACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQiN,oBAExB/d,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,+CACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQmN,oBAExBje,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,2BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KACKnD,EAAQkT,uBAAyBrjB,IAAOmQ,EAAQkT,wBAAwBpjB,OAAO,MAAQ,KAGhGZ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,0BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KACKnD,EAAQmT,qBAAuBtjB,IAAOmQ,EAAQmT,sBAAsBrjB,OAAO,MAAQ,QCQ7F4jB,OA9Cf,SAAA1iB,GAAqC,IAAXgP,EAAWhP,EAAXgP,QACtB,OACI9Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,gBACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQlH,OAExB5J,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,6BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQuT,YAAcvT,EAAQuT,YAAc,MAG5DrkB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,yCACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAY2I,GAAe9L,EAAQqN,sBAEvCne,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,mCACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQyT,sBAExBvkB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,kDACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQiN,oBAExB/d,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,kDACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQmN,oBAExBje,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,2BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KACKnD,EAAQkT,uBAAyBrjB,IAAOmQ,EAAQkT,wBAAwBpjB,OAAO,MAAQ,KAGhGZ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,0BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KACKnD,EAAQmT,qBAAuBtjB,IAAOmQ,EAAQmT,sBAAsBrjB,OAAO,MAAQ,QCQ7F6jB,OA9Cf,SAAA3iB,GAAiC,IAAXgP,EAAWhP,EAAXgP,QAClB,OACI9Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,gBACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQlH,OAExB5J,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,6BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQuT,YAAcvT,EAAQuT,YAAc,MAG5DrkB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,yCACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAY2I,GAAe9L,EAAQqN,sBAEvCne,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,mCACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQyT,sBAExBvkB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,kDACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQiN,oBAExB/d,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,kDACAD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYnD,EAAQmN,oBAExBje,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,2BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KACKnD,EAAQkT,uBAAyBrjB,IAAOmQ,EAAQkT,wBAAwBpjB,OAAO,MAAQ,KAGhGZ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,0BACAD,EAAAC,EAAAC,cAAC+T,GAAD,KACKnD,EAAQmT,qBAAuBtjB,IAAOmQ,EAAQmT,sBAAsBrjB,OAAO,MAAQ,QC6D7F8jB,OA5Ff,SAAA5iB,GAAmC,IAAA0Y,EAAAC,KAAT3L,EAAShN,EAATgN,MAASzP,EACaC,mBAAS,IADtBK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACRsb,GADQhb,EAAA,GAAAA,EAAA,IAAA4B,EAEDjC,mBAAS,IAFRkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAExBuP,EAFwBtP,EAAA,GAEf6gB,EAFe7gB,EAAA,GAAA+L,EAGCjO,oBAAS,GAHVkO,EAAA5N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAGxBqN,EAHwBpN,EAAA,GAGbqN,EAHarN,EAAA,GAkD/B,OA7CA1K,oBAAU,WAQN8J,GAAkBC,oBANd,uJAOCrE,KAAK,SAAAlI,GACFqa,EAAkB/a,OAAA4M,GAAA,EAAA5M,CAAA,GAAKU,EAAQmI,SAElCC,MAAM,SAAAvB,GACHqT,EAAKY,SAAS,CAAER,WAAW,EAAOS,UAAU,MAIhDR,GAAW,GACX0B,GAAWI,aAAa7N,EAAMrH,OAAO9C,IAChC6D,KAAK,SAAAlI,GACF+hB,EAAW/hB,EAAQmI,KAAKA,MACxBoS,GAAW,KAEdnS,MAAM,SAAAvB,GACHwB,MAAM,8DACNkS,GAAW,MAGxB,CAAC/L,IAkBA9O,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAWmD,UAAW,mBACjBwX,EACG5a,EAAAC,EAAAC,cAACob,GAAD,MAEAtb,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,yBAvBxB,WACI,OAAQ0N,EAAQC,YAAYiP,SACxB,IAAK,OACD,OAAOhgB,EAAAC,EAAAC,cAACykB,GAAD,CAAa7T,QAASA,IACjC,IAAK,aACD,OAAO9Q,EAAAC,EAAAC,cAAC0kB,GAAD,CAAmB9T,QAASA,IACvC,IAAK,UACD,OAAO9Q,EAAAC,EAAAC,cAAC2kB,GAAD,CAAgB/T,QAASA,IACpC,IAAK,0BACD,OAAO9Q,EAAAC,EAAAC,cAAC4kB,GAAD,CAAYhU,QAASA,IAChC,QACI,OAAO,MAgBFiU,GAED/kB,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAW,QACZpD,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAA,oDAC6C,IACzCF,EAAAC,EAAAC,cAAA,KAAGuU,KAAI,GAAAlS,OAAKuO,EAAQuP,oBAAsBxd,OAAO,UAAjD,SAIJ7C,EAAAC,EAAAC,cAAA,oFAGRF,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAC6Y,GAAA9Y,EAAD,CAAamD,UAAU,eACnBpD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMnC,GAAE,gBAAAE,OAAkBuO,EAAQnM,KAC9B3E,EAAAC,EAAAC,cAACoK,EAAArK,EAAD,CAAQmD,UAAW,WAAYmH,KAAK,MAApC,8BCnFpC,SAASya,GAAiB5lB,GAAO,IAAAC,EACCC,mBAAS,IADVK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACtBwI,EADsBlI,EAAA,GACb+a,EADa/a,EAAA,GAAA4B,EAEGjC,oBAAS,GAFZkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAEtBqZ,EAFsBpZ,EAAA,GAEXqZ,EAFWrZ,EAAA,GAGvBsZ,EAyBN,SAAqB1a,GACjB,IAAMoC,EAAMW,mBAIZ,OAHAL,oBAAU,WACNN,EAAIG,QAAUvC,IAEXoC,EAAIG,QA9BoBoY,CAAY3b,EAAMqC,wBAiCrD,OA/BAqB,oBAAU,WAEF1D,EAAMqC,uBAAuBkD,KAExBmW,GAA8BA,EAA2BnW,IAAMvF,EAAMqC,uBAAuBkD,KAOrGkW,GAAW,GACX9K,GAAWa,6BAA6BxR,EAAMqC,uBAAuBkD,IAChE6D,KAAK,SAAAlI,GACFoa,EAAWpa,EAAQmI,KAAKA,MACxBoS,GAAW,KAEdnS,MAAM,SAAAvB,GACHwB,MAAM,8DACNkS,GAAW,QAXpB,CAACzb,EAAMqC,yBAwBNzB,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAWmD,UAAW,mBAClBpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,uBACwBpD,EAAAC,EAAAC,cAAA,cAAS2H,EAAQvE,UADzC,iBAKRtD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACK2a,EACG5a,EAAAC,EAAAC,cAACob,GAAD,MACmB,IAAnBzT,EAAQgc,OACR,2BAEA7jB,EAAAC,EAAAC,cAAC4jB,GAAA7jB,EAAD,CAAO8jB,YAAU,GACb/jB,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,wBAGRF,EAAAC,EAAAC,cAAA,aACK2H,EAAQgJ,eAAehM,IAAI,SAAAqX,GACxB,OACKA,EAAcpL,QAAQmU,SACvBtkB,IAAOub,EAAcpL,QAAQmU,SAASrkB,OAAO,eACzCD,MAASC,OAAO,cAGhBZ,EAAAC,EAAAC,cAAA,MAAIkF,IAAK8W,EAAcvX,IACnB3E,EAAAC,EAAAC,cAAA,UAAKgc,EAAcpL,QAAQlH,MAC3B5J,EAAAC,EAAAC,cAAA,UACkD,QAA7Cgc,EAAcpL,QAAQC,YAAYiP,QAC/BhgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACuC,GAAlCqW,EAAcgJ,iBACXllB,EAAAC,EAAAC,cAAA,qBACW,IACN0c,GAAeV,EAAcgJ,kBAAmB,IACjDllB,EAAAC,EAAAC,cAAA,0BAGJ,GAE6B,GAAhCgc,EAAcqB,eACXvd,EAAAC,EAAAC,cAAA,qBACW,IACN0c,GAAeV,EAAcqB,gBAAiB,IAC/Cvd,EAAAC,EAAAC,cAAA,6BAGJ,GAE4B,GAA/Bgc,EAAciJ,cACXnlB,EAAAC,EAAAC,cAAA,sBACY0c,GAAeV,EAAciJ,eAAgB,IACrDnlB,EAAAC,EAAAC,cAAA,0BAGJ,GAE+B,GAAlCgc,EAAckJ,iBACXplB,EAAAC,EAAAC,cAAA,qBACW,IACN0c,GAAeV,EAAckJ,kBAAmB,IACjDplB,EAAAC,EAAAC,cAAA,2BAGJ,IAIR,GAG0C,cAA7Cgc,EAAcpL,QAAQC,YAAYiP,QAC/BhgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KAC+C,GAA1CqW,EAAcmJ,yBACXrlB,EAAAC,EAAAC,cAAA,YACKgc,EAAcmJ,yBACd,eAFL,IAEqBrlB,EAAAC,EAAAC,cAAA,2BAGrB,GAEqC,GAAxCgc,EAAc4B,uBACX9d,EAAAC,EAAAC,cAAA,YACKgc,EAAc4B,uBACd,eAFL,IAEqB9d,EAAAC,EAAAC,cAAA,6BAGrB,GAEoC,GAAvCgc,EAAcoJ,sBACXtlB,EAAAC,EAAAC,cAAA,YACKgc,EAAcoJ,sBACd,eAFL,IAEqBtlB,EAAAC,EAAAC,cAAA,0BAGrB,GAEuC,GAA1Cgc,EAAcqJ,yBACXvlB,EAAAC,EAAAC,cAAA,YACKgc,EAAcqJ,yBACd,eACDvlB,EAAAC,EAAAC,cAAA,2BAGJ,IAIR,GAG0C,WAA7Cgc,EAAcpL,QAAQC,YAAYiP,QAC/BhgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KAC+C,GAA1CqW,EAAcmJ,yBACXrlB,EAAAC,EAAAC,cAAA,YACKgc,EAAcmJ,yBACd,kBAFL,IAEwBrlB,EAAAC,EAAAC,cAAA,0BAGxB,GAEqC,GAAxCgc,EAAc4B,uBACX9d,EAAAC,EAAAC,cAAA,YACKgc,EAAc4B,uBACd,kBAFL,IAEwB9d,EAAAC,EAAAC,cAAA,6BAGxB,GAEoC,GAAvCgc,EAAcoJ,sBACXtlB,EAAAC,EAAAC,cAAA,YACKgc,EAAcoJ,sBACd,kBAFL,IAEwBtlB,EAAAC,EAAAC,cAAA,0BAGxB,GAEuC,GAA1Cgc,EAAcqJ,yBACXvlB,EAAAC,EAAAC,cAAA,YACKgc,EAAcqJ,yBACd,kBAFL,IAEwBvlB,EAAAC,EAAAC,cAAA,2BAGxB,IAIR,GAIJ,2BADCgc,EAAcpL,QAAQC,YAAYiP,QAE/BhgB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KAC+C,GAA1CqW,EAAcmJ,yBACXrlB,EAAAC,EAAAC,cAAA,YACKgc,EAAcmJ,yBACd,kBAFL,IAEwBrlB,EAAAC,EAAAC,cAAA,0BAGxB,GAEqC,GAAxCgc,EAAc4B,uBACX9d,EAAAC,EAAAC,cAAA,YACKgc,EAAc4B,uBACd,kBAFL,IAEwB9d,EAAAC,EAAAC,cAAA,6BAGxB,GAEoC,GAAvCgc,EAAcoJ,sBACXtlB,EAAAC,EAAAC,cAAA,YACKgc,EAAcoJ,sBACd,kBAFL,IAEwBtlB,EAAAC,EAAAC,cAAA,0BAGxB,GAEuC,GAA1Cgc,EAAcqJ,yBACXvlB,EAAAC,EAAAC,cAAA,YACKgc,EAAcqJ,yBACd,kBAFL,IAEwBvlB,EAAAC,EAAAC,cAAA,2BAGxB,IAIR,KAMb,YAW5B,SAASslB,GAA4BpmB,GAChD,OACIY,EAAAC,EAAAC,cAAC0B,EAAD,KACK,SAAAE,GAAA,IAAGL,EAAHK,EAAGL,uBAAH,OACGzB,EAAAC,EAAAC,cAAC8kB,GAADplB,OAAAkJ,OAAA,GAAsB1J,EAAtB,CAA6BqC,uBAAwBA,0CCxP/DiJ,GAAmBC,WAAaC,MAAM,CACxCE,MAAOH,WACFG,QACAC,SAAS,aACd0a,cAAe9a,WACVwN,WACApN,SAAS,aACd2a,gBAAiB/a,WACZuN,OACAnN,SAAS,aACd4a,eAAgBhb,WACXuN,OACAnN,SAAS,eAuHH6a,GApHgB,SAAA9jB,GAAA,IAAGoJ,EAAHpJ,EAAGoJ,aAAc6D,EAAjBjN,EAAiBiN,mBAAjB,OAC3B/O,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAe,CACXN,MAAO,GACP2a,cAAe,GACfC,gBAAiB,GACjBC,eAAgB,IAEpBta,oBAAoB,EACpBX,iBAAkBA,GAClBY,SAAU,SAACtD,EAAQuD,GACfA,EAAQC,eAAc,GACtBN,EAAalD,EAAQuD,IAEzBxC,OAAQ,SAAA1F,GAAA,IAAGoI,EAAHpI,EAAGoI,aAAchC,EAAjBpG,EAAiBoG,OAAQC,EAAzBrG,EAAyBqG,QAAzB,OACJ1J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,kCAEJpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,QACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,QACHvB,UAAW,GACXmG,YAAa,cACbE,OAAQA,EACRC,QAASA,QAKzB1J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,aAEJpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,gBACLb,OAAQ,SAAAhF,GAAA,IAAGqF,EAAHrF,EAAGqF,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,WACHvB,UAAW,2BACXmG,YAAa,SACboL,QAASM,SAKzBjV,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,kBACLb,OAAQ,SAAAwN,GAAA,IAAGnN,EAAHmN,EAAGnN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,aACHvB,UAAW,GACXmG,YAAa,iBAK7BvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,yBACLb,OAAQ,SAAAyN,GAAA,IAAGpN,EAAHoN,EAAGpN,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,sBACHgQ,QAASO,GACT9R,UAAW,2BACXmG,YAAa,qBAIzBvJ,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,iBACLb,OAAQ,SAAA2N,GAAA,IAAGtN,EAAHsN,EAAGtN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,YACHvB,UAAW,GACXmG,YAAa,mBAM7BvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACyL,GAAD,CACI1B,WAAY,mBACZD,gBAAiB,uBACjBO,KAAK,KACLlB,KAAM,SACNc,QAASsB,EACTpB,oBAAqB,UACrB9F,SAAUwK,WC1HhCrE,GAAmBC,WAAaC,MAAM,CACxCE,MAAOH,WACFG,QACAC,SAAS,aACd8a,iBAAkBlb,WACbuN,OACAnN,SAAS,aACd0a,cAAe9a,WACVwN,WACApN,SAAS,aACd2a,gBAAiB/a,WACZuN,OACAnN,SAAS,aACd4a,eAAgBhb,WACXuN,OACAnN,SAAS,eAiIH+a,GA9HoB,SAAAhkB,GAAA,IAAGoJ,EAAHpJ,EAAGoJ,aAAc6D,EAAjBjN,EAAiBiN,mBAAjB,OAC/B/O,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAe,CAAEN,MAAO,GAAI+a,iBAAkB,GAAIJ,cAAe,GAAIC,gBAAiB,GAAIC,eAAgB,IAC1Gta,oBAAoB,EACpBX,iBAAkBA,GAClBY,SAAU,SAACtD,EAAQuD,GACfA,EAAQC,eAAc,GACtBN,EAAalD,EAAQuD,IAEzBxC,OAAQ,SAAA1F,GAAA,IAAGoI,EAAHpI,EAAGoI,aAAchC,EAAjBpG,EAAiBoG,OAAQC,EAAzBrG,EAAyBqG,QAAzB,OACJ1J,EAAAC,EAAAC,cAACiL,EAAA,EAAD,KACInL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,yCAEJpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,QACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,QACHvB,UAAW,GACXmG,YAAa,cACbE,OAAQA,EACRC,QAASA,QAKzB1J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,mBACLb,OAAQ,SAAAhF,GAAA,IAAGqF,EAAHrF,EAAGqF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,OACHvB,UAAW,GACXmG,YAAa,mBACbE,OAAQA,EACRC,QAASA,QAKzB1J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,4BAEJpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,gBACLb,OAAQ,SAAAwN,GAAA,IAAGnN,EAAHmN,EAAGnN,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,WACHvB,UAAW,2BACXmG,YAAa,SACboL,QAASM,SAKzBjV,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,kBACLb,OAAQ,SAAAyN,GAAA,IAAGpN,EAAHoN,EAAGpN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,aACHvB,UAAW,GACXmG,YAAa,iBAK7BvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,yBACLb,OAAQ,SAAA2N,GAAA,IAAGtN,EAAHsN,EAAGtN,MAAH,OACJpJ,EAAAC,EAAAC,cAACoW,GAAD,CACIlN,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,sBACHgQ,QAASO,GACT9R,UAAW,2BACXmG,YAAa,qBAIzBvJ,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,iBACLb,OAAQ,SAAA6N,GAAA,IAAGxN,EAAHwN,EAAGxN,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPK,OAAQA,EACRC,QAASA,EACT/E,GAAG,YACHvB,UAAW,GACXmG,YAAa,mBAM7BvJ,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAACyL,GAAD,CACI1B,WAAY,mBACZD,gBAAiB,uBACjBO,KAAK,KACLlB,KAAM,SACNc,QAASsB,EACTpB,oBAAqB,UACrB9F,SAAUwK,WCxIhCgX,GAAa,SAAA3mB,GAAS,IAChB4mB,EAAqBC,eAArBD,iBADgB3mB,EAEcC,mBAAS,UAFvBK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAEjB6mB,EAFiBvmB,EAAA,GAEJwmB,EAFIxmB,EAAA,GAAA4B,EAGSjC,oBAAS,GAHlBkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAGjB2L,EAHiB1L,EAAA,GAGN2L,EAHM3L,EAAA,GAAA+L,EAI2BjO,oBAAS,GAJpCkO,EAAA5N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAIjBwB,EAJiBvB,EAAA,GAIGwB,EAJHxB,EAAA,GAAAG,EAKgBrO,mBAAS,IALzBsO,EAAAhO,OAAAC,EAAA,EAAAD,CAAA+N,EAAA,GAKjByY,EALiBxY,EAAA,GAKHyY,EALGzY,EAAA,YAOT1C,EAPSob,EAAAC,GAAA,OAAAC,EAAAC,MAAAhM,KAAAiM,WAAA,SAAAF,IAAA,OAAAA,EAAA5mB,OAAA+mB,GAAA,EAAA/mB,CAAAgnB,GAAA3mB,EAAA4mB,KAOxB,SAAAC,EAA4B9e,EAAQuD,GAApC,IAAAwb,EAAA,OAAAH,GAAA3mB,EAAA+mB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA7J,MAAA,UAES4I,EAFT,CAAAiB,EAAA7J,KAAA,eAAA6J,EAAAE,OAAA,wBAAAF,EAAA7J,KAAA,EAMiC4I,EAAiB,eANlD,OAMUe,EANVE,EAAAG,KASInb,GAAQC,WAARtM,OAAA4M,GAAA,EAAA5M,CAAA,GAAwBoI,EAAxB,CAAgCke,YAAaA,EAAaa,oBACrDve,KAAK,SAAAlI,GACF6M,GAAY,GACZ6B,GAAqB,GACrBzD,EAAQC,eAAc,KAEzB9C,MAAM,SAAAvB,GAGHgG,GAAY,GACRhG,EAAMkgB,UAAsC,MAA1BlgB,EAAMkgB,SAASC,OACjCjB,EACI,oNAEGlf,EAAMkgB,UAAsC,MAA1BlgB,EAAMkgB,SAASC,OACxCjB,EACI,yMAGJA,EAAgB,oCAGpB9a,EAAQC,eAAc,KA/BlC,wBAAAyb,EAAAM,SAAAT,OAPwBL,MAAAhM,KAAAiM,WA8CxB,OACI1mB,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAW8N,OAAK,EAAC3K,UAAU,sCACvBpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,2DAEXpD,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAG,KAAKsK,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACjCnO,EAAAC,EAAAC,cAAA,OAAK0D,IAAI,kBAAkBwK,IAAI,GAAGhL,UAAU,+BAE3C2L,EAVN/O,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,CAAUxG,GAAI,yBAaLrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4F,SAAA,KACI7F,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,MAAIkD,UAAW,cAAf,kBAEJpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,2CAEJpD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,0BACXpD,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,gBACbpD,EAAAC,EAAAC,cAAA,SACImJ,KAAK,QACL1E,GAAG,WACH4P,QAAyB,WAAhB2R,EACT9lB,MAAO,SACPof,SAAU,kBAAM2G,EAAe,aANvC,mBADJ,WAYInmB,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,gBACbpD,EAAAC,EAAAC,cAAA,SACImJ,KAAK,QACL1E,GAAG,eACH4P,QAAyB,iBAAhB2R,EACT9lB,MAAO,eACPof,SAAU,WACN2G,EAAe,mBAP3B,4BAaJnmB,EAAAC,EAAAC,cAAA,WAEiB,WAAhBgmB,EACGlmB,EAAAC,EAAAC,cAACsnB,GAAD,CACItc,aAAcA,EACd6D,mBAAoBA,IAGxB/O,EAAAC,EAAAC,cAACunB,GAAD,CACIvc,aAAcA,EACd6D,mBAAoBA,IAG5B/O,EAAAC,EAAAC,cAAA,WAECgN,EACGlN,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACoO,GAAArO,EAAD,CAAOmD,UAAW,sBAAuBmL,QAAS,UAC7C6X,IAGT,UAmBjBsB,OAVf,WAGI,OACI1nB,EAAAC,EAAAC,cAACynB,GAAA,EAAD,CAAyBC,aAHNC,2CAGoCC,SAAU,MAC7D9nB,EAAAC,EAAAC,cAAC6nB,GAAD,QC3GGC,GAtBW,WACtB,OACIhoB,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAW8N,OAAK,EAAC3K,UAAU,sCACvBpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,CAAKmD,UAAU,2DACXpD,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAG,KAAKsK,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAClCnO,EAAAC,EAAAC,cAAA,OAAK0D,IAAI,kBAAkBwK,IAAI,GAAGhL,UAAU,yBAC5CpD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIkD,UAAW,cAAf,2BACApD,EAAAC,EAAAC,cAAA,KAAGkD,UAAW,cAAd,qHAIApD,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMnC,GAAI,SAAUe,UAAU,sBAA9B,4BCLlBsH,GAAmBC,SAAW,CAChCG,MAAOH,WACFG,MAAM,2BACNC,SAAS,eAsHHkd,OAnHf,WAA8B,IAAA5oB,EACoBC,mBAAS,IAD7BK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACnB6oB,EADmBvoB,EAAA,GACFwoB,EADExoB,EAAA,GAAA4B,EAEyBjC,oBAAS,GAFlCkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAEnBwN,EAFmBvN,EAAA,GAECwN,EAFDxN,EAAA,GAAA+L,EAGOjO,oBAAS,GAHhBkO,EAAA5N,OAAAC,EAAA,EAAAD,CAAA2N,EAAA,GAGnBL,EAHmBM,EAAA,GAGRL,EAHQK,EAAA,GAgC1B,OA3BA1K,oBAAU,WAEFwE,EAAcQ,uBACTU,KAAK,SAAAlI,GACF6nB,EAAmB7nB,EAAQmI,QAE9BC,MAAM,SAAAvB,GACHwB,MAAM,iEAGnB,IAkBC3I,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAe,CAAEN,MAAO,GAAIsd,2BAA2B,GACvD1d,iBAAkBA,GAClBY,SAAU,SAAStD,EAAQuD,IApBnC,SAAiCvD,EAAQuD,GACrCjE,EAAcS,YAAYC,GACrBQ,KAAK,SAAAlI,GACF6nB,EAAmBngB,EAAO8C,OAC1BS,EAAQ8c,YACRlb,GAAY,GACZ6B,GAAqB,GACrBzD,EAAQC,eAAc,KAEzB9C,MAAM,SAAAvB,GACHoE,EAAQC,eAAc,GACtB2B,GAAY,GACZ6B,GAAqB,KASrBsZ,CAAwBtgB,EAAQuD,KAGnC,SAAAzJ,GAAA,IAAG4H,EAAH5H,EAAG4H,QAASD,EAAZ3H,EAAY2H,OAAQgC,EAApB3J,EAAoB2J,aAAcP,EAAlCpJ,EAAkCoJ,aAAlC,OACGlL,EAAAC,EAAAC,cAACyd,GAAA1d,EAAD,CAAMqL,SAAUJ,GACX6D,EACG/O,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,IACL1D,EAAAC,EAAAC,cAACoO,GAAArO,EAAD,CAAOmD,UAAW,uBAAwBmL,QAAS,WAAnD,0CAKR,KACHrB,EACGlN,EAAAC,EAAAC,cAACoO,GAAArO,EAAD,CAAOmD,UAAW,sBAAuBmL,QAAS,UAAlD,mCAGA,KAEJvO,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,IACL1D,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,CAAWmD,UAAW,eAAtB,sBACApD,EAAAC,EAAAC,cAAC+T,GAAD,KAAYiU,KAGpBloB,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,oBAAvB,qBACApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,QACLb,OAAQ,SAAA1F,GAAA,IAAG+F,EAAH/F,EAAG+F,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CAAWtC,MAAOA,EAAOK,OAAQA,EAAQC,QAASA,EAAS/E,GAAG,eAK9E3E,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,4BACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAAA,SAAOkD,UAAU,2BACbpD,EAAAC,EAAAC,cAAA,QAAAN,OAAAkJ,OAAA,CACIO,KAAK,YACDD,EAFR,CAGIzE,GAAG,+BACH4P,QAASnL,EAAMhJ,MACfgD,UAAU,+BAEdpD,EAAAC,EAAAC,cAAA,QACIsU,QAAQ,+BACRpR,UAAU,+BAFd,yEAYpBpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyL,GAAD,CACI1B,WAAY,qBACZM,KAAK,KACLlB,KAAM,SACNc,QAASsB,UCjHnCf,GAAmBC,WAAaC,MAAM,CACxCI,SAAUL,WACL6D,IAAI,GAAI,gCACRC,QAAQ,UAAW,kCACnBA,QAAQ,UAAW,uCACnB1D,SAAS,aACd2D,qBAAsB/D,WACjBgE,MAAM,CAAChE,MAAQ,YAAa,MAAO,mCACnCI,SAAS,eAoGHwd,OAjGf,WAAiC,IAAAlpB,EACsBC,oBAAS,GAD/BK,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GACtB0P,EADsBpP,EAAA,GACFqP,EADErP,EAAA,GAAA4B,EAEIjC,oBAAS,GAFbkC,EAAA5B,OAAAC,EAAA,EAAAD,CAAA2B,EAAA,GAEtB2L,EAFsB1L,EAAA,GAEX2L,EAFW3L,EAAA,GAmB7B,OACIxB,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIC,cAAe,CAAEJ,SAAU,GAAI0D,qBAAsB,IACrDhE,iBAAkBA,GAClBY,SAAU,SAAStD,EAAQuD,IAnBnC,SAAoCvD,EAAQuD,GACxCjE,EAAcY,eAAeF,GACxBQ,KAAK,SAAAlI,GACFiL,EAAQ8c,YACRlb,GAAY,GACZ6B,GAAqB,GACrBzD,EAAQC,eAAc,KAEzB9C,MAAM,SAAAvB,GACHoE,EAAQC,eAAc,GACtB2B,GAAY,GACZ6B,GAAqB,KASrBwZ,CAA2BxgB,EAAQuD,KAGtC,SAAAzJ,GAAA,IAAG4H,EAAH5H,EAAG4H,QAASD,EAAZ3H,EAAY2H,OAAQgC,EAApB3J,EAAoB2J,aAAcP,EAAlCpJ,EAAkCoJ,aAAlC,OACGlL,EAAAC,EAAAC,cAACyd,GAAA1d,EAAD,CAAMqL,SAAUJ,GACX6D,EACG/O,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,IACL1D,EAAAC,EAAAC,cAACoO,GAAArO,EAAD,CAAOmD,UAAW,uBAAwBmL,QAAS,WAAnD,wCAKR,KACHrB,EACGlN,EAAAC,EAAAC,cAACoO,GAAArO,EAAD,CAAOmD,UAAW,sBAAuBmL,QAAS,UAAlD,iCAGA,KAEJvO,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,eAAvB,oBACApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,WACLb,OAAQ,SAAA1F,GAAA,IAAG+F,EAAH/F,EAAG+F,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,WACHvB,UAAWgG,EAAMhJ,MAAQ,2BAA6B,UACtDmJ,YAAa,mBACbE,OAAQA,EACRC,QAASA,SAM7B1J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyd,GAAA1d,EAAK2d,MAAN,CAAYxa,UAAW,oBAAvB,4BACApD,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACIvB,KAAK,uBACLb,OAAQ,SAAAjF,GAAA,IAAGsF,EAAHtF,EAAGsF,MAAH,OACJpJ,EAAAC,EAAAC,cAACwL,EAAD,CACItC,MAAOA,EACPzE,GAAG,uBACHvB,UAAWgG,EAAMhJ,MAAQ,2BAA6B,UACtDmJ,YAAa,2BACbE,OAAQA,EACRC,QAASA,SAO7B1J,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAACyL,GAAD,CACI1B,WAAY,oBACZM,KAAK,KACLlB,KAAM,SACNc,QAASsB,UC9E1Bgd,OAxBf,WACI,OACIzoB,EAAAC,EAAAC,cAACqD,EAAAtD,EAAD,CAAWmD,UAAW,mBAClBpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,KACID,EAAAC,EAAAC,cAAA,MAAIkD,UAAU,mBAAd,0BAGRpD,EAAAC,EAAAC,cAACsD,EAAAvD,EAAD,KACID,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,EAAG7K,UAAW,QAC3BpD,EAAAC,EAAAC,cAAA,MAAIkD,UAAW,MAAf,4BAEApD,EAAAC,EAAAC,cAACwoB,GAAD,OAEJ1oB,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAKyD,GAAI,GAAIuK,GAAI,GACbjO,EAAAC,EAAAC,cAAA,MAAIkD,UAAW,MAAf,qBAEApD,EAAAC,EAAAC,cAACyoB,GAAD,UCuBLC,OA3Bf,WACI,OACI5oB,EAAAC,EAAAC,cAACsE,EAAA,EAAD,KACIxE,EAAAC,EAAAC,cAAC2oB,EAAD,KACI7oB,EAAAC,EAAAC,cAAC4oB,EAAD,KACI9oB,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,KACI7I,EAAAC,EAAAC,cAAC8I,EAAD,CAAgB+f,OAAK,EAACC,KAAK,IAAI3gB,UAAWkS,KAC1Cva,EAAAC,EAAAC,cAAC8I,EAAD,CAAgBggB,KAAK,YAAY3gB,UAAWkS,KAC5Cva,EAAAC,EAAAC,cAAC8I,EAAD,CAAgBggB,KAAK,0BAA0B3gB,UAAWgU,KAC1Drc,EAAAC,EAAAC,cAAC8I,EAAD,CAAgBggB,KAAK,mBAAmB3gB,UAAW6Z,KACnDliB,EAAAC,EAAAC,cAAC8I,EAAD,CAAgBggB,KAAK,yBAAyB3gB,UAAWmb,KACzDxjB,EAAAC,EAAAC,cAAC8I,EAAD,CAAgBggB,KAAK,4BAA4B3gB,UAAW2c,KAC5DhlB,EAAAC,EAAAC,cAAC8I,EAAD,CAAgBggB,KAAK,eAAe3gB,UAAWqc,KAC/C1kB,EAAAC,EAAAC,cAAC8I,EAAD,CAAgBggB,KAAK,wBAAwB3gB,UAAWogB,KACxDzoB,EAAAC,EAAAC,cAAC+oB,EAAD,CAAaD,KAAK,SAAS3gB,UAAW6gB,KACtClpB,EAAAC,EAAAC,cAAC+oB,EAAD,CAAaD,KAAK,iDAAiD3gB,UAAWwG,KAC9E7O,EAAAC,EAAAC,cAAC+oB,EAAD,CAAaD,KAAK,uBAAuB3gB,UAAWmH,KACpDxP,EAAAC,EAAAC,cAAC+oB,EAAD,CAAaD,KAAK,qCAAqC3gB,UAAWsH,KAClE3P,EAAAC,EAAAC,cAAC+oB,EAAD,CAAaD,KAAK,iBAAiB3gB,UAAW0d,KAC9C/lB,EAAAC,EAAAC,cAAC+oB,EAAD,CAAaD,KAAK,wBAAwB3gB,UAAW2f,UC3BzDne,QACa,cAA7BtK,OAAOwC,SAASonB,UAEiB,UAA7B5pB,OAAOwC,SAASonB,UAEhB5pB,OAAOwC,SAASonB,SAASra,MAAM,kECLvCsa,IAASrgB,OAAO/I,EAAAC,EAAAC,cAACmpB,GAAD,MAAStmB,SAASumB,eAAe,SAG1BvmB,SAASumB,eAAe,eAC9BC,SD0GT,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAMlhB,KAAK,SAAAmhB,GAC/BA,EAAaC","file":"static/js/main.487df22c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nconst localStorageToken = '__customer-portal-econobis-token__';\r\nconst localStorageLastActivity = '__customer-portal-econobis-last-activity__';\r\n\r\nconst AuthProvider = function(props) {\r\n    const [isAuth, setAuth] = useState(checkIfAuth());\r\n\r\n    function login(payload, cbRedirect) {\r\n        const token = payload.access_token;\r\n        window.localStorage.setItem(localStorageToken, token);\r\n        localStorage.setItem(localStorageLastActivity, moment().format());\r\n        setAuth(true);\r\n        cbRedirect();\r\n    }\r\n\r\n    function logout() {\r\n        window.localStorage.removeItem(localStorageToken);\r\n        window.localStorage.removeItem(localStorageLastActivity);\r\n        setAuth(false);\r\n    }\r\n\r\n    function checkIfAuth() {\r\n        const token = getToken();\r\n        if (!token) {\r\n            // Redirect to login\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function getToken() {\r\n        return window.localStorage.getItem(localStorageToken);\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                isAuth: isAuth,\r\n                login: login,\r\n                logout: logout,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nconst AuthConsumer = AuthContext.Consumer;\r\n\r\nexport { AuthProvider, AuthConsumer };\r\n","import React, { createContext, useState } from 'react';\r\n\r\nconst PortalUserContext = createContext({\r\n    user: {},\r\n    updateUser: () => {},\r\n});\r\n\r\nconst PortalUserProvider = function(props) {\r\n    const [user, setUser] = useState({});\r\n    const [currentSelectedContact, setCurrentContact] = useState({});\r\n\r\n    function updateUser(user) {\r\n        setUser(user);\r\n        setCurrentContact(user);\r\n    }\r\n\r\n    function resetCurrentUserToDefault() {\r\n        setUser({});\r\n        setCurrentContact({});\r\n    }\r\n\r\n    return (\r\n        <PortalUserContext.Provider\r\n            value={{\r\n                user: user,\r\n                updateUser: updateUser,\r\n                currentSelectedContact,\r\n                setCurrentContact,\r\n                resetCurrentUserToDefault,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </PortalUserContext.Provider>\r\n    );\r\n};\r\n\r\nconst PortalUserConsumer = PortalUserContext.Consumer;\r\n\r\nexport { PortalUserProvider, PortalUserConsumer };\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport { AuthConsumer } from '../../context/AuthContext';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { PortalUserConsumer } from '../../context/PortalUserContext';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { FaUser } from 'react-icons/fa';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nfunction Header({ location, history }) {\r\n    const [menuOpen, updateStateMenu] = useState(false);\r\n\r\n    // This keeps your state in sync with the opening/closing of the menu\r\n    // via the default means, e.g. clicking the X, pressing the ESC key etc.\r\n    function handleStateChange(state) {\r\n        updateStateMenu(state.isOpen);\r\n    }\r\n\r\n    // This can be used to close the menu, e.g. when a user clicks a menu item\r\n    function openMenu() {\r\n        updateStateMenu(true);\r\n    }\r\n\r\n    // This can be used to close the menu, e.g. when a user clicks a menu item\r\n    function closeMenu() {\r\n        updateStateMenu(false);\r\n    }\r\n\r\n    // This can be used to toggle the menu, e.g. when using a custom icon\r\n    // Tip: You probably want to hide either/both default icons if using a custom icon\r\n    // See https://github.com/negomi/react-burger-menu#custom-icons\r\n    function toggleMenu() {\r\n        updateStateMenu(!menuOpen);\r\n    }\r\n\r\n    /**\r\n     * Hook that alerts clicks outside of the passed ref\r\n     */\r\n    function useOutsideAlerter(ref) {\r\n        /**\r\n         * Alert if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                updateStateMenu(false);\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            // Bind the event listener\r\n            document.addEventListener('mousedown', handleClickOutside);\r\n            return () => {\r\n                // Unbind the event listener on clean up\r\n                document.removeEventListener('mousedown', handleClickOutside);\r\n            };\r\n        });\r\n    }\r\n\r\n    const wrapperRef = useRef(null);\r\n    useOutsideAlerter(wrapperRef);\r\n\r\n    function redirect(to) {\r\n        history.push(`/${to}`);\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"header-deltaw\">\r\n                <div className=\"profile-pic\">\r\n                    <PortalUserConsumer>\r\n                        {({ currentSelectedContact }) => (\r\n                            <span className=\"profile-title\">{currentSelectedContact.fullName}</span>\r\n                        )}\r\n                    </PortalUserConsumer>\r\n                </div>\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={6}>\r\n                            <div className=\"header-logo\">\r\n                                <Image src=\"images/logo.png\" />\r\n                            </div>\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                {/* Hambuger menu */}\r\n                                <div className=\"bm-burger-button\" onClick={openMenu}>\r\n                                    <span>\r\n                                        <span className=\"bm-burger-bars bm-burger-bar-1\" />\r\n                                        <span className=\"bm-burger-bars bm-burger-bar-2\" />\r\n                                        <span className=\"bm-burger-bars bm-burger-bar-3\" />\r\n                                    </span>\r\n                                </div>\r\n                                {/* User switch menu */}\r\n                                <AuthConsumer>\r\n                                    {({ logout }) => {\r\n                                        return (\r\n                                            <PortalUserConsumer>\r\n                                                {({\r\n                                                    user,\r\n                                                    currentSelectedContact,\r\n                                                    setCurrentContact,\r\n                                                    resetCurrentUserToDefault,\r\n                                                }) => {\r\n                                                    return (\r\n                                                        <Dropdown alignRight>\r\n                                                            <Dropdown.Toggle>\r\n                                                                <FaUser />\r\n                                                            </Dropdown.Toggle>\r\n                                                            <Dropdown.Menu>\r\n                                                                <Dropdown.Header>Ingelogd als</Dropdown.Header>\r\n                                                                <Dropdown.Item disabled>{user.fullName}</Dropdown.Item>\r\n                                                                <Dropdown.Item>\r\n                                                                    <Link\r\n                                                                        to={'/wijzig-inloggegevens'}\r\n                                                                        className={'dropdown-link'}\r\n                                                                    >\r\n                                                                        Wijzig inloggegevens\r\n                                                                    </Link>\r\n                                                                </Dropdown.Item>\r\n                                                                {/*<Dropdown.Item*/}\r\n                                                                {/*href={'#/wijzig-inloggegevens'}*/}\r\n                                                                {/*className={'dropdown-link'}*/}\r\n                                                                {/*>*/}\r\n                                                                {/*Wijzig inloggegevens*/}\r\n                                                                {/*</Dropdown.Item>*/}\r\n                                                                <Dropdown.Divider />\r\n                                                                <Dropdown.Header>Beheren van</Dropdown.Header>\r\n                                                                <Dropdown.Item\r\n                                                                    onClick={() => {\r\n                                                                        setCurrentContact(user);\r\n                                                                        redirect('gegevens');\r\n                                                                    }}\r\n                                                                    active={\r\n                                                                        currentSelectedContact.id === user.id\r\n                                                                            ? true\r\n                                                                            : false\r\n                                                                    }\r\n                                                                >\r\n                                                                    {user.fullName}\r\n                                                                </Dropdown.Item>\r\n                                                                {user.occupations\r\n                                                                    ? user.occupations.map(occupationContact =>\r\n                                                                          (occupationContact.primaryContact.typeId ===\r\n                                                                              'organisation' &&\r\n                                                                              occupationContact.primary) ||\r\n                                                                          (occupationContact.primaryContact.typeId ===\r\n                                                                              'person' &&\r\n                                                                              occupationContact.occupation\r\n                                                                                  .occupationForPortal) ? (\r\n                                                                              <Dropdown.Item\r\n                                                                                  key={occupationContact.id}\r\n                                                                                  onClick={() => {\r\n                                                                                      setCurrentContact(\r\n                                                                                          occupationContact.primaryContact\r\n                                                                                      );\r\n                                                                                      redirect('gegevens');\r\n                                                                                  }}\r\n                                                                                  active={\r\n                                                                                      currentSelectedContact.id ===\r\n                                                                                      occupationContact.primaryContact\r\n                                                                                          .id\r\n                                                                                          ? true\r\n                                                                                          : false\r\n                                                                                  }\r\n                                                                              >\r\n                                                                                  {\r\n                                                                                      occupationContact.primaryContact\r\n                                                                                          .fullName\r\n                                                                                  }\r\n                                                                              </Dropdown.Item>\r\n                                                                          ) : null\r\n                                                                      )\r\n                                                                    : null}\r\n                                                                <Dropdown.Divider />\r\n                                                                <Dropdown.Item\r\n                                                                    onClick={() => {\r\n                                                                        logout();\r\n                                                                        resetCurrentUserToDefault();\r\n                                                                    }}\r\n                                                                >\r\n                                                                    Log uit\r\n                                                                </Dropdown.Item>\r\n                                                            </Dropdown.Menu>\r\n                                                        </Dropdown>\r\n                                                    );\r\n                                                }}\r\n                                            </PortalUserConsumer>\r\n                                        );\r\n                                    }}\r\n                                </AuthConsumer>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            {/* Sidebar menu */}\r\n            <Menu\r\n                right\r\n                width={'300px'}\r\n                // noOverlay\r\n                isOpen={menuOpen}\r\n                onStateChange={state => handleStateChange(state)}\r\n                customBurgerIcon={false}\r\n            >\r\n                <div className={'sidebar-menu'}>\r\n                    <React.Fragment>\r\n                        <h6 className=\"heading in-menu\">MENU</h6>\r\n                        <Link\r\n                            to={'/inschrijvingen-projecten'}\r\n                            className={`nav-link w-nav-link w--nav-link-open ${\r\n                                location.pathname === '/' ? 'w--current' : ''\r\n                            }`}\r\n                            onClick={closeMenu}\r\n                        >\r\n                            Huidige deelnames\r\n                        </Link>\r\n                        <Link\r\n                            to={'/gegevens'}\r\n                            className={`nav-link w-nav-link w--nav-link-open ${\r\n                                location.pathname === '/gegevens' ? 'w--current' : ''\r\n                            }`}\r\n                            onClick={closeMenu}\r\n                        >\r\n                            Gegevens\r\n                        </Link>\r\n                        {/* later */}\r\n                        {/*<Link*/}\r\n                        {/*to={'/deelname-projecten'}*/}\r\n                        {/*className={`nav-link w-nav-link w--nav-link-open ${*/}\r\n                        {/*location.pathname === '/' ? 'w--current' : ''*/}\r\n                        {/*}`}*/}\r\n                        {/*onClick={closeMenu}*/}\r\n                        {/*>*/}\r\n                        {/*Deelnames*/}\r\n                        {/*</Link>*/}\r\n                        <Link\r\n                            to={'/inschrijven-projecten'}\r\n                            className={`nav-link w-nav-link w--nav-link-open ${\r\n                                location.pathname === '/inschrijven-projecten' ? 'w--current' : ''\r\n                            }`}\r\n                            onClick={closeMenu}\r\n                        >\r\n                            Inschrijven projecten\r\n                        </Link>\r\n                    </React.Fragment>\r\n                </div>\r\n            </Menu>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst BASE_URL = window.__SERVER_DATA__.base_url;\r\nconst localStorageToken = '__customer-portal-econobis-token__';\r\nconst localStorageLastActivity = '__customer-portal-econobis-last-activity__';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: `${BASE_URL}`,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n    function(config) {\r\n        // First check if token is expired or not\r\n        checkTokenExpiration();\r\n        // Do something before request is sent\r\n        const AUTH_TOKEN = 'Bearer ' + localStorage.getItem(localStorageToken);\r\n        config.headers.Authorization = AUTH_TOKEN;\r\n        return config;\r\n    },\r\n    function(error) {\r\n        // Do something with request error\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Check token expiration and redirect if token is expired\r\nfunction checkTokenExpiration() {\r\n    const lastActivity = moment(localStorage.getItem(localStorageLastActivity));\r\n\r\n    if (\r\n        !localStorage.getItem(localStorageLastActivity) ||\r\n        lastActivity.add('30', 'minutes').format() < moment().format()\r\n    ) {\r\n        if (window.location.hash !== '#/login' && window.location.hash !== '#/loguit') {\r\n            setTimeout(() => {\r\n                localStorage.removeItem(localStorageToken);\r\n                localStorage.removeItem(localStorageLastActivity);\r\n                window.location.reload();\r\n            }, 100);\r\n        }\r\n    } else {\r\n        localStorage.setItem(localStorageLastActivity, moment().format());\r\n    }\r\n}\r\n\r\nexport default axiosInstance;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    fetchPortalUserDetails: function() {\r\n        const requestUrl = `/me`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'number',\r\n                        'fullName',\r\n                        'iban',\r\n                        'ibanAttn',\r\n                        'didAgreeAvg',\r\n                        'dateDidAgreeAvg',\r\n                        'addressLines',\r\n                    ],\r\n                    rlt: {\r\n                        occupations: {\r\n                            fld: ['id', 'occupationId', 'primaryContactId', 'contactId', 'primary'],\r\n                            rlt: {\r\n                                occupation: {\r\n                                    fld: ['id', 'primaryOccupation', 'secondaryOccupation', 'occupationForPortal'],\r\n                                },\r\n                                primaryContact: { fld: ['id', 'fullName', 'typeId'] },\r\n                                contact: { fld: ['id', 'fullName'] },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    fetchPortalUserEmail: function() {\r\n        return axiosInstance.get(`/portal-user-email`);\r\n    },\r\n\r\n    changeEmail: values => {\r\n        const requestUrl = `/portal-user/change-email`;\r\n\r\n        return axiosInstance.post(requestUrl, values);\r\n    },\r\n\r\n    changePassword: values => {\r\n        const requestUrl = `/portal-user/change-password`;\r\n\r\n        return axiosInstance.post(requestUrl, values);\r\n    },\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthConsumer } from '../context/AuthContext';\r\nimport Header from '../components/layout/Header';\r\nimport PortalUserAPI from '../api/portal-user/PortalUserAPI';\r\nimport { PortalUserConsumer } from '../context/PortalUserContext';\r\n\r\nconst ProtectedRoute = ({ component: Component, updateUser, isAuth, ...rest }) => {\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            (function callFetchPortalUserDetails() {\r\n                PortalUserAPI.fetchPortalUserDetails()\r\n                    .then(payload => {\r\n                        updateUser(payload.data.data);\r\n                    })\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                    });\r\n            })();\r\n        }\r\n    }, [isAuth]);\r\n\r\n    return (\r\n        <AuthConsumer>\r\n            {({ isAuth }) => (\r\n                <div className=\"body-2\" id=\"body-2\">\r\n                    <Header />\r\n                    <Route render={props => (isAuth ? <Component {...props} /> : <Redirect to=\"/login\" />)} {...rest} />\r\n                </div>\r\n            )}\r\n        </AuthConsumer>\r\n    );\r\n};\r\n\r\nexport default function ProtectedRouteWithContext(props) {\r\n    return (\r\n        <AuthConsumer>\r\n            {({ isAuth }) => (\r\n                <PortalUserConsumer>\r\n                    {({ updateUser }) => <ProtectedRoute {...props} updateUser={updateUser} isAuth={isAuth} />}\r\n                </PortalUserConsumer>\r\n            )}\r\n        </AuthConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => (\r\n    <Route render={props => <Component {...props} />} {...rest} />\r\n);\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get } from 'lodash';\r\n\r\nconst InputText = ({\r\n    field,\r\n    type,\r\n    className,\r\n    id,\r\n    readOnly,\r\n    placeholder,\r\n    showErrorMessage,\r\n    errors,\r\n    touched,\r\n    classNameErrorMessage,\r\n    disabled,\r\n}) => {\r\n    return (\r\n        <>\r\n            {get(errors, field.name, '') && get(touched, field.name, '') && showErrorMessage ? (\r\n                <small className={`${classNameErrorMessage}`}>{get(errors, field.name, '')}</small>\r\n            ) : null}\r\n            <input\r\n                type={type}\r\n                className={`text-input w-input ${className} ${\r\n                    Boolean(get(errors, field.name, '') && get(touched, field.name, '')) ? 'has-error mb-0' : ''\r\n                } `}\r\n                id={id}\r\n                {...field}\r\n                readOnly={readOnly}\r\n                placeholder={placeholder}\r\n                disabled={disabled}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nInputText.defaultProps = {\r\n    type: 'text',\r\n    className: 'content',\r\n    readOnly: false,\r\n    placeholder: '',\r\n    showErrorMessage: true,\r\n    classNameErrorMessage: 'text-danger',\r\n    errors: {},\r\n    touched: {},\r\n};\r\n\r\nInputText.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    type: PropTypes.string,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    readOnly: PropTypes.bool,\r\n    showErrorMessage: PropTypes.bool,\r\n    classNameErrorMessage: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    errors: PropTypes.object,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default InputText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ButtonText = ({\r\n    buttonClassName,\r\n    buttonText,\r\n    onClickAction,\r\n    type,\r\n    loading,\r\n    title,\r\n    loadingSpinnerColor,\r\n    disabled,\r\n}) => (\r\n    <Button\r\n        type={type}\r\n        className={`${buttonClassName}`}\r\n        onClick={onClickAction}\r\n        disabled={loading || disabled}\r\n        title={title}\r\n        size=\"sm\"\r\n    >\r\n        {loading ? <ClipLoader color={loadingSpinnerColor} size={17} /> : <span>{buttonText}</span>}\r\n    </Button>\r\n);\r\n\r\nButtonText.defaultProps = {\r\n    buttonClassName: '',\r\n    type: 'button',\r\n    title: '',\r\n    loading: false,\r\n    loadingSpinnerColor: 'white',\r\n    disabled: false,\r\n};\r\n\r\nButtonText.propTypes = {\r\n    buttonClassName: PropTypes.string,\r\n    buttonText: PropTypes.string.isRequired,\r\n    onClickAction: PropTypes.func,\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    loading: PropTypes.bool,\r\n    loadingSpinnerColor: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n};\r\n\r\nexport default ButtonText;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n    password: Yup.string().required('Verplicht'),\r\n});\r\n\r\nconst LoginForm = function({ handleSubmit, login }) {\r\n    return (\r\n        <Formik\r\n            initialValues={{ username: '', password: '' }}\r\n            enableReinitialize={true}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values, actions) => {\r\n                actions.setSubmitting(true);\r\n                handleSubmit(values, actions, login);\r\n            }}\r\n            render={({ isSubmitting, errors, touched }) => {\r\n                return (\r\n                    <Form>\r\n                        <Field\r\n                            name=\"username\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"username\"\r\n                                    className={''}\r\n                                    placeholder={'email'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    // showErrorMessage={false}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Field\r\n                            name=\"password\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"password\"\r\n                                    className={''}\r\n                                    placeholder={'wachtwoord'}\r\n                                    type={'password'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    // showErrorMessage={false}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <ButtonText\r\n                            buttonText={'Log in'}\r\n                            buttonClassName={'authorization-button'}\r\n                            type={'submit'}\r\n                            loading={isSubmitting}\r\n                            loadingSpinnerColor={'#034b8c'}\r\n                        />\r\n                    </Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import axios from 'axios';\r\n\r\nconst AUTH_KEY = {\r\n    client_id: window.__SERVER_DATA__.client_id,\r\n    client_secret: window.__SERVER_DATA__.client_key,\r\n    grant_type: 'password',\r\n};\r\n\r\nconst BASE_URL = window.__SERVER_DATA__.base_url;\r\n\r\nexport default {\r\n    newAccount: payload => {\r\n        const requestUrl = `${BASE_URL}/new-account`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n    newAccountSuccess: payload => {\r\n        const requestUrl = `${BASE_URL}/new-account-success`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n\r\n    login: loginCredentials => {\r\n        const requestUrl = `${BASE_URL}/oauth/token`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, { ...AUTH_KEY, ...loginCredentials });\r\n    },\r\n\r\n    register: payload => {\r\n        const requestUrl = `${BASE_URL}/register`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n\r\n    forgot: email => {\r\n        const requestUrl = `${BASE_URL}/password/email`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, email);\r\n    },\r\n\r\n    reset: payload => {\r\n        const requestUrl = `${BASE_URL}/password/reset`;\r\n        delete axios.defaults.headers.common['Authorization'];\r\n\r\n        return axios.post(requestUrl, payload);\r\n    },\r\n};\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nconst URL_PORTAL_SETTINGS = `setting`;\r\n\r\nexport default {\r\n    fetchPortalSettings: keys => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/multiple${keys}`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n    fetchCooperativeName: () => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/cooperative-name`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n    fetchShowNewAtCooperativeLink: () => {\r\n        const requestUrl = `${URL_PORTAL_SETTINGS}/show-new-at-cooperative-link`;\r\n\r\n        return axiosInstance.get(requestUrl);\r\n    },\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport { AuthConsumer } from '../../../context/AuthContext';\r\nimport LoginForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PortalSettingsAPI from '../../../api/portal-settings/PortalSettingsAPI';\r\n\r\nexport default props => {\r\n    const [showError, toggleError] = useState(false);\r\n\r\n    const [redirectToReferrer, toggleRedirect] = useState(false);\r\n    let { from } = props.location.state || { from: { pathname: '/gegevens' } };\r\n\r\n    const [cooperativeName, setCooperativeName] = useState('');\r\n    const [showNewAtCooperativeLink, setShowNewAtCooperativeLink] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (function callFetchCooperativeName() {\r\n            PortalSettingsAPI.fetchCooperativeName()\r\n                .then(payload => {\r\n                    setCooperativeName(payload.data);\r\n                })\r\n                .catch(error => {\r\n                    // alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                });\r\n        })();\r\n\r\n        (function callFetchShowNewAtCooperativeLink() {\r\n            PortalSettingsAPI.fetchShowNewAtCooperativeLink()\r\n                .then(payload => {\r\n                    setShowNewAtCooperativeLink(payload.data);\r\n                })\r\n                .catch(error => {\r\n                    // alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                });\r\n        })();\r\n    }, []);\r\n\r\n    function handleSubmit(values, actions, login) {\r\n        AuthAPI.login(values)\r\n            .then(payload => {\r\n                toggleError(false);\r\n                login(payload.data, () => toggleRedirect(true));\r\n            })\r\n            .catch(error => {\r\n                // If login fails show error and then set submitting back to false\r\n                toggleError(true);\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect() {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {redirectToReferrer ? (\r\n                redirect()\r\n            ) : (\r\n                <AuthConsumer>\r\n                    {({ isAuth, login }) => (\r\n                        <Container fluid className=\"authorization-container\">\r\n                            <Row className=\"justify-content-center align-content-center full-height\">\r\n                                <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\" xl=\"2\">\r\n                                    <img src=\"images/logo.png\" alt=\"\" className=\"image logo-container\" />\r\n                                    <LoginForm handleSubmit={handleSubmit} login={login} />\r\n                                    {showError ? (\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                                Gebruikte logingegevens zijn onjuist!\r\n                                            </Alert>\r\n                                        </Row>\r\n                                    ) : null}\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <Link to={'/wachtwoord-vergeten'} className=\"authorization-link\">\r\n                                            Wachtwoord vergeten?\r\n                                        </Link>\r\n                                    </Row>\r\n                                    {showNewAtCooperativeLink ? (\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <Link to={'/nieuw-account'} className=\"authorization-link\">\r\n                                                Nieuw bij {cooperativeName}?\r\n                                            </Link>\r\n                                        </Row>\r\n                                    ) : null}\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    )}\r\n                </AuthConsumer>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { GoogleReCaptchaProvider, GoogleReCaptcha } from 'react-google-recaptcha-v3';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(10, 'Minimum van ${min} verplicht')\r\n        .matches(/([0-9])/, 'Minimaal 1 cijfer is verplicht')\r\n        .matches(/([A-Z])/, 'Minimaal 1 hoofdletter is verplicht')\r\n        .required('Verplicht'),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Wachtwoorden moeten gelijk zijn')\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst RegisterForm = ({ handleSubmit, email }) => (\r\n    <Formik\r\n        initialValues={{ password: '', passwordConfirmation: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <div className=\"mb-3\">\r\n                    <p className={'text-white'}>\r\n                        Stel je wachtwoord in voor <strong>{email}</strong>. Daarna ben je direct ingelogd.\r\n                    </p>\r\n                </div>\r\n                <Row>\r\n                    <Col>\r\n                        <Field\r\n                            name=\"password\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"password\"\r\n                                    className={field.value ? 'numeric-password' : ''}\r\n                                    placeholder={'Nieuw wachtwoord'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    classNameErrorMessage={'text-white'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"mt-2\">\r\n                        <Field\r\n                            name=\"passwordConfirmation\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"passwordConfirmation\"\r\n                                    className={field.value ? 'numeric-password' : ''}\r\n                                    placeholder={'Herhaal nieuw wachtwoord'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    classNameErrorMessage={'text-white text-white mb-3'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"my-3\">\r\n                        <small className={'text-white'}>\r\n                            Het wachtwoord moet minimaal 10 karakters lang zijn en moet minimaal 1 cijfer en 1\r\n                            hoofdletter bevatten.\r\n                        </small>\r\n                    </Col>\r\n                </Row>\r\n                <ButtonText\r\n                    buttonText={'Verzenden'}\r\n                    buttonClassName={'authorization-button'}\r\n                    size=\"sm\"\r\n                    type={'submit'}\r\n                    loading={isSubmitting}\r\n                    loadingSpinnerColor={'#034b8c'}\r\n                />\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport RegisterForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { AuthConsumer } from '../../../context/AuthContext';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\n\r\nconst Register = ({ location, match, login }) => {\r\n    const [showError, toggleError] = useState(false);\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const registrationCode = decodeURIComponent(match.params.registrationCode);\r\n    const email = decodeURIComponent(match.params.email);\r\n\r\n    const [redirectToReferrer, toggleRedirect] = useState(false);\r\n    let { from } = location.state || { from: { pathname: '/gegevens' } };\r\n\r\n    function handleSubmit(values, actions) {\r\n        AuthAPI.register({\r\n            registrationCode,\r\n            email,\r\n            password: values.password,\r\n            password_confirmation: values.passwordConfirmation,\r\n        })\r\n            .then(payload => {\r\n                toggleSuccessMessage(true);\r\n                AuthAPI.login({ username: email, password: values.password })\r\n                    .then(payload => {\r\n                        toggleError(false);\r\n                        login(payload.data, () => {});\r\n\r\n                        setTimeout(() => {\r\n                            toggleRedirect(true);\r\n                        }, 15000);\r\n                    })\r\n                    .catch(error => {\r\n                        // If login fails show error and then set submitting back to false\r\n                        toggleError(true);\r\n                        actions.setSubmitting(false);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // If login fails show error and then set submitting back to false\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect() {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {redirectToReferrer ? (\r\n                redirect()\r\n            ) : (\r\n                <Container fluid className=\"authorization-container\">\r\n                    <Row className=\"justify-content-center align-content-center full-height\">\r\n                        <Col xs=\"12\" sm=\"8\" md=\"6\" lg=\"4\" xl=\"2\">\r\n                            <img src=\"images/logo.png\" alt=\"\" className=\"image logo-container\" />\r\n                            {showSuccessMessage ? (\r\n                                <>\r\n                                    <h3 className={'text-white'}>Je account is geactiveerd</h3>\r\n                                    <p className={'text-white'}>Je bent nu ingelogd</p>\r\n                                    <ButtonText\r\n                                        buttonText={'Ga verder'}\r\n                                        onClickAction={toggleRedirect}\r\n                                        buttonClassName={'authorization-button'}\r\n                                        size=\"sm\"\r\n                                    />\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <h3 className={'text-white'}>Account activeren</h3>\r\n                                    <RegisterForm handleSubmit={handleSubmit} email={email} />\r\n                                </>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default function RegisterWithContext(props) {\r\n    return <AuthConsumer>{({ login }) => <Register {...props} login={login} />}</AuthConsumer>;\r\n}\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst ForgotForm = ({ handleSubmit, showSuccessMessage }) => (\r\n    <Formik\r\n        initialValues={{ email: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <Field\r\n                    name=\"email\"\r\n                    render={({ field }) => (\r\n                        <InputText\r\n                            field={field}\r\n                            id=\"email\"\r\n                            className={''}\r\n                            placeholder={'E-mailadres'}\r\n                            errors={errors}\r\n                            touched={touched}\r\n                            // todo check waarom dit erin stond ?!\r\n                            // showErrorMessage={false}\r\n                        />\r\n                    )}\r\n                />\r\n                <ButtonText\r\n                    buttonText={showSuccessMessage ? 'E-mail is verstuurd!' : 'Verstuur wachtwoord reset link'}\r\n                    buttonClassName={'authorization-button'}\r\n                    size=\"sm\"\r\n                    type={'submit'}\r\n                    loading={isSubmitting}\r\n                    loadingSpinnerColor={'#034b8c'}\r\n                    disabled={showSuccessMessage}\r\n                />\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default ForgotForm;\r\n","import React, { useState } from 'react';\r\n\r\nimport ForgotForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Forgot = props => {\r\n    const [showError, toggleError] = useState(false);\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n\r\n    function handleSubmit(values, actions) {\r\n        AuthAPI.forgot(values)\r\n            .then(payload => {\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                // If forgot API fails show error and then set submitting back to false\r\n                // toggleError(true);\r\n                // If forgot API fails show succesmessage anyway\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"authorization-container\">\r\n            <Row className=\"justify-content-center align-content-center full-height\">\r\n                <Col xs=\"12\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"4\">\r\n                    <img src=\"images/logo.png\" alt=\"\" className=\"image logo-container\" />\r\n                    {showSuccessMessage ? (\r\n                        <div>\r\n                            <Row className={'justify-content-center '}>\r\n                                <h3 className={'text-light'}>Een E-mail is onderweg!</h3>\r\n                            </Row>\r\n                            <Row className={'justify-content-center '}>\r\n                                <p className={'text-light'}>\r\n                                    Als het e-mailadres bij ons bekend is, dan ontvang je binnen enkele minuten een\r\n                                    e-mail met een persoonlijke link. Via deze link kun je een nieuw wachtwoord\r\n                                    instellen.\r\n                                </p>\r\n                            </Row>\r\n                        </div>\r\n                    ) : (\r\n                        <div>\r\n                            <Row className={'justify-content-center '}>\r\n                                <h3 className={'text-light'}>Wachtwoord vergeten</h3>\r\n                            </Row>\r\n                            <Row className={'justify-content-center '}>\r\n                                <p className={'text-light'}>\r\n                                    Vul het e-mailadres in waarmee je inlogt en die bij ons bekend is. Je ontvangt van\r\n                                    ons een e-mail waarmee je een nieuw wachtwoord kunt instellen.\r\n                                </p>\r\n                            </Row>\r\n                            <Row className={'justify-content-center '}>\r\n                                <Col xs={12} md={6}>\r\n                                    <ForgotForm handleSubmit={handleSubmit} showSuccessMessage={showSuccessMessage} />\r\n                                    {showError ? (\r\n                                        <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                            E-mailadres is niet bekend!\r\n                                        </Alert>\r\n                                    ) : null}\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    )}\r\n                    <Row className={'justify-content-center '}>\r\n                        <Link to={'/login'} className=\"authorization-link\">\r\n                            Terug naar inloggen\r\n                        </Link>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Forgot;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(10, 'Minimum van ${min} verplicht')\r\n        .matches(/([0-9])/, 'Minimaal 1 cijfer is verplicht')\r\n        .matches(/([A-Z])/, 'Minimaal 1 hoofdletter is verplicht')\r\n        .required('Verplicht'),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Wachtwoorden moeten gelijk zijn')\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst ResetForm = ({ handleSubmit, email }) => (\r\n    <Formik\r\n        initialValues={{ password: '', passwordConfirmation: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <Row className=\"justify-content-center\">\r\n                    <p className={'text-white'}>\r\n                        Stel een nieuw wachtwoord in voor <strong>{email}</strong>. Daarna ben je direct ingelogd.\r\n                    </p>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Field\r\n                        name=\"password\"\r\n                        render={({ field }) => (\r\n                            <InputText\r\n                                field={field}\r\n                                id=\"password\"\r\n                                className={field.value ? 'numeric-password' : ''}\r\n                                placeholder={'Nieuw wachtwoord'}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                                classNameErrorMessage={'text-white'}\r\n                            />\r\n                        )}\r\n                    />\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <Field\r\n                        name=\"passwordConfirmation\"\r\n                        render={({ field }) => (\r\n                            <InputText\r\n                                field={field}\r\n                                id=\"passwordConfirmation\"\r\n                                className={field.value ? 'numeric-password' : ''}\r\n                                placeholder={'Herhaal nieuw wachtwoord'}\r\n                                errors={errors}\r\n                                touched={touched}\r\n                                classNameErrorMessage={'text-white text-white mb-3'}\r\n                            />\r\n                        )}\r\n                    />\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <small className={'text-white'}>\r\n                        Het wachtwoord moet minimaal 10 karakters lang zijn en moet minimaal 1 cijfer en 1 hoofdletter\r\n                        bevatten.\r\n                    </small>\r\n                </Row>\r\n                <Row className=\"justify-content-center\">\r\n                    <ButtonText\r\n                        buttonText={'Verzenden'}\r\n                        buttonClassName={'authorization-button'}\r\n                        size=\"sm\"\r\n                        type={'submit'}\r\n                        loading={isSubmitting}\r\n                        loadingSpinnerColor={'#034b8c'}\r\n                    />\r\n                </Row>\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default ResetForm;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport ResetForm from './Form';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { AuthConsumer } from '../../../context/AuthContext';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\n\r\nconst Reset = ({ location, match, login }) => {\r\n    const [showError, toggleError] = useState(false);\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const token = decodeURIComponent(match.params.token);\r\n    const email = decodeURIComponent(match.params.email);\r\n\r\n    const [redirectToReferrer, toggleRedirect] = useState(false);\r\n    let { from } = location.state || { from: { pathname: '/gegevens' } };\r\n\r\n    function handleSubmit(values, actions) {\r\n        AuthAPI.reset({ token, email, password: values.password, password_confirmation: values.passwordConfirmation })\r\n            .then(payload => {\r\n                toggleSuccessMessage(true);\r\n                AuthAPI.login({ username: email, password: values.password })\r\n                    .then(payload => {\r\n                        toggleError(false);\r\n                        login(payload.data, () => {});\r\n\r\n                        setTimeout(() => {\r\n                            toggleRedirect(true);\r\n                        }, 15000);\r\n                    })\r\n                    .catch(error => {\r\n                        // If login fails show error and then set submitting back to false\r\n                        toggleError(true);\r\n                        actions.setSubmitting(false);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // If login fails show error and then set submitting back to false\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect() {\r\n        return <Redirect to={from} />;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {redirectToReferrer ? (\r\n                redirect()\r\n            ) : (\r\n                <Container fluid className=\"authorization-container\">\r\n                    <Row className=\"justify-content-center align-content-center full-height\">\r\n                        <Col xs=\"12\" sm=\"8\" md=\"6\" lg=\"4\" xl=\"2\">\r\n                            <img src=\"images/logo.png\" alt=\"\" className=\"image logo-container\" />\r\n                            {showSuccessMessage ? (\r\n                                <>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <h3 className={'text-white'}>Je wachtwoord is ingesteld</h3>\r\n                                    </Row>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <p className={'text-white'}>Je bent nu ingelogd</p>\r\n                                    </Row>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <ButtonText\r\n                                            buttonText={'Ga verder'}\r\n                                            onClickAction={toggleRedirect}\r\n                                            buttonClassName={'authorization-button'}\r\n                                            size=\"sm\"\r\n                                        />\r\n                                    </Row>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <Row className=\"justify-content-center\">\r\n                                        <h3 className={'text-white'}>Wachtwoord wijzigen</h3>\r\n                                    </Row>\r\n                                    <ResetForm handleSubmit={handleSubmit} email={email} />\r\n                                </>\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default function ResetWithContext(props) {\r\n    return <AuthConsumer>{({ login }) => <Reset {...props} login={login} />}</AuthConsumer>;\r\n}\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    fetchContact: function(id) {\r\n        const requestUrl = `/jory/contact/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'typeId',\r\n                        'number',\r\n                        'fullName',\r\n                        'iban',\r\n                        'ibanAttn',\r\n                        'didAgreeAvg',\r\n                        'dateDidAgreeAvg',\r\n                        'addressLines',\r\n                        'isParticipant',\r\n                        'isParticipantPcrProject',\r\n                    ],\r\n                    rlt: {\r\n                        person: {\r\n                            fld: [\r\n                                'id',\r\n                                'firstName',\r\n                                'lastName',\r\n                                'initials',\r\n                                'titleId',\r\n                                'lastNamePrefix',\r\n                                'dateOfBirth',\r\n                            ],\r\n                            rlt: {\r\n                                title: { fld: ['id', 'name'] },\r\n                            },\r\n                        },\r\n                        organisation: {\r\n                            fld: ['id', 'name', 'website', 'chamberOfCommerceNumber', 'vatNumber'],\r\n                        },\r\n                        emailAddresses: { fld: ['id', 'email', 'primary', 'typeId'] },\r\n                        phoneNumbers: { fld: ['id', 'number', 'primary', 'typeId'] },\r\n                        addresses: {\r\n                            fld: [\r\n                                'id',\r\n                                'street',\r\n                                'number',\r\n                                'addition',\r\n                                'postalCode',\r\n                                'city',\r\n                                'countryId',\r\n                                'primary',\r\n                                'typeId',\r\n                            ],\r\n                            rlt: {\r\n                                country: { fld: ['id', 'name'] },\r\n                            },\r\n                        },\r\n                        occupations: {\r\n                            fld: ['id', 'occupationId', 'primaryContactId', 'contactId', 'primary'],\r\n                            rlt: {\r\n                                occupation: {\r\n                                    fld: ['id', 'primaryOccupation', 'secondaryOccupation', 'occupationForPortal'],\r\n                                },\r\n                                primaryContact: {\r\n                                    fld: ['id', 'fullName'],\r\n                                },\r\n                            },\r\n                        },\r\n                        primaryContactEnergySupplier: {\r\n                            fld: [\r\n                                'id',\r\n                                'energySupplierId',\r\n                                'esNumber',\r\n                                'eanElectricity',\r\n                                'eanGas',\r\n                                'memberSince',\r\n                                'isCurrentSupplier',\r\n                            ],\r\n                            rlt: { energySupplier: [] },\r\n                            flt: {\r\n                                f: 'isCurrentSupplier',\r\n                                d: true,\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    fetchContactWithParticipants: function(id) {\r\n        const requestUrl = `/jory/contact/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'typeId',\r\n                        'number',\r\n                        'fullName',\r\n                        'iban',\r\n                        'ibanAttn',\r\n                        'didAgreeAvg',\r\n                        'dateDidAgreeAvg',\r\n                        'addressLines',\r\n                    ],\r\n                    rlt: {\r\n                        participations: {\r\n                            fld: [\r\n                                'id',\r\n                                'dateRegister',\r\n                                'didAcceptAgreement',\r\n                                'dateDidAcceptAgreement',\r\n                                'didUnderstandInfo',\r\n                                'dateDidUnderstandInfo',\r\n                                'participationsDefinitive',\r\n                                'participationsGranted',\r\n                                'participationsOptioned',\r\n                                'participationsInteressed',\r\n                                'amountDefinitive',\r\n                                'amountGranted',\r\n                                'amountOptioned',\r\n                                'amountInteressed',\r\n                            ],\r\n                            rlt: {\r\n                                project: {\r\n                                    fld: ['id', 'name', 'dateEnd', 'linkUnderstandInfo'],\r\n                                    rlt: { projectType: { fld: ['id', 'codeRef'] } },\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    updateContact: contact => {\r\n        const requestUrl = `/contact/${contact.id}`;\r\n\r\n        return axiosInstance.post(requestUrl, contact);\r\n    },\r\n\r\n    previewDocument: registerValues => {\r\n        const requestUrl = `/contact/${registerValues.contactId}/${registerValues.projectId}/preview-document`;\r\n\r\n        return axiosInstance.post(requestUrl, registerValues);\r\n    },\r\n};\r\n","export default function(contactData) {\r\n    const typeContact = contactData.typeId ? contactData.typeId : null;\r\n\r\n    let emptyAddress = { street: '', number: '', addition: '', postalCode: '', city: '', countryId: null };\r\n    let primaryAddress = null;\r\n    let visitAddress = null;\r\n    let postalAddress = null;\r\n    let invoiceAddress = null;\r\n    switch (typeContact) {\r\n        case 'person':\r\n            // Set primary address\r\n            primaryAddress = contactData.addresses.find(address => address.primary);\r\n            contactData.primaryAddress = primaryAddress ? { ...emptyAddress, ...primaryAddress } : emptyAddress;\r\n            break;\r\n        case 'organisation':\r\n            // Set visit, postal, invoice addresses\r\n            visitAddress = contactData.addresses.find(address => address.typeId === 'visit');\r\n            contactData.visitAddress = visitAddress ? { ...emptyAddress, ...visitAddress } : emptyAddress;\r\n            postalAddress = contactData.addresses.find(address => address.typeId === 'postal');\r\n            contactData.postalAddress = postalAddress ? { ...emptyAddress, ...postalAddress } : emptyAddress;\r\n            invoiceAddress = contactData.addresses.find(address => address.typeId === 'invoice');\r\n            contactData.invoiceAddress = invoiceAddress ? { ...emptyAddress, ...invoiceAddress } : emptyAddress;\r\n            break;\r\n    }\r\n\r\n    // Set correspondence email address\r\n    let emptyEmail = { email: '' };\r\n    const emailCorrespondence = contactData.emailAddresses.find(emailAddress => emailAddress.primary);\r\n    contactData.emailCorrespondence = emailCorrespondence ? { ...emptyEmail, ...emailCorrespondence } : emptyEmail;\r\n\r\n    // Set invoice email address\r\n    const emailInvoice = contactData.emailAddresses.find(\r\n        emailAddress => emailAddress.typeId === 'invoice' && !emailAddress.primary\r\n    );\r\n    contactData.emailInvoice = emailInvoice ? { ...emptyEmail, ...emailInvoice } : emptyEmail;\r\n\r\n    // Set primary phone number\r\n    let emptyPhoneNumber = { number: '' };\r\n    const phoneNumberPrimary = contactData.phoneNumbers.find(phoneNumber => phoneNumber.primary);\r\n    contactData.phoneNumberPrimary = phoneNumberPrimary\r\n        ? { ...emptyPhoneNumber, ...phoneNumberPrimary }\r\n        : emptyPhoneNumber;\r\n\r\n    // Set first phone number which is not primary\r\n    const phoneNumberTwo = contactData.phoneNumbers.filter(phoneNumber => !phoneNumber.primary)[0];\r\n    contactData.phoneNumberTwo = phoneNumberTwo ? { ...emptyPhoneNumber, ...phoneNumberTwo } : emptyPhoneNumber;\r\n\r\n    // Set primary contact energy supplier\r\n    let emptyPrimaryContactEnergySupplier = {\r\n        energySupplierId: null,\r\n        esNumber: '',\r\n        eanElectricity: '',\r\n        memberSince: '',\r\n        eanGas: '',\r\n    };\r\n    if (!contactData.primaryContactEnergySupplier) {\r\n        contactData.primaryContactEnergySupplier = emptyPrimaryContactEnergySupplier;\r\n    }\r\n    return contactData;\r\n}\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nfunction Loading() {\r\n    return (\r\n        <Row className=\"justify-content-center align-content-center flex-wrap\" style={{ height: '40vh' }}>\r\n            <ClipLoader color={'#3898EC'} size={48} />\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextBlock = ({ children, className, id, placeholder }) => {\r\n    const showPlaceholder = children === '' || children === null || children === undefined;\r\n\r\n    return (\r\n        <div className={`text-block ${className} ${showPlaceholder ? 'placeholder' : ''}`} id={id}>\r\n            {showPlaceholder ? <div className={'placeholder-message'}>{placeholder}</div> : children}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextBlock.defaultProps = {\r\n    className: 'text-block',\r\n    id: '',\r\n    children: '',\r\n    placeholder: '',\r\n};\r\n\r\nTextBlock.propTypes = {\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    placeholder: PropTypes.string,\r\n};\r\n\r\nexport default TextBlock;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Row from 'react-bootstrap/Row';\r\nimport moment from 'moment';\r\n\r\nfunction DefaultContactPersonalView({ portalSettings, initialContact }) {\r\n    const {\r\n        person = {},\r\n        emailCorrespondence,\r\n        emailInvoice,\r\n        phoneNumberPrimary,\r\n        phoneNumberTwo,\r\n        primaryAddress,\r\n        iban,\r\n        ibanAttn,\r\n        didAgreeAvg,\r\n        dateDidAgreeAvg,\r\n        number,\r\n        primaryContactEnergySupplier,\r\n    } = initialContact;\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{number}</TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Naam</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Aanhef'}>\r\n                        {person.title ? person.title.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Initialen'}>\r\n                        {person.initials}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Voornaam'}>\r\n                        {person.firstName}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Tussenvoegsel'}>\r\n                        {person.lastNamePrefix}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Achternaam'}>\r\n                        {person.lastName}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>Geboortedatum</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6 col-md-4'} placeholder={'Geboortedatum'}>\r\n                        {person.dateOfBirth ? moment(person.dateOfBirth).format('L') : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres correspondentie</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailCorrespondence.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres nota</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailInvoice.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 1</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberPrimary.number}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 2</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberTwo.number}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Adres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {primaryAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {primaryAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {primaryAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {primaryAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {primaryAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {primaryAddress.country ? primaryAddress.country.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>IBAN gegevens</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Rekeningnummer (IBAN)'}>\r\n                        {iban}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'IBAN te name van'}>\r\n                        {ibanAttn}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Akkoord privacybeleid</FormLabel>\r\n                <Row>\r\n                    <div className={'col-12 col-sm-8'}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"did_agree_avg\"\r\n                            checked={didAgreeAvg}\r\n                            className=\"w-checkbox-input checkbox\"\r\n                            disabled={true}\r\n                        />\r\n                        <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                            Ik ga akkoord met{' '}\r\n                            <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                privacybeleid\r\n                            </a>{' '}\r\n                            {didAgreeAvg ? (\r\n                                <em>({dateDidAgreeAvg ? ' ' + moment(dateDidAgreeAvg).format('L') : ''})</em>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                        </span>\r\n                    </div>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Energieleverancier</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Energieleverancier'}>\r\n                        {primaryContactEnergySupplier.energySupplier\r\n                            ? primaryContactEnergySupplier.energySupplier.name\r\n                            : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                {primaryContactEnergySupplier && primaryContactEnergySupplier.energySupplierId ? (\r\n                    <>\r\n                        <FormLabel className={'field-label'}>Klant nummer bij leverancier</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant nummer'}>\r\n                                {primaryContactEnergySupplier.esNumber}\r\n                            </TextBlock>\r\n                        </Row>\r\n\r\n                        <FormLabel className={'field-label'}>Klant bij leverancier sinds</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant sinds'}>\r\n                                {primaryContactEnergySupplier.memberSince\r\n                                    ? moment(primaryContactEnergySupplier.memberSince).format('L')\r\n                                    : ''}\r\n                            </TextBlock>\r\n                        </Row>\r\n\r\n                        <FormLabel className={'field-label'}>EAN nummer electriciteit</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer electriciteit'}>\r\n                                {primaryContactEnergySupplier.eanElectricity}\r\n                            </TextBlock>\r\n                        </Row>\r\n\r\n                        <FormLabel className={'field-label'}>EAN nummer gas</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer gas'}>\r\n                                {primaryContactEnergySupplier.eanGas}\r\n                            </TextBlock>\r\n                        </Row>\r\n                    </>\r\n                ) : (\r\n                    ''\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default DefaultContactPersonalView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { get } from 'lodash';\r\n\r\nconst Select = ({\r\n    field,\r\n    className,\r\n    id,\r\n    options,\r\n    optionLabel,\r\n    emptyOption,\r\n    placeholder,\r\n    showErrorMessage,\r\n    errors,\r\n    touched,\r\n    classNameErrorMessage,\r\n    disabled,\r\n}) => {\r\n    return (\r\n        <>\r\n            {get(errors, field.name, '') && get(touched, field.name, '') && showErrorMessage ? (\r\n                <small className={`${classNameErrorMessage}`}>{get(errors, field.name, '')}</small>\r\n            ) : null}\r\n            <select\r\n                className={`select-field w-select content ${className} ${\r\n                    Boolean(get(errors, field.name, '') && get(touched, field.name, '')) ? 'has-error mb-0' : ''\r\n                } `}\r\n                id={id}\r\n                {...field}\r\n                disabled={disabled}\r\n            >\r\n                {emptyOption ? <option value=\"\">{placeholder ? `-- ${placeholder} --` : ''}</option> : null}\r\n                {options.map(option => {\r\n                    return (\r\n                        <option key={option.id} value={option.id}>\r\n                            {option[optionLabel]}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </select>\r\n        </>\r\n    );\r\n};\r\n\r\nSelect.defaultProps = {\r\n    className: '',\r\n    readOnly: false,\r\n    required: '',\r\n    optionLabel: 'name',\r\n    emptyOption: true,\r\n    placeholder: '',\r\n    showErrorMessage: true,\r\n    classNameErrorMessage: 'text-danger',\r\n    errors: {},\r\n    touched: {},\r\n};\r\n\r\nSelect.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    options: PropTypes.array.isRequired,\r\n    optionLabel: PropTypes.string,\r\n    emptyOption: PropTypes.bool,\r\n    placeholder: PropTypes.string,\r\n    showErrorMessage: PropTypes.bool,\r\n    classNameErrorMessage: PropTypes.string,\r\n    errors: PropTypes.object,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default Select;\r\n","export default [\r\n    { id: 'AU', name: 'Australië' },\r\n    { id: 'BE', name: 'België' },\r\n    { id: 'CA', name: 'Canade' },\r\n    { id: 'DK', name: 'Denemarken' },\r\n    { id: 'DE', name: 'Duitsland' },\r\n    { id: 'FI', name: 'Finland' },\r\n    { id: 'FR', name: 'Frankrijk' },\r\n    { id: 'IE', name: 'Ierland' },\r\n    { id: 'IT', name: 'Italië' },\r\n    { id: 'LU', name: 'Luxemburg' },\r\n    { id: 'NL', name: 'Nederland' },\r\n    { id: 'NO', name: 'Noorwegen' },\r\n    { id: 'AT', name: 'Oostenrijk' },\r\n    { id: 'PT', name: 'Portugal' },\r\n    { id: 'ES', name: 'Spanje' },\r\n    { id: 'GB', name: 'Verenigd Koninkrijk' },\r\n    { id: 'VS', name: 'Verenigde Staten' },\r\n    { id: 'SE', name: 'Zweden' },\r\n    { id: 'CH', name: 'Zwitserland' },\r\n];\r\n","export default [\r\n    { id: 1, name: 'OM' },\r\n    { id: 2, name: 'Budget Energie' },\r\n    { id: 3, name: 'E.on' },\r\n    { id: 4, name: 'Eneco' },\r\n    { id: 5, name: 'Energiedirect' },\r\n    { id: 6, name: 'Engie' },\r\n    { id: 7, name: 'Essent' },\r\n    { id: 8, name: 'Greenchoice' },\r\n    { id: 9, name: 'Holland Wind' },\r\n    { id: 10, name: 'Main energie' },\r\n    { id: 11, name: 'N.E.M.' },\r\n    { id: 12, name: 'NL Energie' },\r\n    { id: 13, name: 'Vattenfall' },\r\n    { id: 14, name: 'Oxxio' },\r\n    { id: 15, name: 'Pure energy' },\r\n    { id: 16, name: 'Qurrent' },\r\n    { id: 17, name: 'VanDeBron' },\r\n    { id: 18, name: 'Overig' },\r\n    { id: 19, name: 'Energie VanOns' },\r\n    { id: 20, name: 'Huismerk Energie' },\r\n    { id: 21, name: 'Energieflex' },\r\n    { id: 22, name: 'United Consumers' },\r\n    { id: 23, name: 'Innova Energie' },\r\n    { id: 24, name: 'Betuwe stroom' },\r\n    { id: 25, name: 'Delta Energie' },\r\n    { id: 26, name: 'Agem' },\r\n    { id: 27, name: 'Anode Energie' },\r\n    { id: 28, name: 'De Groene Stroomfabriek' },\r\n    { id: 29, name: 'Energie Van Ons' },\r\n    { id: 30, name: 'HVC Kringloop Energie' },\r\n    { id: 31, name: 'Sepa Green' },\r\n    { id: 32, name: 'Servicehouse' },\r\n    { id: 33, name: 'Holthausen Clean Energy (HCE)' },\r\n    { id: 34, name: 'Total' },\r\n    { id: 35, name: 'Fenor energie' },\r\n    { id: 36, name: 'Power peers' },\r\n    { id: 37, name: 'Energyhouse' },\r\n    { id: 38, name: 'NieuweStroom' },\r\n    { id: 39, name: 'ParkStroom' },\r\n    { id: 40, name: 'Groenpand' },\r\n    { id: 41, name: 'Windcentrale' },\r\n    { id: 42, name: 'Energiebesteding' },\r\n];\r\n","export default [\r\n    { id: 1, name: 'Dhr' },\r\n    { id: 2, name: 'Mevr' },\r\n    { id: 3, name: 'De heer, Mevrouw' },\r\n    { id: 4, name: 'Familie' },\r\n    { id: 5, name: 'De heer of mevrouw' },\r\n    { id: 6, name: 'De heren' },\r\n    { id: 7, name: 'De dames' },\r\n];\r\n","export default [\r\n    { id: 0, name: '' },\r\n    { id: 1, name: 'van' },\r\n    { id: 2, name: 'de' },\r\n    { id: 3, name: 'van der' },\r\n    { id: 4, name: 'van de' },\r\n    { id: 5, name: 'van den' },\r\n    { id: 6, name: 'den' },\r\n    { id: 7, name: 'ten' },\r\n    { id: 8, name: 'ter' },\r\n    { id: 9, name: 'te' },\r\n    { id: 10, name: \"van 't\" },\r\n    { id: 11, name: 'el' },\r\n    { id: 12, name: 'le' },\r\n    { id: 13, name: 'van het' },\r\n    { id: 14, name: \"in 't\" },\r\n    { id: 15, name: \"'t\" },\r\n    { id: 16, name: 'von' },\r\n    { id: 17, name: 'du' },\r\n    { id: 18, name: 'da' },\r\n    { id: 19, name: 'de la' },\r\n    { id: 20, name: 'la' },\r\n    { id: 21, name: 'der' },\r\n    { id: 22, name: 'van ter' },\r\n    { id: 23, name: \"op 't\" },\r\n    { id: 24, name: 'op den' },\r\n];\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, { formatDate, parseDate } from 'react-day-picker/moment';\r\nimport moment from 'moment';\r\nimport { get } from 'lodash';\r\n\r\nconst InputDate = ({\r\n    className,\r\n    id,\r\n    value,\r\n    required,\r\n    readOnly,\r\n    name,\r\n    onChangeAction,\r\n    placeholder,\r\n    showErrorMessage,\r\n    errors,\r\n    touched,\r\n    classNameErrorMessage,\r\n}) => {\r\n    const handleDayChange = date => {\r\n        // Convert date in correct value for database\r\n        const formattedDate = date ? moment(date).format('Y-MM-DD') : '';\r\n\r\n        onChangeAction(name, formattedDate);\r\n    };\r\n\r\n    const formattedDate = value ? moment(value).format('L') : '';\r\n\r\n    return (\r\n        <>\r\n            {get(errors, name, '') && get(touched, name, '') && showErrorMessage ? (\r\n                <small className={`${classNameErrorMessage}`}>{get(errors, name, '')}</small>\r\n            ) : null}\r\n            <DayPickerInput\r\n                id={id}\r\n                value={formattedDate}\r\n                onDayChange={handleDayChange}\r\n                formatDate={formatDate}\r\n                parseDate={parseDate}\r\n                dayPickerProps={{\r\n                    showWeekNumbers: true,\r\n                    locale: 'nl',\r\n                    firstDayOfWeek: 1,\r\n                    localeUtils: MomentLocaleUtils,\r\n                }}\r\n                inputProps={{\r\n                    className: `text-input content w-input ${className} ${\r\n                        Boolean(get(errors, name, '') && get(touched, name, '')) ? 'has-error mb-0' : ''\r\n                    } `,\r\n                    name: name,\r\n                    autoComplete: 'off',\r\n                    readOnly: readOnly,\r\n                    disabled: readOnly,\r\n                    placeholder: placeholder,\r\n                }}\r\n                required={required}\r\n                readOnly={readOnly}\r\n                placeholder={''}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nInputDate.defaultProps = {\r\n    className: '',\r\n    required: '',\r\n    readOnly: false,\r\n    value: null,\r\n    placeholder: '',\r\n    showErrorMessage: true,\r\n    classNameErrorMessage: 'text-danger',\r\n    errors: {},\r\n    touched: {},\r\n};\r\n\r\nInputDate.propTypes = {\r\n    type: PropTypes.string,\r\n    className: PropTypes.string,\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n    onChangeAction: PropTypes.func,\r\n    required: PropTypes.string,\r\n    readOnly: PropTypes.bool,\r\n    placeholder: PropTypes.string,\r\n    showErrorMessage: PropTypes.bool,\r\n    classNameErrorMessage: PropTypes.string,\r\n    errors: PropTypes.object,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default InputDate;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field } from 'formik';\r\nimport Select from '../../../components/form/Select';\r\nimport Countries from '../../../data/Countries';\r\nimport EnergySuppliers from '../../../data/EnergySuppliers';\r\nimport Titles from '../../../data/Titles';\r\nimport LastNamePrefixes from '../../../data/LastNamePrefixes';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport Row from 'react-bootstrap/Row';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport moment from 'moment';\r\nimport InputDate from '../../../components/form/InputDate';\r\n\r\nconst DefaultContactPersonalEdit = function({\r\n    portalSettings,\r\n    initialContact,\r\n    projectTypeCodeRef,\r\n    errors,\r\n    touched,\r\n    values,\r\n    setFieldValue,\r\n}) {\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{values.number}</TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label required'}>Naam</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={6}>\r\n                        <Field\r\n                            name=\"person.titleId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"title_id\"\r\n                                    placeholder={'Aanhef'}\r\n                                    options={Titles}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"person.initials\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"initials\"\r\n                                    placeholder={'Initialen'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"person.firstName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"first_name\"\r\n                                    placeholder={'Voornaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"person.lastNamePrefixId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name_prefix_id\"\r\n                                    options={LastNamePrefixes}\r\n                                    placeholder={'Tussenvoegsel'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"person.lastName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name\"\r\n                                    placeholder={'Achternaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <FormLabel\r\n                    htmlFor=\"date_of_birth\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Geboortedatum\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={6}>\r\n                        <Field\r\n                            name=\"person.dateOfBirth\"\r\n                            render={({ field }) => (\r\n                                <InputDate\r\n                                    {...field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    onChangeAction={setFieldValue}\r\n                                    id=\"date_of_birth\"\r\n                                    placeholder={'Geboortedatum'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-correspondence\" className={'field-label required'}>\r\n                    E-mailadres correspondentie\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailCorrespondence.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-correspondence\"\r\n                                    placeholder={'E-mail'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-invoice\" className=\"field-label\">\r\n                    E-mailadres nota\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailInvoice.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-invoice\"\r\n                                    placeholder={'E-mail'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"telephone-number-1\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Telefoonnummer 1\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberPrimary.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-1\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"telephone-number-2\" className={'field-label'}>\r\n                    Telefoonnummer 2\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberTwo.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-2\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"street\" className=\"field-label required\">\r\n                    Adres\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"primaryAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"primaryAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"primaryAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"primaryAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                    disabled={initialContact.isParticipantPcrProject}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"primaryAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"primaryAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col xs={12} md={6}>\r\n                <FormLabel\r\n                    htmlFor=\"iban\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    IBAN gegevens\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"iban\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban\"\r\n                                    placeholder={'Rekeningnummer (IBAN)'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"ibanAttn\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban_attn\"\r\n                                    placeholder={'IBAN te name van'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"did_agree_avg\" className={'field-label required'}>\r\n                    Akkoord privacybeleid\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"didAgreeAvg\"\r\n                            render={({ field }) => (\r\n                                <label className=\"w-checkbox checkbox-fld\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        {...field}\r\n                                        id=\"did_agree_avg\"\r\n                                        checked={field.value}\r\n                                        className=\"w-checkbox-input checkbox\"\r\n                                        disabled={initialContact.didAgreeAvg}\r\n                                    />\r\n                                    <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                                        Ik ga akkoord met{' '}\r\n                                        <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                            privacybeleid\r\n                                        </a>{' '}\r\n                                        {values.didAgreeAvg ? (\r\n                                            <em>\r\n                                                (\r\n                                                {initialContact.dateDidAgreeAvg\r\n                                                    ? moment(initialContact.dateDidAgreeAvg).format('L')\r\n                                                    : moment().format('L')}\r\n                                                )\r\n                                            </em>\r\n                                        ) : (\r\n                                            ''\r\n                                        )}\r\n                                    </span>\r\n                                    {touched[field.name] && errors[field.name] ? (\r\n                                        <div className={'error-message text-danger'}>{errors[field.name]}</div>\r\n                                    ) : null}\r\n                                </label>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"energy_supplier_id\"\r\n                    className={\r\n                        projectTypeCodeRef === 'postalcode_link_capital' ? 'field-label required' : 'field-label'\r\n                    }\r\n                >\r\n                    Energieleverancier\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"primaryContactEnergySupplier.energySupplierId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"energy_supplier_id\"\r\n                                    placeholder={'Selecteer uw leverancier'}\r\n                                    options={EnergySuppliers}\r\n                                    // disabled={\r\n                                    //     initialContact.primaryContactEnergySupplier &&\r\n                                    //     initialContact.primaryContactEnergySupplier.energySupplierId &&\r\n                                    //     initialContact.isParticipant\r\n                                    // }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {values.primaryContactEnergySupplier && values.primaryContactEnergySupplier.energySupplierId ? (\r\n                    <>\r\n                        <FormLabel\r\n                            htmlFor=\"es_number\"\r\n                            className={\r\n                                projectTypeCodeRef === 'postalcode_link_capital'\r\n                                    ? 'field-label required'\r\n                                    : 'field-label'\r\n                            }\r\n                        >\r\n                            Klant nummer bij leverancier\r\n                        </FormLabel>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"primaryContactEnergySupplier.esNumber\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"es_number\"\r\n                                            placeholder={'Klant nummer bij leverancier'}\r\n                                            // disabled={\r\n                                            //     initialContact.primaryContactEnergySupplier &&\r\n                                            //     initialContact.primaryContactEnergySupplier.energySupplierId &&\r\n                                            //     initialContact.primaryContactEnergySupplier.esNumber &&\r\n                                            //     initialContact.isParticipant\r\n                                            // }\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <FormLabel htmlFor=\"member_since\" className={'field-label'}>\r\n                            Klant bij leverancier sinds\r\n                        </FormLabel>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"primaryContactEnergySupplier.memberSince\"\r\n                                    render={({ field }) => (\r\n                                        <InputDate\r\n                                            {...field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            onChangeAction={setFieldValue}\r\n                                            id=\"member_since\"\r\n                                            placeholder={'Klant sinds'}\r\n                                            // readOnly={\r\n                                            //     initialContact.primaryContactEnergySupplier &&\r\n                                            //     initialContact.primaryContactEnergySupplier.energySupplierId &&\r\n                                            //     initialContact.primaryContactEnergySupplier.memberSince\r\n                                            // }\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <FormLabel\r\n                            htmlFor=\"ean_electricity\"\r\n                            className={\r\n                                projectTypeCodeRef === 'postalcode_link_capital'\r\n                                    ? 'field-label required'\r\n                                    : 'field-label'\r\n                            }\r\n                        >\r\n                            EAN nummer electriciteit\r\n                        </FormLabel>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"primaryContactEnergySupplier.eanElectricity\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"ean_electricity\"\r\n                                            placeholder={'EAN nummer electriciteit'}\r\n                                            // disabled={\r\n                                            //     initialContact.primaryContactEnergySupplier &&\r\n                                            //     initialContact.primaryContactEnergySupplier.energySupplierId &&\r\n                                            //     initialContact.primaryContactEnergySupplier.eanElectricity &&\r\n                                            //     initialContact.isParticipant\r\n                                            // }\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <FormLabel htmlFor=\"ean_gas\" className={'field-label'}>\r\n                            EAN nummer gas\r\n                        </FormLabel>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"primaryContactEnergySupplier.eanGas\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"ean_gas\"\r\n                                            placeholder={'EAN nummer gas'}\r\n                                            // disabled={\r\n                                            //     initialContact.primaryContactEnergySupplier &&\r\n                                            //     initialContact.primaryContactEnergySupplier.energySupplierId &&\r\n                                            //     initialContact.primaryContactEnergySupplier.eanGas\r\n                                            // }\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                ) : (\r\n                    ''\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default DefaultContactPersonalEdit;\r\n","import * as Yup from 'yup';\r\nimport * as ibantools from 'ibantools';\r\n\r\nexport default {\r\n    validationSchemaBasic: Yup.object().shape({\r\n        // TODO set more correct values for validation, only important fields are set now\r\n        didAgreeAvg: Yup.bool().test(\r\n            'didAgreeAvg',\r\n            'Je dient akkoord te gaan met privacybeleid!',\r\n            value => value === true\r\n        ),\r\n        person: Yup.object().shape({\r\n            lastName: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        emailCorrespondence: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres')\r\n                .required('Verplicht'),\r\n        }),\r\n        emailInvoice: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres'),\r\n        }),\r\n        primaryAddress: Yup.object().shape({\r\n            street: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                })\r\n                .required('Verplicht'),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .min(4, 'Minimum van ${min} postcode cijfers nodig')\r\n                .required('Verplicht'),\r\n            city: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n    }),\r\n\r\n    validationSchemaAdditional: Yup.object().shape({\r\n        person: Yup.object().shape({\r\n            titleId: Yup.string()\r\n                .nullable()\r\n                .required('Verplicht'),\r\n            firstName: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n            dateOfBirth: Yup.date()\r\n                .typeError('Verplicht of ongeldige datum')\r\n                .required('Verplicht'),\r\n        }),\r\n        phoneNumberPrimary: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        iban: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht')\r\n            .test('iban', 'Ongeldige IBAN !', value => ibantools.isValidIBAN(value)),\r\n        ibanAttn: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht'),\r\n    }),\r\n};\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport DefaultContactPersonalView from './default-form-personal/View';\r\nimport DefaultContactPersonalEdit from './default-form-personal/Edit';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaPersonal from './../../helpers/ValidationSchemaPersonal';\r\n\r\nfunction ContactDetailsPersonal({ portalSettings, initialContact, handleSubmitContactValues }) {\r\n    const [editForm, setEditForm] = useState(false);\r\n\r\n    const validationSchema = initialContact.isParticipant\r\n        ? ValidationSchemaPersonal.validationSchemaBasic.concat(ValidationSchemaPersonal.validationSchemaAdditional)\r\n        : ValidationSchemaPersonal.validationSchemaBasic;\r\n\r\n    return (\r\n        <div>\r\n            {editForm ? (\r\n                <Formik\r\n                    initialValues={initialContact}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        actions.setSubmitting(true);\r\n                        handleSubmitContactValues(values, actions, () => setEditForm(false));\r\n                    }}\r\n                    render={({ errors, touched, setFieldValue, isSubmitting, values, handleSubmit }) => {\r\n                        // console.log(errors);\r\n                        return (\r\n                            <Form>\r\n                                <DefaultContactPersonalEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                />\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                            <Button\r\n                                                variant={'outline-dark'}\r\n                                                size=\"sm\"\r\n                                                onClick={function() {\r\n                                                    setEditForm(false);\r\n                                                }}\r\n                                            >\r\n                                                Annuleren\r\n                                            </Button>\r\n                                            <Button\r\n                                                className={'w-button'}\r\n                                                size=\"sm\"\r\n                                                onClick={handleSubmit}\r\n                                                disabled={isSubmitting}\r\n                                            >\r\n                                                {isSubmitting ? (\r\n                                                    <span>\r\n                                                        <ClipLoader color={'white'} size={14} />\r\n                                                        Bezig met opslaan\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    'Opslaan'\r\n                                                )}\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        );\r\n                    }}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <DefaultContactPersonalView portalSettings={portalSettings} initialContact={initialContact} />\r\n                    <Row>\r\n                        <Col>\r\n                            <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                <Button\r\n                                    className={'w-button'}\r\n                                    size=\"sm\"\r\n                                    onClick={function() {\r\n                                        setEditForm(true);\r\n                                    }}\r\n                                >\r\n                                    Wijzig\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactDetailsPersonal;\r\n","import React from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Row from 'react-bootstrap/Row';\r\nimport moment from 'moment';\r\n\r\nfunction DefaultContactOrganisationView({ portalSettings, initialContact }) {\r\n    const {\r\n        organisation = {},\r\n        emailCorrespondence,\r\n        emailInvoice,\r\n        phoneNumberPrimary,\r\n        phoneNumberTwo,\r\n        visitAddress,\r\n        postalAddress,\r\n        invoiceAddress,\r\n        iban,\r\n        ibanAttn,\r\n        didAgreeAvg,\r\n        dateDidAgreeAvg,\r\n        number,\r\n        primaryContactEnergySupplier,\r\n        primaryOccupations,\r\n    } = initialContact;\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{number}</TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Bedrijfsnaam</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Bedrijfsnaam'}>\r\n                        {organisation.name}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>KvK</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'KvK'}>\r\n                        {organisation.chamberOfCommerceNumber}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>BTW nummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'BTW nummer'}>\r\n                        {organisation.vatNumber}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>IBAN gegevens</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Rekeningnummer (IBAN)'}>\r\n                        {iban}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'IBAN te name van'}>\r\n                        {ibanAttn}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Website</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Website'}>\r\n                        {organisation.website}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Akkoord privacybeleid</FormLabel>\r\n                <Row>\r\n                    <div className={'col-12 col-sm-8'}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"did_agree_avg\"\r\n                            checked={didAgreeAvg}\r\n                            className=\"w-checkbox-input checkbox\"\r\n                            disabled={true}\r\n                        />\r\n                        <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                            Ik ga akkoord met{' '}\r\n                            <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                privacybeleid\r\n                            </a>{' '}\r\n                            {didAgreeAvg ? <em>({dateDidAgreeAvg ? moment(dateDidAgreeAvg).format('L') : ''})</em> : ''}\r\n                        </span>\r\n                    </div>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres correspondentie</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailCorrespondence.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>E-mailadres nota</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'E-mailadres'}>\r\n                        {emailInvoice.email}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 1</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberPrimary.number}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Telefoonnummer 2</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Telefoonnummer'}>\r\n                        {phoneNumberTwo.number}\r\n                    </TextBlock>\r\n                </Row>\r\n            </Col>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>Postadres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {postalAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {postalAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {postalAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {postalAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {postalAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {postalAddress.country ? postalAddress.country.name : ''}\r\n                    </TextBlock>{' '}\r\n                </Row>\r\n                <FormLabel className={'field-label'}>Bezoekadres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {visitAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {visitAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {visitAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {visitAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {visitAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {visitAddress.country ? visitAddress.country.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n                <FormLabel className={'field-label'}>Nota adres</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Straat'}>\r\n                        {invoiceAddress.street}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Nummer'}>\r\n                        {invoiceAddress.number}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-6 col-sm-4 '} placeholder={'Toevoeging'}>\r\n                        {invoiceAddress.addition}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-4'} placeholder={'Postcode'}>\r\n                        {invoiceAddress.postalCode}\r\n                    </TextBlock>\r\n                    <TextBlock className={'col-12 col-sm-6'} placeholder={'Plaats'}>\r\n                        {invoiceAddress.city}\r\n                    </TextBlock>\r\n                </Row>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Land'}>\r\n                        {invoiceAddress.country ? invoiceAddress.country.name : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Energieleverancier</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'} placeholder={'Energieleverancier'}>\r\n                        {primaryContactEnergySupplier.energySupplier\r\n                            ? primaryContactEnergySupplier.energySupplier.name\r\n                            : ''}\r\n                    </TextBlock>\r\n                </Row>\r\n\r\n                {primaryContactEnergySupplier && primaryContactEnergySupplier.energySupplierId ? (\r\n                    <>\r\n                        <FormLabel className={'field-label'}>Klant nummer bij leverancier</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant nummer'}>\r\n                                {primaryContactEnergySupplier.esNumber}\r\n                            </TextBlock>\r\n                        </Row>\r\n\r\n                        <FormLabel className={'field-label'}>Klant bij leverancier sinds</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'Klant sinds'}>\r\n                                {primaryContactEnergySupplier.memberSince\r\n                                    ? moment(primaryContactEnergySupplier.memberSince).format('L')\r\n                                    : ''}\r\n                            </TextBlock>\r\n                        </Row>\r\n\r\n                        <FormLabel className={'field-label'}>EAN nummer electriciteit</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer electriciteit'}>\r\n                                {primaryContactEnergySupplier.eanElectricity}\r\n                            </TextBlock>\r\n                        </Row>\r\n\r\n                        <FormLabel className={'field-label'}>EAN nummer gas</FormLabel>\r\n                        <Row>\r\n                            <TextBlock className={'col-12 col-sm-8'} placeholder={'EAN nummer gas'}>\r\n                                {primaryContactEnergySupplier.eanGas}\r\n                            </TextBlock>\r\n                        </Row>\r\n                    </>\r\n                ) : (\r\n                    ''\r\n                )}\r\n\r\n                {/*<FormLabel className={'field-label'}>Contacten</FormLabel>*/}\r\n                {/*{primaryOccupations ? (*/}\r\n                {/*primaryOccupations.map(primaryOccupation => (*/}\r\n                {/*<Row>*/}\r\n                {/*<TextBlock className={'col-12 col-sm-4'} placeholder={'Contact naam'}>*/}\r\n                {/*{primaryOccupation.contact.fullName}*/}\r\n                {/*</TextBlock>*/}\r\n                {/*<TextBlock className={'col-12 col-sm-4'} placeholder={'Contact verbinding'}>*/}\r\n                {/*{primaryOccupation.occupation.primaryOccupation}*/}\r\n                {/*</TextBlock>*/}\r\n                {/*</Row>*/}\r\n                {/*))*/}\r\n                {/*) : (*/}\r\n                {/*<Row>*/}\r\n                {/*<TextBlock className={'col-12 col-sm-8'} />*/}\r\n                {/*</Row>*/}\r\n                {/*)}*/}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default DefaultContactOrganisationView;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field } from 'formik';\r\nimport Select from '../../../components/form/Select';\r\nimport Countries from '../../../data/Countries';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport Row from 'react-bootstrap/Row';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport moment from 'moment';\r\nimport EnergySuppliers from '../../../data/EnergySuppliers';\r\nimport InputDate from '../../../components/form/InputDate';\r\n\r\nconst DefaultContactOrganisationEdit = function({\r\n    portalSettings,\r\n    initialContact,\r\n    projectTypeCodeRef,\r\n    errors,\r\n    touched,\r\n    values,\r\n    setFieldValue,\r\n}) {\r\n    return (\r\n        <Row>\r\n            <Col xs={12} md={6}>\r\n                <FormLabel className={'field-label'}>Contactnummer</FormLabel>\r\n                <Row>\r\n                    <TextBlock className={'col-12 col-sm-8'}>{values.number}</TextBlock>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label required'}>Naam</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.name\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"name\"\r\n                                    placeholder={'Naam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>KvK</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.chamberOfCommerceNumber\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"chamber_of_commerce_number\"\r\n                                    placeholder={'KvK'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>BTW nummer</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.vatNumber\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"vat_number\"\r\n                                    placeholder={'BTW nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"iban\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    IBAN gegevens\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"iban\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban\"\r\n                                    placeholder={'Rekeningnummer (IBAN)'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"ibanAttn\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"iban_attn\"\r\n                                    placeholder={'IBAN te name van'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel className={'field-label'}>Website</FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"organisation.website\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"website\"\r\n                                    placeholder={'Website'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"did_agree_avg\" className={'field-label required'}>\r\n                    Akkoord privacybeleid\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"didAgreeAvg\"\r\n                            render={({ field }) => (\r\n                                <label className=\"w-checkbox checkbox-fld\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        {...field}\r\n                                        id=\"did_agree_avg\"\r\n                                        checked={field.value}\r\n                                        className=\"w-checkbox-input checkbox\"\r\n                                        disabled={initialContact.didAgreeAvg}\r\n                                    />\r\n                                    <span htmlFor=\"did_agree_avg\" className=\"checkbox-label w-form-label\">\r\n                                        Ik ga akkoord met{' '}\r\n                                        <a href={portalSettings['linkPrivacyPolicy']} target=\"_blank\">\r\n                                            privacybeleid\r\n                                        </a>{' '}\r\n                                        {values.didAgreeAvg ? (\r\n                                            <em>\r\n                                                (\r\n                                                {initialContact.dateDidAgreeAvg\r\n                                                    ? moment(initialContact.dateDidAgreeAvg).format('L')\r\n                                                    : moment().format('L')}\r\n                                                )\r\n                                            </em>\r\n                                        ) : (\r\n                                            ''\r\n                                        )}\r\n                                    </span>\r\n                                    {touched[field.name] && errors[field.name] ? (\r\n                                        <div className={'error-message text-danger'}>{errors[field.name]}</div>\r\n                                    ) : null}\r\n                                </label>\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-correspondence\" className={'field-label required'}>\r\n                    E-mailadres correspondentie\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailCorrespondence.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-correspondence\"\r\n                                    placeholder={'E-mail'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"email-invoice\" className=\"field-label\">\r\n                    E-mailadres nota\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"emailInvoice.email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"email-invoice\"\r\n                                    placeholder={'E-mail'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"telephone-number-1\"\r\n                    className={initialContact.isParticipant ? 'field-label required' : 'field-label'}\r\n                >\r\n                    Telefoonnummer 1\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberPrimary.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-1\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"telephone-number-2\" className={'field-label'}>\r\n                    Telefoonnummer 2\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={10} md={6}>\r\n                        <Field\r\n                            name=\"phoneNumberTwo.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"telephone-number-2\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n            <Col xs={12} md={6}>\r\n                <FormLabel htmlFor=\"street\" className=\"field-label required\">\r\n                    Postadres\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"postalAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"postalAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"postalAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"postalAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"postalAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"postalAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"street\"\r\n                    className={\r\n                        projectTypeCodeRef === 'postalcode_link_capital' ? 'field-label required' : 'field-label'\r\n                    }\r\n                >\r\n                    Bezoekadres\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"visitAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"visitAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"visitAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"visitAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                    disabled={initialContact.isParticipantPcrProject}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"visitAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"visitAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel htmlFor=\"street\" className=\"field-label\">\r\n                    Nota adres\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12}>\r\n                        <Field\r\n                            name=\"invoiceAddress.street\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street\"\r\n                                    placeholder={'Straat'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"invoiceAddress.number\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"street_number\"\r\n                                    placeholder={'Nummer'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"invoiceAddress.addition\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"addition\"\r\n                                    placeholder={'Toevoeging'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={4}>\r\n                        <Field\r\n                            name=\"invoiceAddress.postalCode\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"postal_code\"\r\n                                    placeholder={'Postcode'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"invoiceAddress.city\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"city\"\r\n                                    placeholder={'Plaats'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col xs={12} sm={8}>\r\n                        <Field\r\n                            name=\"invoiceAddress.countryId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"country_id\"\r\n                                    placeholder={'Selecteer uw land'}\r\n                                    options={Countries}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <FormLabel\r\n                    htmlFor=\"energy_supplier_id\"\r\n                    className={\r\n                        projectTypeCodeRef === 'postalcode_link_capital' ? 'field-label required' : 'field-label'\r\n                    }\r\n                >\r\n                    Energieleverancier\r\n                </FormLabel>\r\n                <Row>\r\n                    <Col xs={12} sm={12} md={8}>\r\n                        <Field\r\n                            name=\"primaryContactEnergySupplier.energySupplierId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"energy_supplier_id\"\r\n                                    placeholder={'Selecteer uw leverancier'}\r\n                                    options={EnergySuppliers}\r\n                                    // disabled={\r\n                                    //     initialContact.primaryContactEnergySupplier &&\r\n                                    //     initialContact.primaryContactEnergySupplier.energySupplierId &&\r\n                                    //     initialContact.isParticipant\r\n                                    // }\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {values.primaryContactEnergySupplier && values.primaryContactEnergySupplier.energySupplierId ? (\r\n                    <>\r\n                        <FormLabel\r\n                            htmlFor=\"es_number\"\r\n                            className={\r\n                                projectTypeCodeRef === 'postalcode_link_capital'\r\n                                    ? 'field-label required'\r\n                                    : 'field-label'\r\n                            }\r\n                        >\r\n                            Klant nummer bij leverancier\r\n                        </FormLabel>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"primaryContactEnergySupplier.esNumber\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"es_number\"\r\n                                            placeholder={'Klant nummer bij leverancier'}\r\n                                            // disabled={\r\n                                            //     initialContact.primaryContactEnergySupplier &&\r\n                                            //     initialContact.primaryContactEnergySupplier.energySupplierId &&\r\n                                            //     initialContact.primaryContactEnergySupplier.esNumber &&\r\n                                            //     initialContact.isParticipant\r\n                                            // }\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <FormLabel htmlFor=\"member_since\" className={'field-label'}>\r\n                            Klant bij leverancier sinds\r\n                        </FormLabel>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"primaryContactEnergySupplier.memberSince\"\r\n                                    render={({ field }) => (\r\n                                        <InputDate\r\n                                            {...field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            onChangeAction={setFieldValue}\r\n                                            id=\"member_since\"\r\n                                            placeholder={'Klant sinds'}\r\n                                            // readOnly={\r\n                                            //     initialContact.primaryContactEnergySupplier &&\r\n                                            //     initialContact.primaryContactEnergySupplier.energySupplierId &&\r\n                                            //     initialContact.primaryContactEnergySupplier.memberSince\r\n                                            // }\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <FormLabel\r\n                            htmlFor=\"ean_electricity\"\r\n                            className={\r\n                                projectTypeCodeRef === 'postalcode_link_capital'\r\n                                    ? 'field-label required'\r\n                                    : 'field-label'\r\n                            }\r\n                        >\r\n                            EAN nummer electriciteit\r\n                        </FormLabel>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"primaryContactEnergySupplier.eanElectricity\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"ean_electricity\"\r\n                                            placeholder={'EAN nummer electriciteit'}\r\n                                            // disabled={\r\n                                            //     initialContact.primaryContactEnergySupplier &&\r\n                                            //     initialContact.primaryContactEnergySupplier.energySupplierId &&\r\n                                            //     initialContact.primaryContactEnergySupplier.eanElectricity &&\r\n                                            //     initialContact.isParticipant\r\n                                            // }\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <FormLabel htmlFor=\"ean_gas\" className={'field-label'}>\r\n                            EAN nummer gas\r\n                        </FormLabel>\r\n                        <Row>\r\n                            <Col xs={12} sm={12} md={8}>\r\n                                <Field\r\n                                    name=\"primaryContactEnergySupplier.eanGas\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"ean_gas\"\r\n                                            placeholder={'EAN nummer gas'}\r\n                                            // disabled={\r\n                                            //     initialContact.primaryContactEnergySupplier &&\r\n                                            //     initialContact.primaryContactEnergySupplier.energySupplierId &&\r\n                                            //     initialContact.primaryContactEnergySupplier.eanGas\r\n                                            // }\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                ) : (\r\n                    ''\r\n                )}\r\n\r\n                {/*<FormLabel className={'field-label'}>Contacten</FormLabel>*/}\r\n                {/*{values.primaryOccupations ? (*/}\r\n                {/*values.primaryOccupations.map(primaryOccupation => (*/}\r\n                {/*<Row>*/}\r\n                {/*<TextBlock className={'col-12 col-sm-4'} placeholder={'Contact naam'}>*/}\r\n                {/*{primaryOccupation.contact.fullName}*/}\r\n                {/*</TextBlock>*/}\r\n                {/*<TextBlock className={'col-12 col-sm-4'} placeholder={'Contact verbinding'}>*/}\r\n                {/*{primaryOccupation.occupation.primaryOccupation}*/}\r\n                {/*</TextBlock>*/}\r\n                {/*</Row>*/}\r\n                {/*))*/}\r\n                {/*) : (*/}\r\n                {/*<Row>*/}\r\n                {/*<TextBlock className={'col-12 col-sm-8'} />*/}\r\n                {/*</Row>*/}\r\n                {/*)}*/}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default DefaultContactOrganisationEdit;\r\n","import * as Yup from 'yup';\r\nimport * as ibantools from 'ibantools';\r\n\r\nexport default {\r\n    validationSchemaBasic: Yup.object().shape({\r\n        // TODO set more correct values for validation, only important fields are set now\r\n        didAgreeAvg: Yup.bool().test(\r\n            'didAgreeAvg',\r\n            'Je dient akkoord te gaan met privacybeleid!',\r\n            value => value === true\r\n        ),\r\n        organisation: Yup.object().shape({\r\n            name: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        emailCorrespondence: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres')\r\n                .required('Verplicht'),\r\n        }),\r\n        emailInvoice: Yup.object().shape({\r\n            email: Yup.string()\r\n                .trim()\r\n                .email('Ongeldig e-mail adres'),\r\n        }),\r\n        postalAddress: Yup.object().shape({\r\n            street: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n            number: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                })\r\n                .required('Verplicht'),\r\n            postalCode: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n            city: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        visitAddress: Yup.object().shape({\r\n            number: Yup.string()\r\n                .nullable()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n        }),\r\n        invoiceAddress: Yup.object().shape({\r\n            number: Yup.string()\r\n                .nullable()\r\n                .test('number', 'Alleen nummers', value => {\r\n                    return Number.isInteger(+value);\r\n                }),\r\n        }),\r\n    }),\r\n\r\n    validationSchemaAdditional: Yup.object().shape({\r\n        phoneNumberPrimary: Yup.object().shape({\r\n            number: Yup.string()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n        iban: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht'),\r\n        ibanAttn: Yup.string()\r\n            .trim()\r\n            .nullable()\r\n            .required('Verplicht'),\r\n    }),\r\n};\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport DefaultContactOrganisationView from './default-form-organisation/View';\r\nimport DefaultContactOrganisationEdit from './default-form-organisation/Edit';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaOrganisation from './../../helpers/ValidationSchemaOrganisation';\r\n\r\nfunction ContactDetailsOrganisation({ portalSettings, initialContact, handleSubmitContactValues }) {\r\n    const [editForm, setEditForm] = useState(false);\r\n\r\n    const validationSchema = initialContact.isParticipant\r\n        ? ValidationSchemaOrganisation.validationSchemaBasic.concat(\r\n              ValidationSchemaOrganisation.validationSchemaAdditional\r\n          )\r\n        : ValidationSchemaOrganisation.validationSchemaBasic;\r\n\r\n    return (\r\n        <div>\r\n            {editForm ? (\r\n                <Formik\r\n                    initialValues={initialContact}\r\n                    enableReinitialize={true}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        actions.setSubmitting(true);\r\n                        handleSubmitContactValues(values, actions, () => setEditForm(false));\r\n                    }}\r\n                    render={({ errors, touched, setFieldValue, isSubmitting, values, handleSubmit }) => {\r\n                        // console.log(errors);\r\n                        return (\r\n                            <Form>\r\n                                <DefaultContactOrganisationEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                />\r\n                                <Row>\r\n                                    <Col>\r\n                                        <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                            <Button\r\n                                                variant={'outline-dark'}\r\n                                                size=\"sm\"\r\n                                                onClick={function() {\r\n                                                    setEditForm(false);\r\n                                                }}\r\n                                            >\r\n                                                Annuleren\r\n                                            </Button>\r\n                                            <Button\r\n                                                className={'w-button'}\r\n                                                size=\"sm\"\r\n                                                onClick={handleSubmit}\r\n                                                disabled={isSubmitting}\r\n                                            >\r\n                                                {isSubmitting ? (\r\n                                                    <span>\r\n                                                        <ClipLoader color={'white'} size={14} />\r\n                                                        Bezig met opslaan\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    'Opslaan'\r\n                                                )}\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        );\r\n                    }}\r\n                />\r\n            ) : (\r\n                <>\r\n                    <DefaultContactOrganisationView portalSettings={portalSettings} initialContact={initialContact} />\r\n                    <Row>\r\n                        <Col>\r\n                            <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                <Button\r\n                                    className={'w-button'}\r\n                                    size=\"sm\"\r\n                                    onClick={function() {\r\n                                        setEditForm(true);\r\n                                    }}\r\n                                >\r\n                                    Wijzig\r\n                                </Button>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactDetailsOrganisation;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { PortalUserConsumer } from '../../context/PortalUserContext';\r\nimport ContactAPI from '../../api/contact/ContactAPI';\r\nimport rebaseContact from '../../helpers/RebaseContact';\r\nimport LoadingView from '../../components/general/LoadingView';\r\nimport ContactDetailsPersonal from './Personal';\r\nimport ContactDetailsOrganisation from './Organisation';\r\nimport PortalSettingsAPI from '../../api/portal-settings/PortalSettingsAPI';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nconst ContactDetails = function(props) {\r\n    const [contact, setContact] = useState({});\r\n    const [portalSettings, setPortalSettings] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n    const prevCurrentSelectedContact = usePrevious(props.currentSelectedContact);\r\n\r\n    useEffect(() => {\r\n        const keys =\r\n            '?keys[]=portalName' +\r\n            '&keys[]=portalWebsite' +\r\n            '&keys[]=portalUrl' +\r\n            '&keys[]=responsibleUserId' +\r\n            '&keys[]=checkContactTaskResponsibleUserId' +\r\n            '&keys[]=linkPrivacyPolicy';\r\n        PortalSettingsAPI.fetchPortalSettings(keys)\r\n            .then(payload => {\r\n                setPortalSettings({ ...payload.data });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ isLoading: false, hasError: true });\r\n            });\r\n\r\n        // Call Api if current selected contact id is filled\r\n        if (props.currentSelectedContact.id) {\r\n            // If there is no previous selected contact OR previous selected contact is not the same as current selected contact\r\n            if (!prevCurrentSelectedContact || prevCurrentSelectedContact.id != props.currentSelectedContact.id) {\r\n                callFetchContact();\r\n            }\r\n        }\r\n    }, [props.currentSelectedContact]);\r\n\r\n    function callFetchContact() {\r\n        setLoading(true);\r\n        ContactAPI.fetchContact(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                const contactData = rebaseContact(payload.data.data);\r\n\r\n                setContact(contactData);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function usePrevious(value) {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    function handleSubmitContactValues(values, actions, switchToView) {\r\n        const updatedContact = { ...contact, ...values };\r\n        ContactAPI.updateContact(updatedContact)\r\n            .then(payload => {\r\n                callFetchContact();\r\n                actions.setSubmitting(false);\r\n                switchToView();\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                alert('Er is iets misgegaan met opslaan! Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"content-section\">\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <div className=\"content-container w-container\">\r\n                    <ButtonGroup aria-label=\"Steps\" className=\"float-left\">\r\n                        <Link to={`/inschrijven-projecten`}>\r\n                            <Button className={'w-button'} size=\"sm\">\r\n                                Inschrijven projecten\r\n                            </Button>\r\n                        </Link>\r\n                        &nbsp;\r\n                        <Link to={`/inschrijvingen-projecten`}>\r\n                            <Button className={'w-button'} size=\"sm\">\r\n                                Huidige deelnames\r\n                            </Button>\r\n                        </Link>\r\n                    </ButtonGroup>\r\n                    <p>&nbsp;</p>\r\n                    <h1 className=\"content-heading\">Contactgegevens</h1>\r\n                    <div className=\"w-form\" />\r\n                    {/* If contact is person */}\r\n                    {contact.typeId === 'person' ? (\r\n                        <ContactDetailsPersonal\r\n                            portalSettings={portalSettings}\r\n                            initialContact={contact}\r\n                            handleSubmitContactValues={handleSubmitContactValues}\r\n                        />\r\n                    ) : null}\r\n                    {/* If contact is organisation */}\r\n                    {contact.typeId === 'organisation' ? (\r\n                        <ContactDetailsOrganisation\r\n                            portalSettings={portalSettings}\r\n                            initialContact={contact}\r\n                            handleSubmitContactValues={handleSubmitContactValues}\r\n                        />\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default function ContactDetailsWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact }) => (\r\n                <ContactDetails {...props} currentSelectedContact={currentSelectedContact} />\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Field, FieldArray, Form, Formik } from 'formik';\r\nimport ButtonText from '../../components/button/ButtonText';\r\n\r\nconst MyAreasOfInterestForm = function({ handleSubmit, initialValues }) {\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            enableReinitialize={true}\r\n            onSubmit={(values, actions) => {\r\n                actions.setSubmitting(true);\r\n                console.log(values);\r\n            }}\r\n            render={({ errors, touched, setFieldValue, isSubmitting, values }) => {\r\n                return (\r\n                    <Form id=\"email-form\" name=\"email-form\">\r\n                        <div className=\"w-row\">\r\n                            <div className=\"w-col w-col-6\">\r\n                                <h6 className=\"heading-content\">Mijn interessegebieden</h6>\r\n                                <FieldArray\r\n                                    name=\"myAreasOfInterest\"\r\n                                    render={arrayHelpers => (\r\n                                        <div>\r\n                                            {values.myAreasOfInterest &&\r\n                                                values.myAreasOfInterest.map((myAreaOfInterest, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Field\r\n                                                            name={`myAreasOfInterest[${index}]['value']`}\r\n                                                            render={({ field }) => (\r\n                                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        {...field}\r\n                                                                        id={myAreaOfInterest.name}\r\n                                                                        checked={myAreaOfInterest.value}\r\n                                                                        className=\"w-checkbox-input checkbox\"\r\n                                                                    />\r\n                                                                    <span\r\n                                                                        htmlFor={myAreaOfInterest.name}\r\n                                                                        className=\"checkbox-label w-form-label\"\r\n                                                                    >\r\n                                                                        {myAreaOfInterest.name}\r\n                                                                    </span>\r\n                                                                </label>\r\n                                                            )}\r\n                                                        />\r\n                                                    </div>\r\n                                                ))}\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n\r\n                                <h6 className=\"heading-content\">Deelname</h6>\r\n                                <FieldArray\r\n                                    name=\"participations\"\r\n                                    render={arrayHelpers => (\r\n                                        <div>\r\n                                            {values.participations &&\r\n                                                values.participations.map((participation, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Field\r\n                                                            name={`participations[${index}]['value']`}\r\n                                                            render={({ field }) => (\r\n                                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        {...field}\r\n                                                                        id={participation.name}\r\n                                                                        checked={participation.value}\r\n                                                                        className=\"w-checkbox-input checkbox\"\r\n                                                                    />\r\n                                                                    <span\r\n                                                                        htmlFor={participation.name}\r\n                                                                        className=\"checkbox-label w-form-label\"\r\n                                                                    >\r\n                                                                        {participation.name}\r\n                                                                    </span>\r\n                                                                </label>\r\n                                                            )}\r\n                                                        />\r\n                                                    </div>\r\n                                                ))}\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n\r\n                                <h6 className=\"heading-content\">Algemeen</h6>\r\n                                <FieldArray\r\n                                    name=\"generalOptions\"\r\n                                    render={arrayHelpers => (\r\n                                        <div>\r\n                                            {values.generalOptions &&\r\n                                                values.generalOptions.map((generalOption, index) => (\r\n                                                    <div key={index}>\r\n                                                        <Field\r\n                                                            name={`generalOptions[${index}]['value']`}\r\n                                                            render={({ field }) => (\r\n                                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        {...field}\r\n                                                                        id={generalOption.name}\r\n                                                                        checked={generalOption.value}\r\n                                                                        className=\"w-checkbox-input checkbox\"\r\n                                                                    />\r\n                                                                    <span\r\n                                                                        htmlFor={generalOption.name}\r\n                                                                        className=\"checkbox-label w-form-label\"\r\n                                                                    >\r\n                                                                        {generalOption.name}\r\n                                                                    </span>\r\n                                                                </label>\r\n                                                            )}\r\n                                                        />\r\n                                                    </div>\r\n                                                ))}\r\n                                        </div>\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"w-row\">\r\n                            <div className=\"w-col w-col-6\">\r\n                                <ButtonText\r\n                                    buttonText={'Opslaan'}\r\n                                    buttonClassName={'save-btn w-button'}\r\n                                    type={'submit'}\r\n                                    loading={isSubmitting}\r\n                                />\r\n                            </div>\r\n                            <div className=\"w-col w-col-6\" />\r\n                        </div>\r\n                    </Form>\r\n                );\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default MyAreasOfInterestForm;\r\n","import React from 'react';\r\nimport MyAreasOfInterestForm from './Form';\r\n\r\nconst MyAreasOfInterest = function() {\r\n    // TODO Fetch values from API\r\n    const initialValues = {\r\n        myAreasOfInterest: [\r\n            { id: 4, name: 'Gevel isolatie', value: true },\r\n            { id: 5, name: 'Zonnepanelen', value: false },\r\n            { id: 6, name: 'Dak isolatie', value: false },\r\n            { id: 7, name: 'Zonneboiler', value: true },\r\n        ],\r\n        participations: [{ id: 2, name: 'Test groep', value: true }, { id: 3, name: 'De leuke mensen', value: false }],\r\n        generalOptions: [{ id: 1, name: 'Test algemeen groep', value: false }],\r\n    };\r\n\r\n    return (\r\n        <div className=\"content-section\">\r\n            <div className=\"content-container w-container\">\r\n                <h1 className=\"content-heading\">Instellingen</h1>\r\n                <div className=\"w-form\" />\r\n                <MyAreasOfInterestForm initialValues={initialValues} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyAreasOfInterest;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n    fetchProjects: function() {\r\n        const requestUrl = `/jory/project`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: ['id', 'name', 'dateStartRegistrations', 'dateEndRegistrations'],\r\n                    flt: {\r\n                        and: [\r\n                            { f: 'dateStartRegistrations', o: '<=', d: moment().format('YYYY-MM-DD') },\r\n                            { f: 'dateEndRegistrations', o: '>=', d: moment().format('YYYY-MM-DD') },\r\n                        ],\r\n                    },\r\n                },\r\n            },\r\n        });\r\n    },\r\n\r\n    fetchProject: function(id) {\r\n        const requestUrl = `/jory/project/${id}`;\r\n\r\n        return axiosInstance.get(requestUrl, {\r\n            params: {\r\n                jory: {\r\n                    fld: [\r\n                        'id',\r\n                        'name',\r\n                        'description',\r\n                        'dateStartRegistrations',\r\n                        'dateEndRegistrations',\r\n                        'dateEndRegistrations',\r\n                        'minParticipations',\r\n                        'maxParticipations',\r\n                        'totalParticipations',\r\n                        'participationWorth',\r\n                        'amountOfLoanNeeded',\r\n                        'minAmountLoan',\r\n                        'maxAmountLoan',\r\n                        'postalcodeLink',\r\n                        'linkAgreeTerms',\r\n                        'linkUnderstandInfo',\r\n                    ],\r\n                    rlt: { projectType: { fld: ['id', 'codeRef'] } },\r\n                },\r\n            },\r\n        });\r\n    },\r\n};\r\n","export default amount => {\r\n    if (!amount) amount = 0;\r\n    // if (isNaN(amount)) {\r\n    //     amount = amount.replace(',', '.');\r\n    // }\r\n    amount = parseFloat(amount * 100) / 100;\r\n\r\n    if (isNaN(amount)) return 'Ongeldig bedrag';\r\n\r\n    return `€ ${amount.toLocaleString('nl', {\r\n        minimumFractionDigits: 2,\r\n        maximumFractionDigits: 2,\r\n    })}`;\r\n};\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\n\r\nfunction StepOneLoan({ next, project, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        amountOptioned: Yup.string()\r\n            .required('Verplicht')\r\n            .test(\r\n                'amountOptioned',\r\n                'Minimum van ' + project.minAmountLoan + ' nodig',\r\n                value => value.replace(',', '.') >= project.minAmountLoan\r\n            )\r\n            .test(\r\n                'amountOptioned',\r\n                'Maximum van ' + project.maxAmountLoan + ' bereikt',\r\n                value => value.replace(',', '.') <= project.maxAmountLoan\r\n            )\r\n            .matches(/^\\s*(?=.*[1-9])\\d*(?:\\.\\d{1,2})?\\s*$/, 'Fout bedrag'),\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues(values);\r\n                next();\r\n            }}\r\n            initialValues={initialRegisterValues}\r\n        >\r\n            {({ handleSubmit, values, touched, errors }) => (\r\n                <>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Minimaal bedrag</FormLabel>\r\n                                <TextBlock>{project.minAmountLoan}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Maximaal bedrag</FormLabel>\r\n                                <TextBlock>{project.maxAmountLoan}</TextBlock>\r\n                            </Col>\r\n\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Label className={'field-label'}>In te leggen bedrag</Form.Label>\r\n                                <Field\r\n                                    name=\"amountOptioned\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"amount_optioned\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Te betalen bedrag</FormLabel>\r\n                                <TextBlock>{MoneyPresenter(values.amountOptioned)}</TextBlock>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                    <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                        Ga naar gegevens\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOneLoan;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\n\r\nfunction StepOneObligation({ next, project, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        participationsOptioned: Yup.number()\r\n            .typeError('Alleen nummers')\r\n            .test(\r\n                'participationsOptioned',\r\n                'Minimum van ' + project.minParticipations + ' nodig',\r\n                value => value >= project.minParticipations\r\n            )\r\n            .max(project.maxParticipations, 'Maximum van ${max} bereikt')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues(values);\r\n                next();\r\n            }}\r\n            initialValues={initialRegisterValues}\r\n        >\r\n            {({ handleSubmit, values, touched, errors }) => (\r\n                <>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Minimale aantal obligaties</FormLabel>\r\n                                <TextBlock>{project.minParticipations}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Maximale aantal obligaties</FormLabel>\r\n                                <TextBlock>{project.maxParticipations}</TextBlock>\r\n                            </Col>\r\n\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Nominale waarde per obligatie</FormLabel>\r\n                                <TextBlock>{MoneyPresenter(project.participationWorth)}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Label className={'field-label'}>Gewenst aantal obligaties</Form.Label>\r\n                                <Field\r\n                                    name=\"participationsOptioned\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"participations_optioned\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Te betalen bedrag</FormLabel>\r\n                                <TextBlock>\r\n                                    {MoneyPresenter(values.participationsOptioned * project.participationWorth)}\r\n                                </TextBlock>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                    <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                        Ga naar gegevens\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOneObligation;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\n\r\nfunction StepOneCapital({ next, project, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        participationsOptioned: Yup.number()\r\n            .typeError('Alleen nummers')\r\n            .test(\r\n                'participationsOptioned',\r\n                'Minimum van ' + project.minParticipations + ' nodig',\r\n                value => value >= project.minParticipations\r\n            )\r\n            .max(project.maxParticipations, 'Maximum van ${max} bereikt')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues(values);\r\n                next();\r\n            }}\r\n            initialValues={initialRegisterValues}\r\n        >\r\n            {({ handleSubmit, values, touched, errors }) => (\r\n                <>\r\n                    <Form>\r\n                        <Row>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Minimale aantal participaties</FormLabel>\r\n                                <TextBlock>{project.minParticipations}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Maximale aantal participaties</FormLabel>\r\n                                <TextBlock>{project.maxParticipations}</TextBlock>\r\n                            </Col>\r\n\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Nominale waarde per participatie</FormLabel>\r\n                                <TextBlock>{MoneyPresenter(project.participationWorth)}</TextBlock>\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <Form.Label className={'field-label'}>Gewenst aantal participaties</Form.Label>\r\n                                <Field\r\n                                    name=\"participationsOptioned\"\r\n                                    render={({ field }) => (\r\n                                        <InputText\r\n                                            field={field}\r\n                                            errors={errors}\r\n                                            touched={touched}\r\n                                            id=\"participations_optioned\"\r\n                                        />\r\n                                    )}\r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={6}>\r\n                                <FormLabel className={'field-label'}>Te betalen bedrag</FormLabel>\r\n                                <TextBlock>\r\n                                    {MoneyPresenter(values.participationsOptioned * project.participationWorth)}\r\n                                </TextBlock>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                    <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                        Ga naar gegevens\r\n                                    </Button>\r\n                                </ButtonGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOneCapital;\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\n\r\nfunction StepOnePcr({ next, project, initialContact, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        participationsOptioned: Yup.number()\r\n            .typeError('Alleen nummers')\r\n            .test(\r\n                'participationsOptioned',\r\n                'Minimum van ' + project.minParticipations + ' nodig',\r\n                value => value >= project.minParticipations\r\n            )\r\n            .max(project.maxParticipations, 'Maximum van ${max} bereikt')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n        pcrYearlyPowerKwhConsumption: Yup.number()\r\n            .typeError('Alleen nummers')\r\n            .positive('Getal moet groter zijn dan 0')\r\n            .required('Verplicht'),\r\n        pcrPostalCode: Yup.string()\r\n            .min(4, 'Minimum van ${min} postcode cijfers nodig')\r\n            .required('Verplicht')\r\n            .test(\r\n                'pcrPostalCode',\r\n                'Helaas je postcode ligt niet binnen het gebied van potentiele deelnemers',\r\n                value => value && project.postalcodeLink && project.postalcodeLink.includes(value.substring(0, 4))\r\n            ),\r\n        pcrNumberOfSolarPanels: Yup.number().typeError('Alleen nummers'),\r\n        pcrInputGeneratedNumberOfKwh: Yup.number().typeError('Alleen nummers'),\r\n    });\r\n\r\n    const PCR_POWER_KWH_CONSUMPTION_PERCENTAGE = 0.8;\r\n    const PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL = 250;\r\n\r\n    function calculateEstimatedGeneratedNumberOfKwh(values) {\r\n        return values.pcrNumberOfSolarPanels\r\n            ? values.pcrNumberOfSolarPanels * PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL\r\n            : 0;\r\n    }\r\n    function calculateGeneratedNumberOfKwh(values) {\r\n        return values.pcrInputGeneratedNumberOfKwh && values.pcrInputGeneratedNumberOfKwh > 0\r\n            ? values.pcrInputGeneratedNumberOfKwh\r\n            : calculateEstimatedGeneratedNumberOfKwh(values)\r\n            ? calculateEstimatedGeneratedNumberOfKwh(values)\r\n            : 0;\r\n    }\r\n    function calculatePowerKwhConsumption(values) {\r\n        let extraPowerKwhConsumption =\r\n            values.pcrYearlyPowerKwhConsumption - calculateGeneratedNumberOfKwh(values) > 0\r\n                ? values.pcrYearlyPowerKwhConsumption - calculateGeneratedNumberOfKwh(values)\r\n                : 0;\r\n        return extraPowerKwhConsumption;\r\n    }\r\n    function calculateAdviseMaxNumberOfParticipations(values) {\r\n        let pcrAdviseMaxNumberOfParticipations =\r\n            calculatePowerKwhConsumption(values) > 0\r\n                ? Math.ceil(\r\n                      (calculatePowerKwhConsumption(values) * PCR_POWER_KWH_CONSUMPTION_PERCENTAGE) /\r\n                          PCR_GENERATING_CAPACITY_ONE_SOLAR_PANEL\r\n                  )\r\n                : 0;\r\n\r\n        if (pcrAdviseMaxNumberOfParticipations < project.minParticipations) {\r\n            pcrAdviseMaxNumberOfParticipations = project.minParticipations;\r\n        } else if (pcrAdviseMaxNumberOfParticipations > project.maxParticipations) {\r\n            pcrAdviseMaxNumberOfParticipations = project.maxParticipations;\r\n        }\r\n        return pcrAdviseMaxNumberOfParticipations;\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitRegisterValues({ ...values, powerKwhConsumption: calculatePowerKwhConsumption(values) });\r\n                next();\r\n            }}\r\n            initialValues={{\r\n                ...initialRegisterValues,\r\n            }}\r\n        >\r\n            {({ handleSubmit, values, touched, errors, setFieldValue }) => {\r\n                let pcrEstimatedGeneratedNumberOfKwh = calculateEstimatedGeneratedNumberOfKwh(values);\r\n                let powerKwhConsumption = Math.ceil(\r\n                    calculatePowerKwhConsumption(values) * PCR_POWER_KWH_CONSUMPTION_PERCENTAGE\r\n                );\r\n                let pcrAdviseMaxNumberOfParticipations = calculateAdviseMaxNumberOfParticipations(values);\r\n                return (\r\n                    <>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>Minimale aantal participaties</FormLabel>\r\n                                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>Maximale aantal participaties</FormLabel>\r\n                                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                                </Col>\r\n\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>Nominale waarde per participatie</FormLabel>\r\n                                    <TextBlock>{MoneyPresenter(project.participationWorth)}</TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label required'}>Je postcode</Form.Label>\r\n                                    <Field\r\n                                        name=\"pcrPostalCode\"\r\n                                        render={({ field }) => (\r\n                                            <InputText\r\n                                                field={field}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                id=\"pcr_postal_code\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label'}>Deelnemende postcodes</Form.Label>\r\n                                    <TextBlock>{project.postalcodeLink}</TextBlock>\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label required'}>\r\n                                        Je (geschatte) jaarlijks verbruik (in kWh)\r\n                                    </Form.Label>\r\n                                    <Field\r\n                                        name=\"pcrYearlyPowerKwhConsumption\"\r\n                                        render={({ field }) => (\r\n                                            <InputText\r\n                                                field={field}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                id=\"pcr_yearly_power_kwh_consumption\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Form.Label className={'field-label'}>\r\n                                        Heb je al zonnepanelen op je eigen dak of doe je mee in een ander project?\r\n                                    </Form.Label>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"pcrHasSolarPanels\"\r\n                                        render={({ field }) => (\r\n                                            <>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_has_solar_panels_yes\"\r\n                                                            checked={field.value === 'Y'}\r\n                                                            value={'Y'}\r\n                                                            onChange={() => setFieldValue('pcrHasSolarPanels', 'Y')}\r\n                                                        />\r\n                                                        &nbsp;Ja\r\n                                                    </label>\r\n                                                    &nbsp;&nbsp;\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_has_solar_panels_no\"\r\n                                                            checked={field.value === 'N'}\r\n                                                            value={'N'}\r\n                                                            onChange={() => {\r\n                                                                setFieldValue('pcrHasSolarPanels', 'N');\r\n                                                                setFieldValue('pcrNumberOfSolarPanels', 0);\r\n                                                            }}\r\n                                                        />\r\n                                                        &nbsp;Nee\r\n                                                    </label>\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {values.pcrHasSolarPanels === 'Y' ? (\r\n                                <Row>\r\n                                    <Col xs={12} md={6}>\r\n                                        <Form.Label className={'field-label'}>\r\n                                            Hoeveel zonnepanelen wekken al stroom voor je op\r\n                                        </Form.Label>\r\n                                        <Field\r\n                                            name=\"pcrNumberOfSolarPanels\"\r\n                                            render={({ field }) => (\r\n                                                <InputText\r\n                                                    field={field}\r\n                                                    errors={errors}\r\n                                                    touched={touched}\r\n                                                    id=\"pcr_number_of_solar_panels\"\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label'}>\r\n                                        Wij schatten in dat je panelen jaarlijks opwekken\r\n                                    </Form.Label>\r\n                                    <TextBlock id=\"pcr_input_estimated_generated_number_of_kwh\">\r\n                                        {pcrEstimatedGeneratedNumberOfKwh} kWh\r\n                                    </TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Form.Label className={'field-label'}>Klopt het geschatte opbrengst?</Form.Label>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"pcrEstimatedRevenueOk\"\r\n                                        render={({ field }) => (\r\n                                            <>\r\n                                                <div className=\"form-check form-check-inline\">\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_estimated_revenue_ok_yes\"\r\n                                                            checked={field.value === 'Y'}\r\n                                                            value={'Y'}\r\n                                                            onChange={() => {\r\n                                                                setFieldValue('pcrEstimatedRevenueOk', 'Y');\r\n                                                                setFieldValue('pcrInputGeneratedNumberOfKwh', 0);\r\n                                                            }}\r\n                                                        />\r\n                                                        &nbsp;Ja\r\n                                                    </label>\r\n                                                    &nbsp;&nbsp;\r\n                                                    <label className=\"radio-inline\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            {...field}\r\n                                                            id=\"pcr_estimated_revenue_ok_no\"\r\n                                                            checked={field.value === 'N'}\r\n                                                            value={'N'}\r\n                                                            onChange={() => setFieldValue('pcrEstimatedRevenueOk', 'N')}\r\n                                                        />\r\n                                                        &nbsp;Nee\r\n                                                    </label>\r\n                                                </div>\r\n                                            </>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {values.pcrEstimatedRevenueOk === 'N' ? (\r\n                                <>\r\n                                    <Row>\r\n                                        <Col xs={12} md={6}>\r\n                                            <Form.Label className={'field-label'}>\r\n                                                Wat is de jaarlijkse opbrengst van jouw panelen (in kWh)\r\n                                            </Form.Label>\r\n                                            <Field\r\n                                                name=\"pcrInputGeneratedNumberOfKwh\"\r\n                                                render={({ field }) => (\r\n                                                    <InputText\r\n                                                        field={field}\r\n                                                        errors={errors}\r\n                                                        touched={touched}\r\n                                                        id=\"pcr_input_generated_number_of_kwh\"\r\n                                                    />\r\n                                                )}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            ) : (\r\n                                ''\r\n                            )}\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <p>\r\n                                        We adviseren tot 80% van je jaarlijks verbruik minus de jaarlijkse opbrengsten\r\n                                        (in jouw geval {powerKwhConsumption} kWh) te dekken met participaties. In het\r\n                                        veld hier direct onder is voor je uitgerekend hoeveel participaties dat zijn.\r\n                                        Het is een advies, je mag er ook meer kopen. Dit kan echter slecht zijn voor je\r\n                                        rendement.\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label'}>\r\n                                        Advies maximaal aantal participaties\r\n                                    </Form.Label>\r\n                                    <TextBlock>{pcrAdviseMaxNumberOfParticipations}</TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col xs={12} md={6}>\r\n                                    <Form.Label className={'field-label required'}>\r\n                                        Gewenst aantal participaties\r\n                                    </Form.Label>\r\n                                    <Field\r\n                                        name=\"participationsOptioned\"\r\n                                        render={({ field }) => (\r\n                                            <InputText\r\n                                                field={field}\r\n                                                errors={errors}\r\n                                                touched={touched}\r\n                                                id=\"participations_optioned\"\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                                <Col xs={12} md={6}>\r\n                                    <FormLabel className={'field-label'}>Te betalen bedrag</FormLabel>\r\n                                    <TextBlock>\r\n                                        {MoneyPresenter(values.participationsOptioned * project.participationWorth)}\r\n                                    </TextBlock>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                            Ga naar gegevens\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </>\r\n                );\r\n            }}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default StepOnePcr;\r\n","import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport DefaultContactPersonalEdit from '../../contact-details/default-form-personal/Edit';\r\nimport { Form, Formik } from 'formik';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport ValidationSchemaPersonal from '../../../helpers/ValidationSchemaPersonal';\r\nimport ValidationSchemaOrganisation from '../../../helpers/ValidationSchemaOrganisation';\r\nimport * as Yup from 'yup';\r\nimport DefaultContactOrganisationEdit from '../../contact-details/default-form-organisation/Edit';\r\n\r\nfunction StepTwo({ portalSettings, previous, next, project, initialContact, handleSubmitContactValues }) {\r\n    const typeContact = initialContact.typeId ? initialContact.typeId : null;\r\n    const validationSchemaPcrPersonal = Yup.object().shape({\r\n        primaryAddress: Yup.object().shape({\r\n            postalCode: Yup.string().test(\r\n                'test-compare a few values',\r\n                'Helaas je postcode ligt niet binnen het gebied van potentiele deelnemers',\r\n                function(value) {\r\n                    return project.postalcodeLink.includes(value.substring(0, 4));\r\n                }\r\n            ),\r\n        }),\r\n        primaryContactEnergySupplier: Yup.object().shape({\r\n            energySupplierId: Yup.string()\r\n                .nullable()\r\n                .required('Verplicht'),\r\n            esNumber: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .required('Verplicht'),\r\n            eanElectricity: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n    });\r\n    const validationSchemaPcrOrganisation = Yup.object().shape({\r\n        visitAddress: Yup.object().shape({\r\n            postalCode: Yup.string()\r\n                .test(\r\n                    'test-compare a few values',\r\n                    'Helaas je postcode ligt niet binnen het gebied van potentiele deelnemers',\r\n                    function(value) {\r\n                        return project.postalcodeLink.includes(value.substring(0, 4));\r\n                    }\r\n                )\r\n                .required('Verplicht'),\r\n        }),\r\n        primaryContactEnergySupplier: Yup.object().shape({\r\n            energySupplierId: Yup.string()\r\n                .nullable()\r\n                .required('Verplicht'),\r\n            esNumber: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .required('Verplicht'),\r\n            eanElectricity: Yup.string()\r\n                .nullable()\r\n                .trim()\r\n                .required('Verplicht'),\r\n        }),\r\n    });\r\n\r\n    let validationSchema = null;\r\n    let validationSchemaBasic = null;\r\n    let validationSchemaAdditional = null;\r\n    switch (typeContact) {\r\n        case 'person':\r\n            validationSchemaBasic = ValidationSchemaPersonal.validationSchemaBasic;\r\n            validationSchemaAdditional = ValidationSchemaPersonal.validationSchemaAdditional;\r\n            validationSchema = validationSchemaBasic.concat(validationSchemaAdditional);\r\n            if (project.projectType.codeRef === 'postalcode_link_capital') {\r\n                validationSchema = validationSchema.concat(validationSchemaPcrPersonal);\r\n            }\r\n            break;\r\n        case 'organisation':\r\n            validationSchemaBasic = ValidationSchemaOrganisation.validationSchemaBasic;\r\n            validationSchemaAdditional = ValidationSchemaOrganisation.validationSchemaAdditional;\r\n            validationSchema = validationSchemaBasic.concat(validationSchemaAdditional);\r\n            if (project.projectType.codeRef === 'postalcode_link_capital') {\r\n                validationSchema = validationSchema.concat(validationSchemaPcrOrganisation);\r\n            }\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialContact}\r\n                enableReinitialize={true}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    actions.setSubmitting(true);\r\n                    handleSubmitContactValues(values, actions, next);\r\n                }}\r\n                render={({ errors, touched, setFieldValue, isSubmitting, values, handleSubmit }) => {\r\n                    return (\r\n                        <Form>\r\n                            {/* If contact is person */}\r\n                            {initialContact.typeId === 'person' ? (\r\n                                <DefaultContactPersonalEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    projectTypeCodeRef={project.projectType.codeRef}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                />\r\n                            ) : null}\r\n\r\n                            {/* If contact is organisation */}\r\n                            {initialContact.typeId === 'organisation' ? (\r\n                                <DefaultContactOrganisationEdit\r\n                                    portalSettings={portalSettings}\r\n                                    initialContact={initialContact}\r\n                                    projectTypeCodeRef={project.projectType.codeRef}\r\n                                    setFieldValue={setFieldValue}\r\n                                    values={values}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                />\r\n                            ) : null}\r\n\r\n                            <Row>\r\n                                <Col>\r\n                                    <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={previous}>\r\n                                            Terug\r\n                                        </Button>\r\n                                        <Button\r\n                                            className={'w-button'}\r\n                                            size=\"sm\"\r\n                                            onClick={handleSubmit}\r\n                                            disabled={isSubmitting}\r\n                                        >\r\n                                            {isSubmitting ? (\r\n                                                <span>\r\n                                                    <ClipLoader color={'white'} size={14} />\r\n                                                    Bezig met opslaan\r\n                                                </span>\r\n                                            ) : (\r\n                                                'Opslaan en doorgaan'\r\n                                            )}\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    );\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepTwo;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction StepThree({ project, previous, next, initialRegisterValues, handleSubmitRegisterValues }) {\r\n    const validationSchema = Yup.object({\r\n        didAcceptAgreement: Yup.bool().test(\r\n            'didAcceptAgreement',\r\n            'Je dient akkoord te gaan met de voorwaarden!',\r\n            value => value === true\r\n        ),\r\n        didUnderstandInfo: Yup.bool().test(\r\n            'didUnderstandInfo',\r\n            'Je dient te bevestigen, dat de projectinformatie gelezen en begrepen is!',\r\n            value => value === true\r\n        ),\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                validationSchema={validationSchema}\r\n                onSubmit={function(values, actions) {\r\n                    handleSubmitRegisterValues(values);\r\n                    next();\r\n                }}\r\n                initialValues={initialRegisterValues}\r\n            >\r\n                {({ handleSubmit, touched, errors }) => (\r\n                    <>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <p>\r\n                                        Om deel te kunnen nemen dien je akkoord te gaan met de voorwaarden en dien je te\r\n                                        bevestigen dat je de projectinformatie hebt gelezen en begrepen.\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"didAcceptAgreement\"\r\n                                        render={({ field }) => (\r\n                                            <label className=\"w-checkbox checkbox-fld\">\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    {...field}\r\n                                                    id=\"did_accept_agreement\"\r\n                                                    checked={field.value}\r\n                                                    className=\"w-checkbox-input checkbox\"\r\n                                                />\r\n                                                <span\r\n                                                    htmlFor=\"did_accept_agreement\"\r\n                                                    className=\"checkbox-label w-form-label\"\r\n                                                >\r\n                                                    Ik ga akkoord met de{' '}\r\n                                                    <a href={project.linkAgreeTerms} target=\"_blank\">\r\n                                                        voorwaarden\r\n                                                    </a>\r\n                                                </span>\r\n                                                {touched[field.name] && errors[field.name] ? (\r\n                                                    <div className={'error-message text-danger'}>\r\n                                                        {errors[field.name]}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </label>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <Field\r\n                                        name=\"didUnderstandInfo\"\r\n                                        render={({ field }) => (\r\n                                            <label className=\"w-checkbox checkbox-fld\">\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    {...field}\r\n                                                    id=\"did_understand_info\"\r\n                                                    checked={field.value}\r\n                                                    className=\"w-checkbox-input checkbox\"\r\n                                                />\r\n                                                <span\r\n                                                    htmlFor=\"did_understand_info\"\r\n                                                    className=\"checkbox-label w-form-label\"\r\n                                                >\r\n                                                    Ik heb de{' '}\r\n                                                    <a href={`${project.linkUnderstandInfo}`} target=\"_blank\">\r\n                                                        projectinformatie\r\n                                                    </a>{' '}\r\n                                                    (inclusief de daarin beschreven risico’s) behorende bij het project\r\n                                                    gelezen en begrepen\r\n                                                </span>\r\n                                                {touched[field.name] && errors[field.name] ? (\r\n                                                    <div className={'error-message text-danger'}>\r\n                                                        {errors[field.name]}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </label>\r\n                                        )}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12} md={10}>\r\n                                    <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={previous}>\r\n                                            Terug\r\n                                        </Button>\r\n                                        <Button className={'w-button'} size=\"sm\" onClick={handleSubmit}>\r\n                                            Ga naar inschrijfformulier\r\n                                        </Button>\r\n                                    </ButtonGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepThree;\r\n","import React from 'react';\r\nimport Frame from 'react-frame-component';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ViewHtmlAsText = ({ id, value }) => {\r\n    const createMarkup = () => {\r\n        return { __html: value };\r\n    };\r\n\r\n    return (\r\n        <Frame>\r\n            <div id={id} dangerouslySetInnerHTML={createMarkup()} />\r\n        </Frame>\r\n    );\r\n};\r\n\r\nViewHtmlAsText.defaultProps = {\r\n    value: '',\r\n};\r\n\r\nViewHtmlAsText.propTypes = {\r\n    id: PropTypes.string,\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nexport default ViewHtmlAsText;\r\n","import axiosInstance from '../default-setup/AxiosInstance';\r\n\r\nexport default {\r\n    createParticipantProject: registerValues => {\r\n        const requestUrl = `/project/participant/create`;\r\n\r\n        return axiosInstance.post(requestUrl, registerValues);\r\n    },\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport ViewHtmlAsText from '../../../components/general/ViewHtmlAsText';\r\nimport Col from 'react-bootstrap/Col';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport ParticipantProjectAPI from '../../../api/participant-project/ParticipantProjectAPI';\r\nimport { ClipLoader } from 'react-spinners';\r\n\r\nfunction StepFour({ previous, next, registerValues, setSucces }) {\r\n    const [contactDocument, setContactDocument] = useState('');\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        (function callFetchContact() {\r\n            setLoading(true);\r\n            ContactAPI.previewDocument(registerValues)\r\n                .then(payload => {\r\n                    setContactDocument(payload.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                    setLoading(false);\r\n                });\r\n        })();\r\n    }, [registerValues]);\r\n\r\n    function handleSubmitRegisterValues(actions, next) {\r\n        ParticipantProjectAPI.createParticipantProject(registerValues)\r\n            .then(payload => {\r\n                // console.log(payload);\r\n                actions.setSubmitting(false);\r\n                setSucces(true);\r\n                next();\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met opslaan! Herlaad de pagina opnieuw.');\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        didAgreeRegistration: Yup.bool().test(\r\n            'didAgreeRegistration',\r\n            'Je dient akkoord te gaan met het inschrijfformulier!',\r\n            value => value === true\r\n        ),\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <Formik\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={function(values, actions) {\r\n                        handleSubmitRegisterValues(actions, next);\r\n                    }}\r\n                    initialValues={{ didAgreeRegistration: false }}\r\n                >\r\n                    {({ handleSubmit, touched, errors, isSubmitting }) => (\r\n                        <>\r\n                            <Form>\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <ViewHtmlAsText value={contactDocument} />\r\n                                        <Field\r\n                                            name=\"didAgreeRegistration\"\r\n                                            render={({ field }) => (\r\n                                                <label className=\"w-checkbox checkbox-fld\">\r\n                                                    <input\r\n                                                        type=\"checkbox\"\r\n                                                        {...field}\r\n                                                        id=\"did_agree_registration\"\r\n                                                        checked={field.value}\r\n                                                        className=\"w-checkbox-input checkbox\"\r\n                                                    />\r\n                                                    <span\r\n                                                        htmlFor=\"did_agree_registration\"\r\n                                                        className=\"checkbox-label w-form-label\"\r\n                                                    >\r\n                                                        Ik ben akkoord met het inschrijfformulier\r\n                                                    </span>\r\n                                                    {touched[field.name] && errors[field.name] ? (\r\n                                                        <div className={'error-message text-danger'}>\r\n                                                            {errors[field.name]}\r\n                                                        </div>\r\n                                                    ) : null}\r\n                                                </label>\r\n                                            )}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <p>\r\n                                            Wanneer je akkoord gaat met het inschrijfformulier en je de inschrijving\r\n                                            bevestigd, is je inschrijving definitief.\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12} md={10}>\r\n                                        <ButtonGroup aria-label=\"Steps\" className=\"float-right\">\r\n                                            <Button className={'w-button'} size=\"sm\" onClick={previous}>\r\n                                                Terug\r\n                                            </Button>\r\n                                            <Button\r\n                                                className={'w-button'}\r\n                                                size=\"sm\"\r\n                                                onClick={handleSubmit}\r\n                                                disabled={isSubmitting}\r\n                                            >\r\n                                                {isSubmitting ? (\r\n                                                    <span>\r\n                                                        <ClipLoader color={'white'} size={14} />\r\n                                                        Bezig met verwerken\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    'Bevestigen inschrijving'\r\n                                                )}\r\n                                            </Button>\r\n                                        </ButtonGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </>\r\n                    )}\r\n                </Formik>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StepFour;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction StepFive() {\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col xs={12} md={10}>\r\n                    <p>\r\n                        Bedankt voor je inschrijving! Je ontvangt van ons een e-mail met daarin alle gegevens van je\r\n                        inschrijving en informatie over de vervolgstappen die we nemen om jouw inschrijving definitief\r\n                        te maken.\r\n                    </p>\r\n                    <p>Onder de menuknop “Huidige deelnames” vind je je inschrijving terug.</p>\r\n                    <p>Wil je je inschrijving aanpassen? Neem dan contact met ons op.</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} md={10}>\r\n                    <ButtonGroup className=\"float-right\">\r\n                        <Link to={`/inschrijvingen-projecten`}>\r\n                            <Button className={'w-button'} size=\"sm\">\r\n                                Naar mijn huidige deelnames\r\n                            </Button>\r\n                        </Link>\r\n                    </ButtonGroup>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StepFive;\r\n","import React from 'react';\r\nimport StepOneLoan from './StepOneLoan';\r\nimport StepOneObligation from './StepOneObligation';\r\nimport StepOneCapital from './StepOneCapital';\r\nimport StepOnePcr from './StepOnePcr';\r\nimport StepTwo from './StepTwo';\r\nimport StepThree from './StepThree';\r\nimport StepFour from './StepFour';\r\nimport StepFive from './StepFive';\r\n\r\nfunction Steps({\r\n    portalSettings,\r\n    currentStep,\r\n    previous,\r\n    next,\r\n    project,\r\n    initialRegisterValues,\r\n    handleSubmitRegisterValues,\r\n    initialContact,\r\n    handleSubmitContactValues,\r\n    setSucces,\r\n}) {\r\n    switch (currentStep) {\r\n        case 1:\r\n            switch (project.projectType.codeRef) {\r\n                case 'loan':\r\n                    return (\r\n                        <StepOneLoan\r\n                            next={next}\r\n                            project={project}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                case 'obligation':\r\n                    return (\r\n                        <StepOneObligation\r\n                            next={next}\r\n                            project={project}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                case 'capital':\r\n                    return (\r\n                        <StepOneCapital\r\n                            next={next}\r\n                            project={project}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                case 'postalcode_link_capital':\r\n                    return (\r\n                        <StepOnePcr\r\n                            next={next}\r\n                            project={project}\r\n                            initialContact={initialContact}\r\n                            initialRegisterValues={initialRegisterValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                        />\r\n                    );\r\n                default:\r\n                    return null;\r\n            }\r\n\r\n        case 2:\r\n            return (\r\n                <StepTwo\r\n                    portalSettings={portalSettings}\r\n                    previous={previous}\r\n                    next={next}\r\n                    project={project}\r\n                    initialContact={initialContact}\r\n                    handleSubmitContactValues={handleSubmitContactValues}\r\n                />\r\n            );\r\n        case 3:\r\n            return (\r\n                <StepThree\r\n                    project={project}\r\n                    previous={previous}\r\n                    next={next}\r\n                    initialRegisterValues={initialRegisterValues}\r\n                    handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                />\r\n            );\r\n        case 4:\r\n            return (\r\n                <StepFour\r\n                    previous={previous}\r\n                    next={next}\r\n                    registerValues={initialRegisterValues}\r\n                    setSucces={setSucces}\r\n                />\r\n            );\r\n        case 5:\r\n            return <StepFive />;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport default Steps;\r\n","import React from 'react';\r\nimport Steps from './steps';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction MasterForm({\r\n    portalSettings,\r\n    project,\r\n    initialRegisterValues,\r\n    handleSubmitRegisterValues,\r\n    initialContact,\r\n    handleSubmitContactValues,\r\n    setSucces,\r\n}) {\r\n    const [currentStep, setStep] = React.useState(1);\r\n\r\n    function previous() {\r\n        setStep(currentStep <= 2 ? 1 : currentStep - 1);\r\n    }\r\n\r\n    function next() {\r\n        setStep(currentStep >= 4 ? 5 : currentStep + 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {currentStep <= 4 ? (\r\n                <Row className={'mb-4'}>\r\n                    <Col>\r\n                        <div className={'arrow-steps clearfix'}>\r\n                            <div className={`step ${currentStep === 1 ? 'current' : ''}`}>1. Inschrijven</div>\r\n                            <div className={`step ${currentStep === 2 ? 'current' : ''}`}>2. Gegevens</div>\r\n                            <div className={`step ${currentStep === 3 ? 'current' : ''}`}>3. Voorwaarden</div>\r\n                            <div className={`step ${currentStep === 4 ? 'current' : ''}`}>4. Inschrijfformulier</div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            ) : null}\r\n            <Steps\r\n                portalSettings={portalSettings}\r\n                currentStep={currentStep}\r\n                previous={previous}\r\n                next={next}\r\n                project={project}\r\n                initialRegisterValues={initialRegisterValues}\r\n                handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                initialContact={initialContact}\r\n                handleSubmitContactValues={handleSubmitContactValues}\r\n                setSucces={setSucces}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MasterForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ProjectAPI from '../../api/project/ProjectAPI';\r\nimport LoadingView from '../../components/general/LoadingView';\r\nimport ContactAPI from '../../api/contact/ContactAPI';\r\nimport rebaseContact from '../../helpers/RebaseContact';\r\nimport { PortalUserConsumer } from '../../context/PortalUserContext';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport MasterForm from './MasterForm';\r\nimport PortalSettingsAPI from '../../api/portal-settings/PortalSettingsAPI';\r\nimport axios from 'axios';\r\n\r\nfunction RegisterProject({ match, currentSelectedContact }) {\r\n    const initialRegisterValues = {\r\n        contactId: null,\r\n        projectId: null,\r\n        participationsOptioned: 0,\r\n        powerKwhConsumption: 0,\r\n        amountOptioned: 0,\r\n        didAcceptAgreement: false,\r\n        didUnderstandInfo: false,\r\n    };\r\n\r\n    const initialPcrValues = {\r\n        pcrYearlyPowerKwhConsumption: 0,\r\n        pcrPostalCode: '',\r\n        pcrHasSolarPanels: 'N',\r\n        pcrInputGeneratedNumberOfKwh: 0,\r\n        pcrEstimatedRevenueOk: 'Y',\r\n    };\r\n\r\n    const [registerValues, setRegisterValues] = useState(initialRegisterValues);\r\n\r\n    const [project, setProject] = useState({});\r\n    const [contact, setContact] = useState({});\r\n    const [portalSettings, setPortalSettings] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [isSucces, setSucces] = useState(false);\r\n    const [isRegistered, setRegistered] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (currentSelectedContact.id) {\r\n            (function fetchContactAndProject() {\r\n                setLoading(true);\r\n\r\n                axios\r\n                    .all([ProjectAPI.fetchProject(match.params.id), ContactAPI.fetchContact(currentSelectedContact.id)])\r\n                    .then(\r\n                        axios.spread((payloadProject, payloadContact) => {\r\n                            const contact = payloadContact.data.data;\r\n                            const project = payloadProject.data.data;\r\n                            // console.log(project);\r\n                            setProject(project);\r\n                            const contactData = rebaseContact(contact);\r\n                            setContact(contactData);\r\n                            callFetchContactProjects();\r\n\r\n                            if (\r\n                                project &&\r\n                                project.projectType &&\r\n                                project.projectType.codeRef === 'postalcode_link_capital'\r\n                            ) {\r\n                                let pcrPostalCode = '';\r\n                                if (contactData.typeId === 'organisation') {\r\n                                    pcrPostalCode = contactData.visitAddress ? contactData.visitAddress.postalCode : '';\r\n                                } else {\r\n                                    pcrPostalCode = contactData.primaryAddress\r\n                                        ? contactData.primaryAddress.postalCode\r\n                                        : '';\r\n                                }\r\n                                setRegisterValues({\r\n                                    ...registerValues,\r\n                                    projectId: match.params.id,\r\n                                    contactId: currentSelectedContact.id,\r\n                                    ...initialPcrValues,\r\n                                    pcrPostalCode,\r\n                                });\r\n                            } else {\r\n                                setRegisterValues({\r\n                                    ...registerValues,\r\n                                    projectId: match.params.id,\r\n                                    contactId: currentSelectedContact.id,\r\n                                });\r\n                            }\r\n\r\n                            setLoading(false);\r\n                        })\r\n                    )\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setLoading(false);\r\n                    });\r\n            })();\r\n        }\r\n\r\n        (function callFetchPortalSettings() {\r\n            setLoading(true);\r\n            const keys =\r\n                '?keys[]=portalName' +\r\n                '&keys[]=portalWebsite' +\r\n                '&keys[]=portalUrl' +\r\n                '&keys[]=responsibleUserId' +\r\n                '&keys[]=checkContactTaskResponsibleUserId' +\r\n                '&keys[]=linkPrivacyPolicy';\r\n            PortalSettingsAPI.fetchPortalSettings(keys)\r\n                .then(payload => {\r\n                    setPortalSettings({ ...payload.data });\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ isLoading: false, hasError: true });\r\n                });\r\n        })();\r\n    }, [match, currentSelectedContact]);\r\n\r\n    function callFetchContactProjects() {\r\n        ContactAPI.fetchContactWithParticipants(currentSelectedContact.id)\r\n            .then(payload => {\r\n                let contactProjecten = [];\r\n                payload.data.data.participations.map(item => contactProjecten.push(item.project.id));\r\n\r\n                const projectId = match.params.id;\r\n\r\n                if (contactProjecten.includes(Number(projectId))) {\r\n                    setRegistered(true);\r\n                } else {\r\n                    setRegistered(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function handleSubmitRegisterValues(values) {\r\n        setRegisterValues({ ...registerValues, ...values });\r\n    }\r\n\r\n    function handleSubmitContactValues(values, actions, nextStep) {\r\n        const updatedContact = { ...contact, ...values };\r\n        ContactAPI.updateContact(updatedContact)\r\n            .then(payload => {\r\n                ContactAPI.fetchContact(currentSelectedContact.id)\r\n                    .then(payload => {\r\n                        const contactData = rebaseContact(payload.data.data);\r\n\r\n                        setContact(contactData);\r\n                        nextStep();\r\n                    })\r\n                    .catch(error => {\r\n                        alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                        setLoading(false);\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                alert('Er is iets misgegaan met opslaan! Herlaad de pagina opnieuw.');\r\n            });\r\n    }\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : isRegistered ? (\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">\r\n                                <strong>{contact.fullName}</strong> is al ingeschreven voor project{' '}\r\n                                <strong>{project.name}</strong>\r\n                            </h1>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={10}>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Link to={`/inschrijvingen-projecten`}>\r\n                                    <Button className={'w-button'} size=\"sm\">\r\n                                        Naar huidige deelnames\r\n                                    </Button>\r\n                                </Link>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <Row>\r\n                    <Col>\r\n                        {isSucces ? (\r\n                            <h1 className=\"content-heading\">\r\n                                Ingeschreven voor project <strong>{project.name}</strong>\r\n                            </h1>\r\n                        ) : (\r\n                            <h1 className=\"content-heading\">\r\n                                Schrijf <strong>{contact.fullName}</strong> in voor project{' '}\r\n                                <strong>{project.name}</strong>\r\n                            </h1>\r\n                        )}\r\n                        <MasterForm\r\n                            portalSettings={portalSettings}\r\n                            project={project}\r\n                            initialRegisterValues={registerValues}\r\n                            handleSubmitRegisterValues={handleSubmitRegisterValues}\r\n                            // initialAdditionalPcrValues={additionalPcrValues}\r\n                            // handleSubmitAdditionalPcrValues={handleSubmitAdditionalPcrValues}\r\n                            initialContact={contact}\r\n                            handleSubmitContactValues={handleSubmitContactValues}\r\n                            setSucces={setSucces}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function RegisterProjectWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact }) => (\r\n                <RegisterProject {...props} currentSelectedContact={currentSelectedContact} />\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ProjectAPI from '../../../api/project/ProjectAPI';\r\nimport { Link } from 'react-router-dom';\r\nimport Table from 'react-bootstrap/Table';\r\nimport moment from 'moment';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport { PortalUserConsumer } from '../../../context/PortalUserContext';\r\n\r\nfunction ProjectList(props) {\r\n    const [contactProjectsArray, setContactProjectsArray] = useState([]);\r\n    const [projectData, setProjectData] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n    const prevCurrentSelectedContact = usePrevious(props.currentSelectedContact);\r\n\r\n    useEffect(() => {\r\n        (function callFetchProjects() {\r\n            setLoading(true);\r\n            // Call Api if current selected contact id is filled\r\n            if (props.currentSelectedContact.id) {\r\n                // If there is no previous selected contact OR previous selected contact is not the same as current selected contact\r\n                if (!prevCurrentSelectedContact || prevCurrentSelectedContact.id != props.currentSelectedContact.id) {\r\n                    callFetchContactProjects();\r\n                }\r\n            }\r\n            ProjectAPI.fetchProjects()\r\n                .then(payload => {\r\n                    setProjectData(payload.data.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                    setLoading(false);\r\n                });\r\n        })();\r\n    }, [props.currentSelectedContact]);\r\n\r\n    function callFetchContactProjects() {\r\n        ContactAPI.fetchContactWithParticipants(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                let contactProjecten = [];\r\n                payload.data.data.participations.map(item => contactProjecten.push(item.project.id));\r\n                setContactProjectsArray(contactProjecten);\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function usePrevious(value) {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"content-heading\">Overzicht projecten waarop je kan inschrijven.</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <p>Klik op het project voor meer details.</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {isLoading ? (\r\n                        <LoadingView />\r\n                    ) : projectData.length === 0 ? (\r\n                        'Geen projecten beschikbaar om op in te schrijven.'\r\n                    ) : (\r\n                        <Table responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Project</th>\r\n                                    <th>Ingeschreven</th>\r\n                                    <th>Start inschrijving</th>\r\n                                    <th>Einde inschrijving</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {projectData.map(project => (\r\n                                    <tr key={project.id}>\r\n                                        <td>\r\n                                            {contactProjectsArray.includes(project.id) ? (\r\n                                                project.name\r\n                                            ) : (\r\n                                                <Link to={`/project/${project.id}`}>{project.name}</Link>\r\n                                            )}\r\n                                        </td>\r\n                                        <td>\r\n                                            {contactProjectsArray.includes(project.id) ? (\r\n                                                <div className=\"text-success text-center\">✔</div>\r\n                                            ) : (\r\n                                                ''\r\n                                            )}\r\n                                        </td>\r\n                                        <td>\r\n                                            {project.dateStartRegistrations\r\n                                                ? moment(project.dateStartRegistrations).format('LL')\r\n                                                : ''}\r\n                                        </td>\r\n                                        <td>\r\n                                            {project.dateEndRegistrations\r\n                                                ? moment(project.dateEndRegistrations).format('LL')\r\n                                                : ''}\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function ProjectListWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact }) => <ProjectList {...props} currentSelectedContact={currentSelectedContact} />}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction LoanDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                    <FormLabel>Lening nodig</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.amountOfLoanNeeded)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal bedrag per contact</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.minAmountLoan)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal bedrag per contact</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.maxAmountLoan)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoanDetails;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction ObligationDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Nominale waarde per obligatie</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.participationWorth)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Aantal obligaties nodig</FormLabel>\r\n                    <TextBlock>{project.totalParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal aantal obligaties per contact</FormLabel>\r\n                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal aantal obligaties per contact</FormLabel>\r\n                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ObligationDetails;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction CapitalDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Nominale waarde per participatie</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.participationWorth)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Aantal participaties nodig</FormLabel>\r\n                    <TextBlock>{project.totalParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CapitalDetails;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport moment from 'moment';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\n\r\nfunction PcrDetails({ project }) {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Project</FormLabel>\r\n                    <TextBlock>{project.name}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Omschrijving project</FormLabel>\r\n                    <TextBlock>{project.description ? project.description : ' '}</TextBlock>\r\n                </Col>\r\n\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Nominale waarde per participatie</FormLabel>\r\n                    <TextBlock>{MoneyPresenter(project.participationWorth)}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Aantal participaties nodig</FormLabel>\r\n                    <TextBlock>{project.totalParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Minimaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.minParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Maximaal aantal participaties per contact</FormLabel>\r\n                    <TextBlock>{project.maxParticipations}</TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Start inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateStartRegistrations ? moment(project.dateStartRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <FormLabel>Eind inschrijving</FormLabel>\r\n                    <TextBlock>\r\n                        {project.dateEndRegistrations ? moment(project.dateEndRegistrations).format('LL') : ''}\r\n                    </TextBlock>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PcrDetails;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ProjectAPI from '../../../api/project/ProjectAPI';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport LoanDetails from './LoanDetails';\r\nimport ObligationDetails from './ObligationDetails';\r\nimport CapitalDetails from './CapitalDetails';\r\nimport PcrDetails from './PcrDetails';\r\nimport PortalSettingsAPI from '../../../api/portal-settings/PortalSettingsAPI';\r\n\r\nfunction ProjectDetails({ match }) {\r\n    const [portalSettings, setPortalSettings] = useState({});\r\n    const [project, setProject] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const keys =\r\n            '?keys[]=portalName' +\r\n            '&keys[]=portalWebsite' +\r\n            '&keys[]=portalUrl' +\r\n            '&keys[]=responsibleUserId' +\r\n            '&keys[]=checkContactTaskResponsibleUserId' +\r\n            '&keys[]=linkPrivacyPolicy';\r\n        PortalSettingsAPI.fetchPortalSettings(keys)\r\n            .then(payload => {\r\n                setPortalSettings({ ...payload.data });\r\n            })\r\n            .catch(error => {\r\n                this.setState({ isLoading: false, hasError: true });\r\n            });\r\n\r\n        (function callFetchProject() {\r\n            setLoading(true);\r\n            ProjectAPI.fetchProject(match.params.id)\r\n                .then(payload => {\r\n                    setProject(payload.data.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch(error => {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                    setLoading(false);\r\n                });\r\n        })();\r\n    }, [match]);\r\n\r\n    function renderDetails() {\r\n        switch (project.projectType.codeRef) {\r\n            case 'loan':\r\n                return <LoanDetails project={project} />;\r\n            case 'obligation':\r\n                return <ObligationDetails project={project} />;\r\n            case 'capital':\r\n                return <CapitalDetails project={project} />;\r\n            case 'postalcode_link_capital':\r\n                return <PcrDetails project={project} />;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            {isLoading ? (\r\n                <LoadingView />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        <Col>\r\n                            <h1 className=\"content-heading\">Inschrijven project</h1>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {renderDetails()}\r\n\r\n                    <Row className={'mt-5'}>\r\n                        <Col>\r\n                            <p>\r\n                                Meer informatie over dit project vind je{' '}\r\n                                <a href={`${project.linkUnderstandInfo}`} target=\"_blank\">\r\n                                    hier\r\n                                </a>\r\n                            </p>\r\n                            <p>Wil je inschrijven op dit project. Klik dan op \"Ga naar inschrijven\".</p>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <ButtonGroup className=\"float-right\">\r\n                                <Link to={`/inschrijven/${project.id}`}>\r\n                                    <Button className={'w-button'} size=\"sm\">\r\n                                        Ga naar inschrijven\r\n                                    </Button>\r\n                                </Link>\r\n                            </ButtonGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProjectDetails;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport LoadingView from '../../../components/general/LoadingView';\r\nimport ContactAPI from '../../../api/contact/ContactAPI';\r\nimport { PortalUserConsumer } from '../../../context/PortalUserContext';\r\nimport MoneyPresenter from '../../../helpers/MoneyPresenter';\r\nimport moment from 'moment';\r\n\r\nfunction RegistrationList(props) {\r\n    const [contact, setContact] = useState({});\r\n    const [isLoading, setLoading] = useState(true);\r\n    const prevCurrentSelectedContact = usePrevious(props.currentSelectedContact);\r\n\r\n    useEffect(() => {\r\n        // Call Api if current selected contact id is filled\r\n        if (props.currentSelectedContact.id) {\r\n            // If there is no previous selected contact OR previous selected contact is not the same as current selected contact\r\n            if (!prevCurrentSelectedContact || prevCurrentSelectedContact.id != props.currentSelectedContact.id) {\r\n                callFetchContact();\r\n            }\r\n        }\r\n    }, [props.currentSelectedContact]);\r\n\r\n    function callFetchContact() {\r\n        setLoading(true);\r\n        ContactAPI.fetchContactWithParticipants(props.currentSelectedContact.id)\r\n            .then(payload => {\r\n                setContact(payload.data.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    function usePrevious(value) {\r\n        const ref = useRef();\r\n        useEffect(() => {\r\n            ref.current = value;\r\n        });\r\n        return ref.current;\r\n    }\r\n\r\n    return (\r\n        <Container className={'content-section'}>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"content-heading\">\r\n                        De projecten waarin <strong>{contact.fullName}</strong> deelneemt.\r\n                    </h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {isLoading ? (\r\n                        <LoadingView />\r\n                    ) : contact.length === 0 ? (\r\n                        'Nog geen inschrijvingen.'\r\n                    ) : (\r\n                        <Table responsive>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Project</th>\r\n                                    <th>Deelname</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {contact.participations.map(participation => {\r\n                                    if (\r\n                                        !participation.project.dateEnd ||\r\n                                        moment(participation.project.dateEnd).format('YYYY-MM-DD') >=\r\n                                            moment().format('YYYY-MM-DD')\r\n                                    ) {\r\n                                        return (\r\n                                            <tr key={participation.id}>\r\n                                                <td>{participation.project.name}</td>\r\n                                                <td>\r\n                                                    {participation.project.projectType.codeRef == 'loan' ? (\r\n                                                        <>\r\n                                                            {participation.amountInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening{' '}\r\n                                                                    {MoneyPresenter(participation.amountInteressed)}{' '}\r\n                                                                    <em>(Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.amountOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening{' '}\r\n                                                                    {MoneyPresenter(participation.amountOptioned)}{' '}\r\n                                                                    <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.amountGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening {MoneyPresenter(participation.amountGranted)}{' '}\r\n                                                                    <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.amountDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    Lening{' '}\r\n                                                                    {MoneyPresenter(participation.amountDefinitive)}{' '}\r\n                                                                    <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n\r\n                                                    {participation.project.projectType.codeRef == 'obligation' ? (\r\n                                                        <>\r\n                                                            {participation.participationsInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsInteressed}\r\n                                                                    {' obligaties '} <em> (Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsOptioned}\r\n                                                                    {' obligaties '} <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsGranted}\r\n                                                                    {' obligaties '} <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsDefinitive}\r\n                                                                    {' obligaties '}\r\n                                                                    <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n\r\n                                                    {participation.project.projectType.codeRef == 'capital' ? (\r\n                                                        <>\r\n                                                            {participation.participationsInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsInteressed}\r\n                                                                    {' participaties '} <em>(Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsOptioned}\r\n                                                                    {' participaties '} <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsGranted}\r\n                                                                    {' participaties '} <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsDefinitive}\r\n                                                                    {' participaties '} <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n\r\n                                                    {participation.project.projectType.codeRef ==\r\n                                                    'postalcode_link_capital' ? (\r\n                                                        <>\r\n                                                            {participation.participationsInteressed != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsInteressed}\r\n                                                                    {' participaties '} <em>(Interesse)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsOptioned != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsOptioned}\r\n                                                                    {' participaties '} <em>(Ingeschreven)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsGranted != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsGranted}\r\n                                                                    {' participaties '} <em>(Toegekend)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                            {participation.participationsDefinitive != 0 ? (\r\n                                                                <span>\r\n                                                                    {participation.participationsDefinitive}\r\n                                                                    {' participaties '} <em>(Definitief)</em>\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                ''\r\n                                                            )}\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        ''\r\n                                                    )}\r\n                                                </td>\r\n                                            </tr>\r\n                                        );\r\n                                    }\r\n                                    return null;\r\n                                })}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default function RegistrationListWithContext(props) {\r\n    return (\r\n        <PortalUserConsumer>\r\n            {({ currentSelectedContact }) => (\r\n                <RegistrationList {...props} currentSelectedContact={currentSelectedContact} />\r\n            )}\r\n        </PortalUserConsumer>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Titles from '../../../data/Titles';\r\nimport LastNamePrefixes from '../../../data/LastNamePrefixes';\r\nimport Select from '../../../components/form/Select';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n    personTitleId: Yup.string()\r\n        .nullable()\r\n        .required('Verplicht'),\r\n    personFirstName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n    personLastName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst NewAccountFormPersonal = ({ handleSubmit, showSuccessMessage }) => (\r\n    <Formik\r\n        initialValues={{\r\n            email: '',\r\n            personTitleId: '',\r\n            personFirstName: '',\r\n            personLastName: '',\r\n        }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'text-light'}>Account aanmaken voor je zelf</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"email\"\r\n                                    className={''}\r\n                                    placeholder={'E-mailadres'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'text-light'}>Gegevens</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personTitleId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"title_id\"\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Aanhef'}\r\n                                    options={Titles}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personFirstName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"first_name\"\r\n                                    className={''}\r\n                                    placeholder={'Voornaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personLastNamePrefixId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name_prefix_id\"\r\n                                    options={LastNamePrefixes}\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Tussenvoegsel'}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Field\r\n                            name=\"personLastName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name\"\r\n                                    className={''}\r\n                                    placeholder={'Achternaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <ButtonText\r\n                            buttonText={'Account aanmaken'}\r\n                            buttonClassName={'authorization-button'}\r\n                            size=\"sm\"\r\n                            type={'submit'}\r\n                            loading={isSubmitting}\r\n                            loadingSpinnerColor={'#034b8c'}\r\n                            disabled={showSuccessMessage}\r\n                        />\r\n                    </Row>\r\n                </>\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default NewAccountFormPersonal;\r\n","import React from 'react';\r\nimport InputText from '../../../components/form/InputText';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport Titles from '../../../data/Titles';\r\nimport LastNamePrefixes from '../../../data/LastNamePrefixes';\r\nimport Select from '../../../components/form/Select';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .email()\r\n        .required('Verplicht'),\r\n    organisationName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n    personTitleId: Yup.string()\r\n        .nullable()\r\n        .required('Verplicht'),\r\n    personFirstName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n    personLastName: Yup.string()\r\n        .trim()\r\n        .required('Verplicht'),\r\n});\r\n\r\nconst NewAccountFormOrganisation = ({ handleSubmit, showSuccessMessage }) => (\r\n    <Formik\r\n        initialValues={{ email: '', organisationName: '', personTitleId: '', personFirstName: '', personLastName: '' }}\r\n        enableReinitialize={true}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values, actions) => {\r\n            actions.setSubmitting(true);\r\n            handleSubmit(values, actions);\r\n        }}\r\n        render={({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n                <>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'text-light'}>Account aanmaken voor je organisatie</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"email\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"email\"\r\n                                    className={''}\r\n                                    placeholder={'E-mailadres'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"organisationName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    id=\"name\"\r\n                                    className={''}\r\n                                    placeholder={'Naam Organisatie'}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <p className={'text-light'}>Gegevens contactpersoon</p>\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personTitleId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"title_id\"\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Aanhef'}\r\n                                    options={Titles}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personFirstName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"first_name\"\r\n                                    className={''}\r\n                                    placeholder={'Voornaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n                    <Row className=\"justify-content-center\">\r\n                        <Field\r\n                            name=\"personLastNamePrefixId\"\r\n                            render={({ field }) => (\r\n                                <Select\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name_prefix_id\"\r\n                                    options={LastNamePrefixes}\r\n                                    className={'select-field-transparent'}\r\n                                    placeholder={'Tussenvoegsel'}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Field\r\n                            name=\"personLastName\"\r\n                            render={({ field }) => (\r\n                                <InputText\r\n                                    field={field}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    id=\"last_name\"\r\n                                    className={''}\r\n                                    placeholder={'Achternaam'}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Row>\r\n\r\n                    <Row className=\"justify-content-center\">\r\n                        <ButtonText\r\n                            buttonText={'Account aanmaken'}\r\n                            buttonClassName={'authorization-button'}\r\n                            size=\"sm\"\r\n                            type={'submit'}\r\n                            loading={isSubmitting}\r\n                            loadingSpinnerColor={'#034b8c'}\r\n                            disabled={showSuccessMessage}\r\n                        />\r\n                    </Row>\r\n                </>\r\n            </Form>\r\n        )}\r\n    />\r\n);\r\n\r\nexport default NewAccountFormOrganisation;\r\n","import React, { useState } from 'react';\r\nimport { GoogleReCaptcha, GoogleReCaptchaProvider, useGoogleReCaptcha } from 'react-google-recaptcha-v3';\r\nimport AuthAPI from '../../../api/auth/AuthAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport NewAccountFormPersonal from './NewAccountFormPersonal';\r\nimport NewAccountFormOrganisation from './NewAccountFormOrganisation';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst NewAccount = props => {\r\n    const { executeRecaptcha } = useGoogleReCaptcha();\r\n    const [contactType, setContactType] = useState('person');\r\n    const [showError, toggleError] = useState(false);\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    async function handleSubmit(values, actions) {\r\n        // console.log('test 1');\r\n        if (!executeRecaptcha) {\r\n            return;\r\n        }\r\n        // console.log('test 2');\r\n        const reCaptchaToken = await executeRecaptcha('signup_page');\r\n        // console.log('test 3');\r\n\r\n        AuthAPI.newAccount({ ...values, contactType: contactType, reCaptchaToken })\r\n            .then(payload => {\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                // If new account fails show error and then set submitting back to false\r\n                // console.log(error);\r\n                toggleError(true);\r\n                if (error.response && error.response.status === 404) {\r\n                    setErrorMessage(\r\n                        'Er bestaat al een account met het e-mailadres dat je hebt ingevuld. Je kunt met dit e-mailadres inloggen als bestaand contact. Wil je een nieuw account aanmaken? Gebruik dan alsjeblieft een ander e-mailadres.'\r\n                    );\r\n                } else if (error.response && error.response.status === 405) {\r\n                    setErrorMessage(\r\n                        'Er bestaat al een contact met het e-mailadres, voornaam en achternaam dat je hebt ingevuld. Wil je een nieuw account aanmaken? Gebruik dan alsjeblieft een ander e-mailadres, voornaam of achternaam.'\r\n                    );\r\n                } else {\r\n                    setErrorMessage('Fout bij aanmaken nieuw account!');\r\n                }\r\n\r\n                actions.setSubmitting(false);\r\n            });\r\n    }\r\n\r\n    function redirect() {\r\n        return <Redirect to={'nieuw-account-succes'} />;\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"authorization-container text-light\">\r\n            <Row className=\"justify-content-center align-content-center full-height\">\r\n                {/*<Col xs=\"12\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"4\">*/}\r\n                <Col xs=\"12\" sm=\"6\" md=\"4\" lg=\"4\" xl=\"4\">\r\n                    <img src=\"images/logo.png\" alt=\"\" className=\"image logo-container-small\" />\r\n\r\n                    {showSuccessMessage ? (\r\n                        redirect()\r\n                    ) : (\r\n                        <>\r\n                            <Row className=\"justify-content-center\">\r\n                                <h3 className={'text-light'}>Nieuw account</h3>\r\n                            </Row>\r\n                            <Row className=\"justify-content-center\">\r\n                                <p className={'text-light'}>Maak binnen 2 minuten een account aan.</p>\r\n                            </Row>\r\n                            <br />\r\n                            <Row className=\"justify-content-center\">\r\n                                <label className=\"radio-inline\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"personal\"\r\n                                        checked={contactType === 'person'}\r\n                                        value={'person'}\r\n                                        onChange={() => setContactType('person')}\r\n                                    />\r\n                                    &nbsp;voor jezelf\r\n                                </label>\r\n                                &nbsp;&nbsp;\r\n                                <label className=\"radio-inline\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"organisation\"\r\n                                        checked={contactType === 'organisation'}\r\n                                        value={'organisation'}\r\n                                        onChange={() => {\r\n                                            setContactType('organisation');\r\n                                        }}\r\n                                    />\r\n                                    &nbsp;voor je organisatie\r\n                                </label>\r\n                            </Row>\r\n                            <br />\r\n\r\n                            {contactType === 'person' ? (\r\n                                <NewAccountFormPersonal\r\n                                    handleSubmit={handleSubmit}\r\n                                    showSuccessMessage={showSuccessMessage}\r\n                                />\r\n                            ) : (\r\n                                <NewAccountFormOrganisation\r\n                                    handleSubmit={handleSubmit}\r\n                                    showSuccessMessage={showSuccessMessage}\r\n                                />\r\n                            )}\r\n                            <br />\r\n\r\n                            {showError ? (\r\n                                <Row>\r\n                                    <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                                        {errorMessage}\r\n                                    </Alert>\r\n                                </Row>\r\n                            ) : null}\r\n                        </>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nfunction NewAccountWithProvider() {\r\n    const RE_CAPTCHA_KEY = process.env.REACT_APP_RE_CAPTCHA_KEY;\r\n\r\n    return (\r\n        <GoogleReCaptchaProvider reCaptchaKey={RE_CAPTCHA_KEY} language={'nl'}>\r\n            <NewAccount />\r\n        </GoogleReCaptchaProvider>\r\n    );\r\n}\r\n\r\nexport default NewAccountWithProvider;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NewAccountSuccess = () => {\r\n    return (\r\n        <Container fluid className=\"authorization-container text-light\">\r\n            <Row className=\"justify-content-center align-content-center full-height\">\r\n                <Col xs=\"12\" sm=\"10\" md=\"8\" lg=\"6\" xl=\"4\">\r\n                    <img src=\"images/logo.png\" alt=\"\" className=\"image logo-container\" />\r\n                    <div>\r\n                        <h3 className={'text-light'}>Een E-mail is onderweg!</h3>\r\n                        <p className={'text-light'}>\r\n                            Binnen enkele minuten ontvang je een e-mail met een persoonlijke link. Via deze link kun je\r\n                            je account activeren.\r\n                        </p>\r\n                        <Link to={'/login'} className=\"authorization-link\">\r\n                            Terug naar inloggen\r\n                        </Link>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default NewAccountSuccess;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport TextBlock from '../../../components/general/TextBlock';\r\nimport PortalUserAPI from '../../../api/portal-user/PortalUserAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst validationSchema = Yup.object({\r\n    email: Yup.string()\r\n        .email('Geen geldig e-mailadres')\r\n        .required('Verplicht'),\r\n});\r\n\r\nfunction ChangeAccountEmail() {\r\n    const [portalUserEmail, setPortalUserEmail] = useState('');\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const [showError, toggleError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (function callFetchUserEmail() {\r\n            PortalUserAPI.fetchPortalUserEmail()\r\n                .then(payload => {\r\n                    setPortalUserEmail(payload.data);\r\n                })\r\n                .catch(error => {\r\n                    alert('Er is iets misgegaan met laden. Herlaad de pagina opnieuw.');\r\n                });\r\n        })();\r\n    }, []);\r\n    function handleSubmitChangeEmail(values, actions) {\r\n        PortalUserAPI.changeEmail(values)\r\n            .then(payload => {\r\n                setPortalUserEmail(values.email);\r\n                actions.resetForm();\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                toggleError(true);\r\n                toggleSuccessMessage(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', changePrimaryEmailAddress: false }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitChangeEmail(values, actions);\r\n            }}\r\n        >\r\n            {({ touched, errors, isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    {showSuccessMessage ? (\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <Alert className={'p-1 m-1 text-success'} variant={'success'}>\r\n                                    Inlog e-mail is succesvol gewijzigd!\r\n                                </Alert>\r\n                            </Col>\r\n                        </Row>\r\n                    ) : null}\r\n                    {showError ? (\r\n                        <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                            Fout bij wijzigen inlog e-mail!\r\n                        </Alert>\r\n                    ) : null}\r\n\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                            <FormLabel className={'field-label'}>Huidig e-mailadres</FormLabel>\r\n                            <TextBlock>{portalUserEmail}</TextBlock>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Form.Label className={'field-label pt-1'}>Nieuw e-mailadres</Form.Label>\r\n                            <Field\r\n                                name=\"email\"\r\n                                render={({ field }) => (\r\n                                    <InputText field={field} errors={errors} touched={touched} id=\"email\" />\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Field\r\n                                name=\"changePrimaryEmailAddress\"\r\n                                render={({ field }) => (\r\n                                    <label className=\"w-checkbox checkbox-fld\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            {...field}\r\n                                            id=\"change-primary-email-address\"\r\n                                            checked={field.value}\r\n                                            className=\"w-checkbox-input checkbox\"\r\n                                        />\r\n                                        <span\r\n                                            htmlFor=\"change-primary-email-address\"\r\n                                            className=\"checkbox-label w-form-label\"\r\n                                        >\r\n                                            Wijziging ook doorvoeren op huidig correspondentie e-mailadres?\r\n                                        </span>\r\n                                    </label>\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={6}>\r\n                            <ButtonText\r\n                                buttonText={'Wijzig e-mailadres'}\r\n                                size=\"sm\"\r\n                                type={'submit'}\r\n                                loading={isSubmitting}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default ChangeAccountEmail;\r\n","import React, { useState } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Field, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport InputText from '../../../components/form/InputText';\r\nimport ButtonText from '../../../components/button/ButtonText';\r\nimport PortalUserAPI from '../../../api/portal-user/PortalUserAPI';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n        .min(10, 'Minimum van ${min} verplicht')\r\n        .matches(/([0-9])/, 'Minimaal 1 cijfer is verplicht')\r\n        .matches(/([A-Z])/, 'Minimaal 1 hoofdletter is verplicht')\r\n        .required('Verplicht'),\r\n    passwordConfirmation: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Wachtwoorden moeten gelijk zijn')\r\n        .required('Verplicht'),\r\n});\r\n\r\nfunction ChangeAccountPassword() {\r\n    const [showSuccessMessage, toggleSuccessMessage] = useState(false);\r\n    const [showError, toggleError] = useState(false);\r\n\r\n    function handleSubmitChangePassword(values, actions) {\r\n        PortalUserAPI.changePassword(values)\r\n            .then(payload => {\r\n                actions.resetForm();\r\n                toggleError(false);\r\n                toggleSuccessMessage(true);\r\n                actions.setSubmitting(false);\r\n            })\r\n            .catch(error => {\r\n                actions.setSubmitting(false);\r\n                toggleError(true);\r\n                toggleSuccessMessage(false);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ password: '', passwordConfirmation: '' }}\r\n            validationSchema={validationSchema}\r\n            onSubmit={function(values, actions) {\r\n                handleSubmitChangePassword(values, actions);\r\n            }}\r\n        >\r\n            {({ touched, errors, isSubmitting, handleSubmit }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    {showSuccessMessage ? (\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <Alert className={'p-1 m-1 text-success'} variant={'success'}>\r\n                                    Wachtwoord is succesvol gewijzigd!\r\n                                </Alert>\r\n                            </Col>\r\n                        </Row>\r\n                    ) : null}\r\n                    {showError ? (\r\n                        <Alert className={'p-1 m-1 text-danger'} variant={'danger'}>\r\n                            Fout bij wijzigen wachtwoord!\r\n                        </Alert>\r\n                    ) : null}\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Form.Label className={'field-label'}>Nieuw wachtwoord</Form.Label>\r\n                            <Field\r\n                                name=\"password\"\r\n                                render={({ field }) => (\r\n                                    <InputText\r\n                                        field={field}\r\n                                        id=\"password\"\r\n                                        className={field.value ? 'content numeric-password' : 'content'}\r\n                                        placeholder={'Nieuw wachtwoord'}\r\n                                        errors={errors}\r\n                                        touched={touched}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} md={9}>\r\n                            <Form.Label className={'field-label mt-0'}>Herhaal nieuw wachtwoord</Form.Label>\r\n                            <Field\r\n                                name=\"passwordConfirmation\"\r\n                                render={({ field }) => (\r\n                                    <InputText\r\n                                        field={field}\r\n                                        id=\"passwordConfirmation\"\r\n                                        className={field.value ? 'content numeric-password' : 'content'}\r\n                                        placeholder={'Herhaal nieuw wachtwoord'}\r\n                                        errors={errors}\r\n                                        touched={touched}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col xs={12} md={6}>\r\n                            <ButtonText\r\n                                buttonText={'Wijzig wachtwoord'}\r\n                                size=\"sm\"\r\n                                type={'submit'}\r\n                                loading={isSubmitting}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default ChangeAccountPassword;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ChangeAccountEmail from './Email';\r\nimport ChangeAccountPassword from './Password';\r\n\r\nfunction ChangeAccount() {\r\n    return (\r\n        <Container className={'content-section'}>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"content-heading\">Wijzig inloggegevens</h1>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} md={6} className={'mb-5'}>\r\n                    <h3 className={'h3'}>Wijzig inlog e-mailadres</h3>\r\n\r\n                    <ChangeAccountEmail />\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <h3 className={'h3'}>Wijzig wachtwoord</h3>\r\n\r\n                    <ChangeAccountPassword />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ChangeAccount;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Switch } from 'react-router-dom';\r\nimport ProtectedRoute from './route/ProtectedRoute';\r\nimport PublicRoute from './route/PublicRoute';\r\nimport { AuthProvider } from './context/AuthContext';\r\nimport { PortalUserProvider } from './context/PortalUserContext';\r\nimport Login from './container/authorization/login';\r\nimport Register from './container/authorization/register';\r\nimport Forgot from './container/authorization/forgot';\r\nimport Reset from './container/authorization/reset';\r\nimport ContactDetails from './container/contact-details';\r\nimport MyAreasOfInterest from './container/my-areas-of-interest';\r\nimport RegisterProject from './container/register';\r\nimport ProjectList from './container/project/list';\r\nimport ProjectDetails from './container/project/details';\r\nimport RegistrationList from './container/registration/list';\r\nimport NewAccount from './container/authorization/new-account';\r\nimport NewAccountSuccess from './container/authorization/new-account/NewAccountSuccess';\r\nimport ChangeAccount from './container/authorization/change-account';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <AuthProvider>\r\n                <PortalUserProvider>\r\n                    <Switch>\r\n                        <ProtectedRoute exact path=\"/\" component={ContactDetails} />\r\n                        <ProtectedRoute path=\"/gegevens\" component={ContactDetails} />\r\n                        <ProtectedRoute path=\"/mijn-interessegebieden\" component={MyAreasOfInterest} />\r\n                        <ProtectedRoute path=\"/inschrijven/:id\" component={RegisterProject} />\r\n                        <ProtectedRoute path=\"/inschrijven-projecten\" component={ProjectList} />\r\n                        <ProtectedRoute path=\"/inschrijvingen-projecten\" component={RegistrationList} />\r\n                        <ProtectedRoute path=\"/project/:id\" component={ProjectDetails} />\r\n                        <ProtectedRoute path=\"/wijzig-inloggegevens\" component={ChangeAccount} />\r\n                        <PublicRoute path=\"/login\" component={Login} />\r\n                        <PublicRoute path=\"/activeer-registratie/:registrationCode/:email\" component={Register} />\r\n                        <PublicRoute path=\"/wachtwoord-vergeten\" component={Forgot} />\r\n                        <PublicRoute path=\"/wachtwoord-wijzigen/:token/:email\" component={Reset} />\r\n                        <PublicRoute path=\"/nieuw-account\" component={NewAccount} />\r\n                        <PublicRoute path=\"/nieuw-account-succes\" component={NewAccountSuccess} />\r\n                    </Switch>\r\n                </PortalUserProvider>\r\n            </AuthProvider>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/normalize.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-day-picker/lib/style.css';\r\nimport './css/webflow.css';\r\nimport './css/econobis.webflow.css';\r\n// import './css/econobis-portal.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'moment/locale/nl';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// Server data is set and can now removed\r\nvar serverDataScript = document.getElementById('server-data');\r\nserverDataScript.remove();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}